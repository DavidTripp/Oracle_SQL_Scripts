SELECT NULL TRANSACTION_ID, NULL START_DATE, NULL SID, NULL INST, 
  NULL INTERVAL_S, NULL UBLKS_USED, NULL UBLKS_DIFF_PER_S, 
  NULL ACTIVITY, NULL ROLLBACK_END_TIME FROM DUAL WHERE 1 = 0
UNION ALL (
SELECT NULL TRANSACTION_ID, NULL START_DATE, NULL SID, NULL INST, 
  NULL INTERVAL_S, NULL UBLKS_USED, NULL UBLKS_DIFF_PER_S, 
  NULL ACTIVITY, NULL ROLLBACK_END_TIME FROM DUAL WHERE 1 = 0
) UNION ALL ( SELECT * FROM (
WITH BASIS_INFO AS
( SELECT
    DECODE(INSTANCE_NUMBER, -1, USERENV('INSTANCE'), INSTANCE_NUMBER) INSTANCE_NUMBER,
    SESSION_ID,
    TRANSACTION_ID,
    UNDO_BLOCKS_THRESHOLD,
    ONLY_ROLLBACK,
    SLEEP_CYCLES
  FROM
  ( SELECT
      -1 INSTANCE_NUMBER,             /* -1 for current instance, -2 for all instances */
      -1 SESSION_ID,
      '%' TRANSACTION_ID,
      -1 UNDO_BLOCKS_THRESHOLD,
      ' ' ONLY_ROLLBACK,
      10 SLEEP_CYCLES
    FROM
      DUAL
  )
),
CYCLES AS
( SELECT
    ROWNUM CNT
  FROM
    BASIS_INFO BI,
    V$SESSTAT SS
  WHERE
    ROWNUM <= BI.SLEEP_CYCLES
),
TIME_1 AS
( SELECT /*+ MATERIALIZE */
    CTIME SECONDS
  FROM
    V$LOCK
  WHERE
    TYPE = 'MR' AND
    ROWNUM = 1
),
SAMPLE_1 AS
( SELECT /*+ MATERIALIZE */
    START_DATE,
    SID,
    INST_ID,
    TRANSACTION_ID,
    UNDO_BLOCKS_USED,
    FAST_START
  FROM
  ( SELECT
      S.SID SID,
      S.INST_ID INST_ID,
      T.XID TRANSACTION_ID,
      T.START_DATE,
      T.USED_UBLK UNDO_BLOCKS_USED,
      ' ' FAST_START
    FROM
      BASIS_INFO BI,
      GV$TRANSACTION T, 
      GV$SESSION S 
    WHERE
      ( BI.INSTANCE_NUMBER = -2 OR T.INST_ID = BI.INSTANCE_NUMBER ) AND
      (BI.SESSION_ID = -1 OR S.SID = BI.SESSION_ID ) AND
      T.XID LIKE BI.TRANSACTION_ID AND
      S.SADDR = T.SES_ADDR AND
      S.INST_ID = T.INST_ID AND
      ( BI.UNDO_BLOCKS_THRESHOLD = -1 OR 
        T.USED_UBLK >= BI.UNDO_BLOCKS_THRESHOLD ) 
    UNION ALL
    ( SELECT
        NULL SID,
        NULL INST_ID,
        T.XID TRANSACTION_ID,
        NULL START_DATE,
        T.UNDOBLOCKSTOTAL - T.UNDOBLOCKSDONE UNDO_BLOCKS_USED,
        'X' FAST_START
      FROM
        BASIS_INFO BI,
        GV$FAST_START_TRANSACTIONS T
      WHERE
        ( BI.INSTANCE_NUMBER = -2 OR T.INST_ID = BI.INSTANCE_NUMBER ) AND
        T.XID (+) LIKE BI.TRANSACTION_ID AND
        ( BI.UNDO_BLOCKS_THRESHOLD = -1 OR 
          T.UNDOBLOCKSTOTAL - T.UNDOBLOCKSDONE >= BI.UNDO_BLOCKS_THRESHOLD ) 
    )
    ORDER BY
      UNDO_BLOCKS_USED DESC 
  )
),
SLEEPING AS
( SELECT /*+ MATERIALIZE */
    1
  FROM
    V$SESSTAT SS,
    CYCLES C
),
TIME_2 AS
( SELECT /*+ MATERIALIZE */
    CTIME SECONDS
  FROM
    V$LOCK
  WHERE
    TYPE = 'MR' AND
    ROWNUM = 1
),
SAMPLE_2 AS
( SELECT /*+ MATERIALIZE */
    START_DATE,
    SID,
    INST_ID,
    TRANSACTION_ID,
    UNDO_BLOCKS_USED,
    FAST_START
  FROM
  ( SELECT
      S.SID SID,
      S.INST_ID INST_ID,
      T.XID TRANSACTION_ID,
      T.START_DATE,
      T.USED_UBLK UNDO_BLOCKS_USED,
      ' ' FAST_START
    FROM
      BASIS_INFO BI,
      GV$TRANSACTION T, 
      GV$SESSION S
    WHERE
      ( BI.INSTANCE_NUMBER = -2 OR T.INST_ID = BI.INSTANCE_NUMBER ) AND
      ( BI.SESSION_ID = -1 OR S.SID = BI.SESSION_ID ) AND
      T.XID LIKE BI.TRANSACTION_ID AND
      S.SADDR = T.SES_ADDR AND
      S.INST_ID = T.INST_ID AND
      ( BI.UNDO_BLOCKS_THRESHOLD = -1 OR 
        T.USED_UBLK >= BI.UNDO_BLOCKS_THRESHOLD ) 
    UNION ALL
    ( SELECT
        NULL SID,
        NULL INST_ID,
        T.XID TRANSACTION_ID,
        NULL START_DATE,
        T.UNDOBLOCKSTOTAL - T.UNDOBLOCKSDONE UNDO_BLOCKS_USED,
        'X' FAST_START
      FROM
        BASIS_INFO BI,
        GV$FAST_START_TRANSACTIONS T
      WHERE
        ( BI.INSTANCE_NUMBER = -2 OR T.INST_ID = BI.INSTANCE_NUMBER ) AND
        T.XID (+) LIKE BI.TRANSACTION_ID AND
        ( BI.UNDO_BLOCKS_THRESHOLD = -1 OR 
          T.UNDOBLOCKSTOTAL - T.UNDOBLOCKSDONE >= BI.UNDO_BLOCKS_THRESHOLD ) 
    )
    ORDER BY
      UNDO_BLOCKS_USED DESC 
  )
)
SELECT
  'Evaluation date:' TRANSACTION_ID,
  TO_CHAR(SYSDATE, 'dd.mm.yyyy hh24:mi:ss') START_DATE, 
  NULL SID, NULL INST, 
  NULL INTERVAL_S, NULL UBLKS_USED, NULL UBLKS_DIFF_PER_S, 
  NULL ACTIVITY, NULL ROLLBACK_END_TIME 
FROM
  DUAL
UNION ALL
( SELECT
    NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL
  FROM
    DUAL
)
UNION ALL
( SELECT
  *
  FROM
  ( SELECT
      TO_CHAR(RAWTOHEX(S1.TRANSACTION_ID)) TRANSACTION_ID,
      NVL(TO_CHAR(S1.START_DATE, 'dd.mm.yyyy hh24:mi:ss'), 'n/a') START_DATE,
      TO_CHAR(S1.SID, 99990) SID,
      TO_CHAR(S1.INST_ID, 9990) INST,
      TO_CHAR(ROUND(T2.SECONDS - T1.SECONDS), 999999990) INTERVAL_S,
      TO_CHAR(S1.UNDO_BLOCKS_USED, 999999990) UBLKS_USED,
      TO_CHAR(DECODE(T2.SECONDS - T1.SECONDS, 0, 0, 
        (S2.UNDO_BLOCKS_USED - S1.UNDO_BLOCKS_USED) / 
        (T2.SECONDS - T1.SECONDS)), 
        999999999990.99) UBLKS_DIFF_PER_S,
      DECODE(S2.FAST_START, 'X', 'FAST START ROLLBACK',
        DECODE(SIGN(S2.UNDO_BLOCKS_USED - S1.UNDO_BLOCKS_USED), -1, 
        'ROLLBACK', 'TRANSACTION')) ACTIVITY,
      DECODE(SIGN(S2.UNDO_BLOCKS_USED - S1.UNDO_BLOCKS_USED), -1,
        TO_CHAR(SYSDATE + (T2.SECONDS - T1.SECONDS) * 
        S1.UNDO_BLOCKS_USED / ( S1.UNDO_BLOCKS_USED - 
        S2.UNDO_BLOCKS_USED ) / 86400, 
        'dd.mm.yyyy hh24:mi:ss')) ROLLBACK_END_TIME
    FROM
      BASIS_INFO BI,
      TIME_1 T1,
      TIME_2 T2,
      SAMPLE_1 S1,
      SAMPLE_2 S2
    WHERE
      NVL(S1.SID, 0) = NVL(S2.SID, 0) AND
      NVL(S1.INST_ID, 0) = NVL(S2.INST_ID, 0) AND
      S1.TRANSACTION_ID = S2.TRANSACTION_ID AND
      ( BI.ONLY_ROLLBACK != 'X' OR 
        S2.UNDO_BLOCKS_USED < S1.UNDO_BLOCKS_USED )
    ORDER BY
      S1.UNDO_BLOCKS_USED DESC
  )
  UNION ALL
  ( SELECT NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL 
    FROM SLEEPING WHERE 1 = 0 )
)
));



