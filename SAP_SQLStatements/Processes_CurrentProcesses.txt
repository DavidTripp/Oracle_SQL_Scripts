SELECT NULL OPID, NULL SPID, NULL SID, NULL PTYPE, NULL PROGRAM, 
  NULL PGA_ALLOC_MEM, NULL PGA_MAX_MEM FROM DUAL
UNION ALL (
SELECT NULL OPID, NULL SPID, NULL SID, NULL PTYPE, NULL PROGRAM, 
  NULL PGA_ALLOC_MEM, NULL PGA_MAX_MEM FROM DUAL
) UNION ALL ( SELECT * FROM (
WITH BASIS_INFO AS
( SELECT
    DECODE(INSTANCE_NUMBER, -1, USERENV('INSTANCE'), INSTANCE_NUMBER) INSTANCE_NUMBER,
    PROCESS_TYPE,
    OPID,
    ONLY_PROCESSES_WITHOUT_SESSION
  FROM
  ( SELECT
      -1  INSTANCE_NUMBER,   /* -1 for current instance, -2 for all instances */
      '%' PROCESS_TYPE,      /* FOREGROUND, BACKGROUND, % */
      -1 OPID,         /* Oracle process ID */
      ' ' ONLY_PROCESSES_WITHOUT_SESSION 
    FROM 
      DUAL
  )
)
SELECT
  TO_CHAR(P.PID, 99990) OPID,
  TO_CHAR(P.SPID, 999999990) SPID,
  TO_CHAR(S.SID, 99990) SID,
  DECODE(P.BACKGROUND, 1, 'BG', 'FG') PTYPE,
  NVL(NVL(NVL(BP.NAME, P.PNAME), S.PROGRAM), S.MODULE) PROGRAM,
  TO_CHAR(P.PGA_ALLOC_MEM / 1024 / 1024, 999999990.99) ,
  TO_CHAR(P.PGA_MAX_MEM / 1024 / 1024, 9999990.99) PGA_MAX_MB
FROM
  BASIS_INFO BI,
  GV$PROCESS P,
  GV$BGPROCESS BP,
  GV$SESSION S
WHERE
  ( BI.INSTANCE_NUMBER = -2 OR P.INST_ID = BI.INSTANCE_NUMBER ) AND
  ( BI.OPID = -1 OR P.PID = BI.OPID ) AND
  BP.INST_ID (+) = P.INST_ID AND
  BP.PADDR (+) = P.ADDR AND
  S.INST_ID (+) = P.INST_ID AND
  S.PADDR (+) = P.ADDR AND
  ( BI.PROCESS_TYPE = '%' OR
    BI.PROCESS_TYPE = 'FOREGROUND' AND P.BACKGROUND IS NULL OR
    BI.PROCESS_TYPE = 'BACKGROUND' AND P.BACKGROUND = 1 ) AND
  ( BI.ONLY_PROCESSES_WITHOUT_SESSION = ' ' OR S.SID IS NULL )
ORDER BY
  PTYPE, PROGRAM
));

  

