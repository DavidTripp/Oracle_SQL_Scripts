SELECT /*+ ALLOW_HINTS */
  NULL LINE FROM DUAL WHERE 1 = 0
UNION ALL (
SELECT NULL LINE FROM DUAL WHERE 1 = 0
) UNION ALL ( SELECT * FROM (
WITH BASIS_INFO AS
( SELECT /*+ INLINE */
    USER OWNER,
    'TABLE' OBJECT_TYPE,
    'CE1BAT0' OBJECT_NAME,
    'X' COMPLEX_SQL_TEXT,      /* deactivation for large SQL statements useful */
    ' ' COMMA_AS_SPLITTER,
    'X' BLANK_AS_SPLITTER     
  FROM
    DUAL
),
SQL_TEXT_LOB AS 
( SELECT /*+ INLINE */
    SQL_TEXT,
    DBMS_LOB.GETLENGTH("SQL_TEXT") LENGTH,
    LENGTH(REGEXP_REPLACE(SQL_TEXT, '[^ ]', '')) NUM_BLANKS,
    LENGTH(REGEXP_REPLACE(SQL_TEXT, '[^,]', '')) NUM_COMMA
  FROM
  ( SELECT
      DBMS_METADATA.GET_DDL(BI.OBJECT_TYPE, BI.OBJECT_NAME, BI.OWNER) SQL_TEXT
    FROM
      BASIS_INFO BI
  )
),
START_POSITIONS AS
( SELECT 
    DECODE(ROWNUM, 
      1, 1, 
      NUM_BLANKS + 2, LENGTH + 1, 
      DBMS_LOB.INSTR(STL.SQL_TEXT, ' ', 1, ROWNUM - 1) + 1) POS
  FROM
    BASIS_INFO BI,
    SQL_TEXT_LOB STL,
    ( SELECT 1 FROM V$SESSTAT, V$SESSTAT WHERE ROWNUM <= 
      ( SELECT NUM_BLANKS + 2 FROM SQL_TEXT_LOB)
    )
  WHERE
    BI.COMPLEX_SQL_TEXT = 'X' AND
    BI.BLANK_AS_SPLITTER = 'X'
  UNION
  ( SELECT 
      DECODE(ROWNUM, 
        1, 1, 
        NUM_COMMA + 2, LENGTH + 1, 
        DBMS_LOB.INSTR(STL.SQL_TEXT, ',', 1, ROWNUM - 1) + 1) POS
    FROM
      BASIS_INFO BI,
      SQL_TEXT_LOB STL,
      ( SELECT 1 FROM V$SESSTAT, V$SESSTAT WHERE ROWNUM <= 
        ( SELECT NUM_COMMA + 2 FROM SQL_TEXT_LOB)
      )
    WHERE
      BI.COMPLEX_SQL_TEXT = 'X' AND
      BI.COMMA_AS_SPLITTER = 'X'
  )
),
START_END_POSITIONS AS
( SELECT 
    POS1,
    NVL(POS2, POS_OVERFLOW) POS2
  FROM
  ( SELECT
      SP1.POS POS1,
      MAX(SP2.POS) POS2,
      MIN(SP3.POS) POS_OVERFLOW
    FROM
      START_POSITIONS SP1,
      START_POSITIONS SP2,
      START_POSITIONS SP3
    WHERE
      SP2.POS (+) BETWEEN SP1.POS + 1 AND SP1.POS + 80 AND
      SP3.POS > SP1.POS
    GROUP BY
      SP1.POS
  )
),
START_END_LINE_POSITIONS AS
( SELECT  
    POS1,
    POS2
  FROM
    START_END_POSITIONS
  START WITH
    POS1 = 1
  CONNECT BY PRIOR 
    POS2 = POS1
  UNION ALL
  ( SELECT
      (R.ROWNUMBER - 1) * 80 + 1 POS1,
      R.ROWNUMBER * 80 + 1 POS2
    FROM
      BASIS_INFO BI,
      SQL_TEXT_LOB STL,
      ( SELECT ROWNUM ROWNUMBER FROM V$SESSTAT WHERE ROWNUM <= 1000 ) R
    WHERE
      BI.COMPLEX_SQL_TEXT = ' ' AND
      R.ROWNUMBER * 80 <= LENGTH(STL.SQL_TEXT) + 80
  )
)
SELECT
  TRANSLATE(DBMS_LOB.SUBSTR(STL.SQL_TEXT, SEP.POS2 - SEP.POS1, SEP.POS1), CHR(10) || CHR(9), ' ') LINE
FROM
  START_END_LINE_POSITIONS SEP, 
  SQL_TEXT_LOB STL
ORDER BY SEP.POS1
));
