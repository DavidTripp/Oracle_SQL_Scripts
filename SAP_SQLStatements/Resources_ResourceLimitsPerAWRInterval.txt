SELECT  NULL BEGIN_TIME, NULL PROC_USED, NULL PROC_PCT, NULL SESS_USED, NULL SESS_PCT,
  NULL ENQ_USED, NULL ENQ_PCT, NULL PX_USED, NULL PX_PCT FROM DUAL WHERE 1 = 0
UNION ALL (
SELECT  NULL BEGIN_TIME, NULL PROC_USED, NULL PROC_PCT, NULL SESS_USED, NULL SESS_PCT,
  NULL ENQ_USED, NULL ENQ_PCT, NULL PX_USED, NULL PX_PCT FROM DUAL WHERE 1 = 0
) UNION ALL ( SELECT * FROM (
WITH BASIS_INFO AS
( SELECT /*+ MATERIALIZE */
    DECODE(DBID, -1, OWN_DBID, DBID) DBID,
    DECODE(INSTANCE_NUMBER, -1, USERENV('INSTANCE'), INSTANCE_NUMBER) INSTANCE_NUMBER,
    BEGIN_DATE,
    END_DATE,
    VALUE_TYPE,
    TO_TIMESTAMP(TO_CHAR(BEGIN_DATE, 'dd.mm.yyyy hh24:mi:ss'), 
      'dd.mm.yyyy hh24:mi:ss') BEGIN_TIME,
    TO_TIMESTAMP(TO_CHAR(END_DATE, 'dd.mm.yyyy hh24:mi:ss'), 
      'dd.mm.yyyy hh24:mi:ss') END_TIME
  FROM
  ( SELECT
      -1 DBID,
      -1 INSTANCE_NUMBER,
      'CURRENT' VALUE_TYPE,              /* CURRENT -> current alocation, MAXIMUM -> maximum allocation since last database start */          
      TO_DATE('01.01.1000 01:04:00', 'dd.mm.yyyy hh24:mi:ss') BEGIN_DATE,
      TO_DATE('31.12.9999 01:05:00', 'dd.mm.yyyy hh24:mi:ss') END_DATE
    FROM
      DUAL
  ),
  ( SELECT DBID OWN_DBID FROM V$DATABASE )
),
SNAPSHOTS AS
( SELECT 
    HSS.DBID,
    HSS.INSTANCE_NUMBER,
    HSS.SNAP_ID,
    HSS.BEGIN_INTERVAL_TIME BEGIN_TIME
  FROM 
    DBA_HIST_SNAPSHOT HSS,
    BASIS_INFO BI
  WHERE
    HSS.DBID = BI.DBID AND
    HSS.INSTANCE_NUMBER = BI.INSTANCE_NUMBER AND
    HSS.END_INTERVAL_TIME >= BI.BEGIN_TIME AND
    HSS.BEGIN_INTERVAL_TIME <= BI.END_TIME 
)
SELECT
  'VALUE TYPE: ' || VALUE_TYPE BEGIN_TIME,
  NULL PROC_USED,
  NULL PROC_PCT,
  NULL SESS_USED,
  NULL SESS_PCT,
  NULL ENQ_USED,
  NULL ENQ_PCT,
  NULL PX_USED,
  NULL PX_PCT
FROM
  BASIS_INFO
UNION ALL
( SELECT
    NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL 
  FROM DUAL
)
UNION ALL
( SELECT
    *
  FROM
  ( SELECT
      TO_CHAR(BEGIN_TIME, 'dd.mm.yyyy hh24:mi:ss') BEGIN_TIME,
      TO_CHAR(PROCESSES, 99999990) PROC_USED,
      TO_CHAR(DECODE(PROCESSES_LIMIT, 0, 0, PROCESSES / PROCESSES_LIMIT * 100), 9990.99) PROC_PCT,
      TO_CHAR(SESSIONS, 99999990) SESS_USED,
      TO_CHAR(DECODE(SESSIONS_LIMIT, 0, 0, SESSIONS / SESSIONS_LIMIT * 100), 9990.99) SESS_PCT,
      TO_CHAR(ENQUEUES, 9999990) ENQ_USED,
      TO_CHAR(DECODE(ENQUEUES_LIMIT, 0, 0, ENQUEUES / ENQUEUES_LIMIT * 100), 990.99) ENQ_PCT,
      TO_CHAR(PX_SLAVES, 999990) PX_USED,
      TO_CHAR(DECODE(PX_SLAVES_LIMIT, 0, 0, PX_SLAVES / PX_SLAVES_LIMIT * 100), 990.99) PX_PCT
    FROM
    ( SELECT
        SS.BEGIN_TIME,
        SUM(DECODE(RL.RESOURCE_NAME, 'processes', DECODE(BI.VALUE_TYPE, 'CURRENT', RL.CURRENT_UTILIZATION, RL.MAX_UTILIZATION), 0)) PROCESSES,  
        SUM(DECODE(RL.RESOURCE_NAME, 'processes', RL.INITIAL_ALLOCATION, 0)) PROCESSES_LIMIT,
        SUM(DECODE(RL.RESOURCE_NAME, 'sessions', DECODE(BI.VALUE_TYPE, 'CURRENT', RL.CURRENT_UTILIZATION, RL.MAX_UTILIZATION), 0)) SESSIONS,
        SUM(DECODE(RL.RESOURCE_NAME, 'sessions', RL.INITIAL_ALLOCATION, 0)) SESSIONS_LIMIT,
        SUM(DECODE(RL.RESOURCE_NAME, 'enqueue_locks', DECODE(BI.VALUE_TYPE, 'CURRENT', RL.CURRENT_UTILIZATION, RL.MAX_UTILIZATION), 0)) ENQUEUES,
        SUM(DECODE(RL.RESOURCE_NAME, 'enqueue_locks', RL.INITIAL_ALLOCATION, 0)) ENQUEUES_LIMIT,
        SUM(DECODE(RL.RESOURCE_NAME, 'parallel_max_servers', DECODE(BI.VALUE_TYPE, 'CURRENT', RL.CURRENT_UTILIZATION, RL.MAX_UTILIZATION), 0)) PX_SLAVES,
        SUM(DECODE(RL.RESOURCE_NAME, 'parallel_max_servers', RL.INITIAL_ALLOCATION, 0)) PX_SLAVES_LIMIT,
        SS.SNAP_ID
      FROM
        BASIS_INFO BI,
        SNAPSHOTS SS,
        DBA_HIST_RESOURCE_LIMIT RL
      WHERE
        SS.DBID = RL.DBID AND
        SS.INSTANCE_NUMBER = RL.INSTANCE_NUMBER AND
        SS.SNAP_ID = RL.SNAP_ID
      GROUP BY
        SS.BEGIN_TIME,
        SS.SNAP_ID 
    )
    ORDER BY
      SNAP_ID DESC
  )
)
));
