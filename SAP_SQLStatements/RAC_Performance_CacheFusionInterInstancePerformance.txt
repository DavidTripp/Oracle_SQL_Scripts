SELECT
NULL BEGIN_TIME, NULL CONNECTION, 
NULL TOTAL_CR_BLOCK, NULL CR_FLUSH, NULL CR_LMS,
NULL AVG_CR_LATENCY_MS, NULL AVG_CR_FLUSH_MS, NULL AVG_CR_LMS_MS,
NULL TOTAL_CUR_BLOCK, NULL CUR_FLUSH, NULL CUR_LMS,
NULL AVG_CUR_LATENCY_MS, NULL AVG_CUR_FLUSH_MS, NULL AVG_CUR_LMS_MS
FROM DUAL WHERE 1=0 
UNION ALL
(
SELECT
NULL BEGIN_TIME, NULL CONNECTION, 
NULL TOTAL_CR_BLOCK, NULL CR_FLUSH, NULL CR_LMS,
NULL AVG_CR_LATENCY_MS, NULL AVG_CR_FLUSH_MS, NULL AVG_CR_LMS_MS,
NULL TOTAL_CUR_BLOCK, NULL CUR_FLUSH, NULL CUR_LMS,
NULL AVG_CUR_LATENCY_MS, NULL AVG_CUR_FLUSH_MS, NULL AVG_CUR_LMS_MS
FROM DUAL WHERE 1=0 
)
UNION ALL
(SELECT * FROM (
WITH BASIS_INFO AS
( SELECT /*+ MATERIALIZE */
    DECODE(DBID, -1, OWN_DBID, DBID) DBID,
    DECODE(INSTANCE_NUMBER, -1, USERENV('INSTANCE'), INSTANCE_NUMBER) INSTANCE_NUMBER,
    BEGIN_DATE,
    END_DATE,
    TO_TIMESTAMP(TO_CHAR(BEGIN_DATE, 'dd.mm.yyyy hh24:mi:ss'), 
      'dd.mm.yyyy hh24:mi:ss') BEGIN_TIME,
    TO_TIMESTAMP(TO_CHAR(END_DATE, 'dd.mm.yyyy hh24:mi:ss'), 
      'dd.mm.yyyy hh24:mi:ss') END_TIME,
    DECODE(AGGREGATE_BY,
      'SNAPSHOT',    'YYYY-MM-DD HH24:MI',
      'DAY',         'YYYY-MM-DD (DY)',
      'HOUR_OF_DAY', 'HH24',
      AGGREGATE_BY ) AGGREGATE_BY,
    EXCLUDE_WEEKENDS
	FROM
  ( SELECT
      -1 DBID,
      -2 INSTANCE_NUMBER,          /* -1: current instance, -2: all instances aggregated, -3: all instances individually */
      TO_DATE('01.01.1000 09:07:00', 'dd.mm.yyyy hh24:mi:ss') BEGIN_DATE,
      TO_DATE('31.12.9999 18:05:00', 'dd.mm.yyyy hh24:mi:ss') END_DATE,
      'DAY' AGGREGATE_BY,    /* SNAPSHOT, DAY, HOUR_OF_DAY or Oracle time pattern */
      ' ' EXCLUDE_WEEKENDS
    FROM
      DUAL
  ),
  ( SELECT DBID OWN_DBID FROM V$DATABASE )
),
SNAPSHOTS AS
(
SELECT /*+ MATERIALIZE */ 
    DBID,
    INSTANCE_NUMBER,
    SNAP_ID,
    PREV_SNAP_ID,
    MIN_SNAP_ID,
    BEGIN_INTERVAL_TIME,
    END_INTERVAL_TIME,
    INTERVAL_SECONDS,
    SUM(INTERVAL_SECONDS) OVER () TOTAL_SECONDS,
    RESTART
  FROM
  ( SELECT
      HSS2.DBID,
      HSS2.INSTANCE_NUMBER,
      HSS2.SNAP_ID,
      HSS1.SNAP_ID PREV_SNAP_ID,
      FIRST_VALUE(HSS2.SNAP_ID) OVER (ORDER BY HSS2.SNAP_ID) MIN_SNAP_ID,
      HSS2.BEGIN_INTERVAL_TIME,
      HSS2.END_INTERVAL_TIME,
      TO_CHAR(HSS2.END_INTERVAL_TIME, 'SSSSS') -
        TO_CHAR(HSS2.BEGIN_INTERVAL_TIME, 'SSSSS') +
        86400 * (TO_CHAR(HSS2.END_INTERVAL_TIME, 'J') - 
                 TO_CHAR(HSS2.BEGIN_INTERVAL_TIME, 'J'))
        INTERVAL_SECONDS,
      DECODE(HSS2.STARTUP_TIME, HSS1.STARTUP_TIME, 'NO', 'YES') RESTART
    FROM 
      BASIS_INFO BI,
      DBA_HIST_SNAPSHOT HSS1, 
      DBA_HIST_SNAPSHOT HSS2
    WHERE
      HSS2.DBID = BI.DBID AND
      HSS1.DBID (+) = HSS2.DBID AND
      ( BI.INSTANCE_NUMBER = -2 OR 
        BI.INSTANCE_NUMBER = -3 OR
        HSS2.INSTANCE_NUMBER = BI.INSTANCE_NUMBER
      ) AND
      HSS1.INSTANCE_NUMBER (+) = HSS2.INSTANCE_NUMBER AND
      HSS2.END_INTERVAL_TIME BETWEEN BI.BEGIN_TIME AND BI.END_TIME AND
      HSS1.SNAP_ID (+) = HSS2.SNAP_ID - 1
    ORDER BY
      HSS2.SNAP_ID
  )
),
INTER_INST_CF AS
(
	SELECT * FROM
	(
		SELECT
			BEGIN_INTERVAL_TIME,
			SNAP_ID,
			MIN_SNAP_ID,
			CONNECTION,
			INSTANCE_NUMBER,
			DECODE(RESTART,'YES', TOTAL_CR_BLOCK, 
				TOTAL_CR_BLOCK - LAG(TOTAL_CR_BLOCK,1) OVER (PARTITION BY CONNECTION ORDER BY BEGIN_INTERVAL_TIME)) TOTAL_CR_BLOCK,
			DECODE(RESTART,'YES', CR_BUSY_FLUSH,
				CR_BUSY_FLUSH - LAG(CR_BUSY_FLUSH,1) OVER (PARTITION BY CONNECTION ORDER BY BEGIN_INTERVAL_TIME)) CR_FLUSH,
			DECODE(RESTART,'YES', CR_BUSY_LMS,
				CR_BUSY_LMS - LAG(CR_BUSY_LMS,1) OVER (PARTITION BY CONNECTION ORDER BY BEGIN_INTERVAL_TIME)) CR_LMS,
			DECODE(RESTART,'YES', CR_BLOCK_TIME,
				CR_BLOCK_TIME - LAG(CR_BLOCK_TIME,1) OVER (PARTITION BY CONNECTION ORDER BY BEGIN_INTERVAL_TIME)) CR_BLOCK_TIME,
			DECODE(RESTART,'YES', CR_FLUSH_TIME,
				CR_FLUSH_TIME - LAG(CR_FLUSH_TIME,1) OVER (PARTITION BY CONNECTION ORDER BY BEGIN_INTERVAL_TIME)) CR_FLUSH_TIME,
			DECODE(RESTART,'YES', CR_LMS_TIME,
				CR_LMS_TIME - LAG(CR_LMS_TIME,1) OVER (PARTITION BY CONNECTION ORDER BY BEGIN_INTERVAL_TIME)) CR_LMS_TIME,
			DECODE(RESTART,'YES', TOTAL_CUR_BLOCK,
				TOTAL_CUR_BLOCK - LAG(TOTAL_CUR_BLOCK,1) OVER (PARTITION BY CONNECTION ORDER BY BEGIN_INTERVAL_TIME)) TOTAL_CUR_BLOCK,
			DECODE(RESTART,'YES', CUR_BUSY_FLUSH,
				CUR_BUSY_FLUSH - LAG(CUR_BUSY_FLUSH,1) OVER (PARTITION BY CONNECTION ORDER BY BEGIN_INTERVAL_TIME)) CUR_FLUSH,
			DECODE(RESTART,'YES', CUR_BUSY_LMS,
				CUR_BUSY_LMS - LAG(CUR_BUSY_LMS,1) OVER (PARTITION BY CONNECTION ORDER BY BEGIN_INTERVAL_TIME)) CUR_LMS,
			DECODE(RESTART,'YES', CUR_BLOCK_TIME,
				CUR_BLOCK_TIME - LAG(CUR_BLOCK_TIME,1) OVER (PARTITION BY CONNECTION ORDER BY BEGIN_INTERVAL_TIME)) CUR_BLOCK_TIME,
			DECODE(RESTART,'YES', CUR_FLUSH_TIME,
				CUR_FLUSH_TIME - LAG(CUR_FLUSH_TIME,1) OVER (PARTITION BY CONNECTION ORDER BY BEGIN_INTERVAL_TIME)) CUR_FLUSH_TIME,
			DECODE(RESTART,'YES', CUR_LMS_TIME,
				CUR_LMS_TIME - LAG(CUR_LMS_TIME,1) OVER (PARTITION BY CONNECTION ORDER BY BEGIN_INTERVAL_TIME)) CUR_LMS_TIME
		FROM
		(
		SELECT 
				SS.BEGIN_INTERVAL_TIME,
				SS.RESTART,
				SS.SNAP_ID,
				SS.MIN_SNAP_ID,
				DHICT.INSTANCE_NUMBER,
				TO_CHAR(DHICT.INSTANCE,'9')||'=>'||TO_CHAR(DHICT.INSTANCE_NUMBER,'9') CONNECTION,
				SUM(DHICT.CR_BLOCK)+SUM(DHICT.CR_BUSY)+SUM(DHICT.CR_CONGESTED) TOTAL_CR_BLOCK,
				SUM(DHICT.CR_BUSY) CR_BUSY_FLUSH,
				SUM(DHICT.CR_CONGESTED) CR_BUSY_LMS,
				SUM(DHICT.CR_BLOCK_TIME)+SUM(DHICT.CR_BUSY_TIME)+SUM(DHICT.CR_CONGESTED_TIME) CR_BLOCK_TIME,
				SUM(DHICT.CR_BUSY_TIME) CR_FLUSH_TIME,
				SUM(DHICT.CR_CONGESTED_TIME) CR_LMS_TIME,
				SUM(DHICT.CURRENT_BLOCK)+SUM(DHICT.CURRENT_BUSY)+SUM(DHICT.CURRENT_CONGESTED) TOTAL_CUR_BLOCK,
				SUM(DHICT.CURRENT_BUSY) CUR_BUSY_FLUSH,
				SUM(DHICT.CURRENT_CONGESTED) CUR_BUSY_LMS,
				SUM(DHICT.CURRENT_BLOCK_TIME)+SUM(DHICT.CURRENT_BUSY_TIME)+SUM(DHICT.CURRENT_CONGESTED_TIME) CUR_BLOCK_TIME,
				SUM(DHICT.CURRENT_BUSY_TIME) CUR_FLUSH_TIME,
				SUM(DHICT.CURRENT_CONGESTED_TIME) CUR_LMS_TIME
			FROM 
				DBA_HIST_INST_CACHE_TRANSFER DHICT,
				SNAPSHOTS SS
			WHERE         
				SS.DBID = DHICT.DBID AND
				SS.INSTANCE_NUMBER = DHICT.INSTANCE_NUMBER AND
				SS.SNAP_ID = DHICT.SNAP_ID 
			GROUP BY
				SS.BEGIN_INTERVAL_TIME, 
				DHICT.INSTANCE,
				DHICT.INSTANCE_NUMBER,
				SS.RESTART,
				SS.SNAP_ID,
				SS.MIN_SNAP_ID
			ORDER BY 
				SS.BEGIN_INTERVAL_TIME, 
				DHICT.INSTANCE
		)
	) WHERE SNAP_ID != MIN_SNAP_ID
)
SELECT * FROM (
SELECT
	DECODE(INSTANCE_NUMBER,0,'Since DB Start ('||TO_CHAR(MIN(STARTUP_TIME),'YYYY-MM-DD HH24:MI')||')',
						     'Since TgtInst. Start ('||TO_CHAR(MIN(STARTUP_TIME),'YYYY-MM-DD HH24:MI')||')') BEGIN_TIME,
	CONNECTION,
	SUM(TOTAL_CR_BLOCK) TOTAL_CR_BLOCK,
	TO_CHAR(SUM(CR_FLUSH),'99999999999990')||'('||TO_CHAR(SUM(CR_FLUSH)*100/SUM(TOTAL_CR_BLOCK),'90.99')||'%)' CR_FLUSH,
	TO_CHAR(SUM(CR_LMS),  '99999999999990')||'('||TO_CHAR(SUM(CR_LMS)*100/SUM(TOTAL_CR_BLOCK),'90.99')||'%)' CR_LMS,
	TO_CHAR(DECODE(SUM(TOTAL_CR_BLOCK),0,0,SUM(CR_BLOCK_TIME)/SUM(TOTAL_CR_BLOCK)/1000),'990.99') AVG_CR_LATENCY_MS,
	TO_CHAR(DECODE(SUM(CR_FLUSH),0,0,SUM(CR_FLUSH_TIME)/SUM(CR_FLUSH)/1000),'990.99') AVG_CR_FLUSH_MS,
	TO_CHAR(DECODE(SUM(CR_LMS),0,0,SUM(CR_LMS_TIME)/SUM(CR_LMS)/1000),'990.99') AVG_CR_LMS_MS,
	SUM(TOTAL_CUR_BLOCK) TOTAL_CUR_BLOCK,
	TO_CHAR(SUM(CUR_FLUSH),'99999999999990')||'('||TO_CHAR(SUM(CUR_FLUSH)*100/SUM(TOTAL_CUR_BLOCK),'90.99')||'%)' CUR_FLUSH,
	TO_CHAR(SUM(CUR_LMS),  '99999999999990')||'('||TO_CHAR(SUM(CUR_LMS)*100/SUM(TOTAL_CUR_BLOCK),'90.99')||'%)' CUR_LMS,
	TO_CHAR(DECODE(SUM(TOTAL_CUR_BLOCK),0,0,SUM(CUR_BLOCK_TIME)/SUM(TOTAL_CUR_BLOCK)/1000),'990.99') AVG_CUR_LATENCY_MS,	
	TO_CHAR(DECODE(SUM(CUR_FLUSH),0,0,SUM(CUR_FLUSH_TIME)/SUM(CUR_FLUSH)/1000),'990.99') AVG_CUR_FLUSH_MS,
	TO_CHAR(DECODE(SUM(CUR_LMS),0,0,SUM(CUR_LMS_TIME)/SUM(CUR_LMS)/1000),'990.99') AVG_CUR_LMS_MS		
FROM
(
	SELECT
		DECODE(BI.INSTANCE_NUMBER,-2,0,GVI.INSTANCE_NUMBER) INSTANCE_NUMBER,
		STARTUP_TIME,
		DECODE(BI.INSTANCE_NUMBER,-2,'X=>X', GVI.CONNECTION) CONNECTION,
		TOTAL_CR_BLOCK,CR_FLUSH,CR_LMS,
		CR_BLOCK_TIME,CR_FLUSH_TIME,CR_LMS_TIME,
		TOTAL_CUR_BLOCK,CUR_FLUSH,CUR_LMS,
		CUR_BLOCK_TIME,CUR_FLUSH_TIME,CUR_LMS_TIME
	FROM
	(
		SELECT   
			GVICT.INST_ID INSTANCE_NUMBER,
			GVI.STARTUP_TIME STARTUP_TIME,
			TO_CHAR(GVICT.INSTANCE,'9')||'=>'||TO_CHAR(GVICT.INST_ID,'9') CONNECTION,
			SUM(CR_BLOCK)+SUM(CR_BUSY)+SUM(CR_CONGESTED) TOTAL_CR_BLOCK,
			SUM(CR_BUSY) CR_FLUSH, 
			SUM(CR_CONGESTED) CR_LMS,
			SUM(CR_BLOCK_TIME)+SUM(CR_BUSY_TIME)+SUM(CR_CONGESTED_TIME) CR_BLOCK_TIME,
			SUM(CR_BUSY_TIME) CR_FLUSH_TIME,
			SUM(CR_CONGESTED_TIME) CR_LMS_TIME,
			SUM(CURRENT_BLOCK)+SUM(CURRENT_BUSY)+SUM(CURRENT_CONGESTED) TOTAL_CUR_BLOCK,
			SUM(CURRENT_BUSY) CUR_FLUSH,
			SUM(CURRENT_CONGESTED) CUR_LMS,
			SUM(CURRENT_BLOCK_TIME)+SUM(CURRENT_BUSY_TIME)+SUM(CURRENT_CONGESTED_TIME) CUR_BLOCK_TIME,
			SUM(CURRENT_BUSY_TIME) CUR_FLUSH_TIME,
			SUM(CURRENT_CONGESTED_TIME) CUR_LMS_TIME	
		FROM     
			GV$INSTANCE_CACHE_TRANSFER GVICT, GV$INSTANCE GVI
		WHERE    
			GVICT.INSTANCE IN (SELECT INST_NUMBER FROM V$ACTIVE_INSTANCES) AND
			GVICT.INSTANCE <> GVICT.INST_ID AND
			GVICT.INST_ID = GVI.INSTANCE_NUMBER
		GROUP BY 
			GVICT.INST_ID,
			GVICT.INSTANCE,
			GVI.STARTUP_TIME
	) GVI, BASIS_INFO BI
	WHERE
		GVI.INSTANCE_NUMBER = BI.INSTANCE_NUMBER OR
		BI.INSTANCE_NUMBER = -2 OR
		BI.INSTANCE_NUMBER = -3
)
GROUP BY
	INSTANCE_NUMBER,
	CONNECTION
ORDER BY
	INSTANCE_NUMBER,
	CONNECTION
)
UNION ALL
SELECT * FROM (	
SELECT
	BEGIN_TIME,
	CONNECTION,
	SUM(TOTAL_CR_BLOCK) TOTAL_CR_BLOCK,
	TO_CHAR(SUM(CR_FLUSH),'99999999999990')||'('||TO_CHAR(SUM(CR_FLUSH)*100/SUM(TOTAL_CR_BLOCK),'90.99')||'%)' CR_FLUSH,
	TO_CHAR(SUM(CR_LMS),  '99999999999990')||'('||TO_CHAR(SUM(CR_LMS)*100/SUM(TOTAL_CR_BLOCK),'90.99')||'%)' CR_LMS,
	TO_CHAR(DECODE(SUM(TOTAL_CR_BLOCK),0,0,SUM(CR_BLOCK_TIME)/SUM(TOTAL_CR_BLOCK)/1000),'990.99') AVG_CR_LATENCY_MS,
	TO_CHAR(DECODE(SUM(CR_FLUSH),0,0,SUM(CR_FLUSH_TIME)/SUM(CR_FLUSH)/1000),'990.99') AVG_CR_FLUSH_MS,
	TO_CHAR(DECODE(SUM(CR_LMS),0,0,SUM(CR_LMS_TIME)/SUM(CR_LMS)/1000),'990.99') AVG_CR_LMS_MS,
	SUM(TOTAL_CUR_BLOCK) TOTAL_CUR_BLOCK,
	TO_CHAR(SUM(CUR_FLUSH),'99999999999990')||'('||TO_CHAR(SUM(CUR_FLUSH)*100/SUM(TOTAL_CUR_BLOCK),'90.99')||'%)' CUR_FLUSH,
	TO_CHAR(SUM(CUR_LMS),  '99999999999990')||'('||TO_CHAR(SUM(CUR_LMS)*100/SUM(TOTAL_CUR_BLOCK),'90.99')||'%)' CUR_LMS,
	TO_CHAR(DECODE(SUM(TOTAL_CUR_BLOCK),0,0,SUM(CUR_BLOCK_TIME)/SUM(TOTAL_CUR_BLOCK)/1000),'990.99') AVG_CUR_LATENCY_MS,	
	TO_CHAR(DECODE(SUM(CUR_FLUSH),0,0,SUM(CUR_FLUSH_TIME)/SUM(CUR_FLUSH)/1000),'990.99') AVG_CUR_FLUSH_MS,
	TO_CHAR(DECODE(SUM(CUR_LMS),0,0,SUM(CUR_LMS_TIME)/SUM(CUR_LMS)/1000),'990.99') AVG_CUR_LMS_MS	
FROM	
(
	SELECT 
		TO_CHAR(IICF.BEGIN_INTERVAL_TIME,BI.AGGREGATE_BY) BEGIN_TIME,
		DECODE(BI.INSTANCE_NUMBER, -2, 0, IICF.INSTANCE_NUMBER) INSTANCE_NUMBER,
		DECODE(BI.INSTANCE_NUMBER, -2, 'X=>X',IICF.CONNECTION) CONNECTION,
		TOTAL_CR_BLOCK,
		CR_FLUSH,
		CR_LMS,
		CR_BLOCK_TIME,
		CR_FLUSH_TIME,
		CR_LMS_TIME,
		TOTAL_CUR_BLOCK,
		CUR_FLUSH,
		CUR_LMS,
		CUR_BLOCK_TIME,
		CUR_FLUSH_TIME,
		CUR_LMS_TIME
	FROM
		INTER_INST_CF IICF,
		BASIS_INFO BI
	WHERE
		 BI.EXCLUDE_WEEKENDS = ' ' OR TO_CHAR(IICF.BEGIN_INTERVAL_TIME, 'D') NOT IN (7, 1)
)
GROUP BY
	BEGIN_TIME,
	INSTANCE_NUMBER,
	CONNECTION
ORDER BY
	BEGIN_TIME DESC,
	INSTANCE_NUMBER,
	CONNECTION
)
))