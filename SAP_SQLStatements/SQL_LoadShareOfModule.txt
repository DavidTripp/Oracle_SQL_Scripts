SELECT NULL INST, NULL MODULE, NULL "EXECUTIONS_%", NULL "RECORDS_%", NULL "DISK_READS_%", NULL "BUFFER_GETS_%",
  NULL "CPU_TIME_%", NULL "ELAPSED_TIME_%" FROM DUAL WHERE 1 = 0
UNION ALL (
SELECT NULL INST, NULL MODULE, NULL "EXECUTIONS_%", NULL "RECORDS_%", NULL "DISK_READS_%", NULL "BUFFER_GETS_%",
  NULL "CPU_TIME_%", NULL "ELAPSED_TIME_%" FROM DUAL WHERE 1 = 0
) UNION ALL ( SELECT * FROM (
WITH BASIS_INFO AS
( SELECT /*+ MATERIALIZE */
    DECODE(DBID, -1, OWN_DBID, DBID) DBID,
    DECODE(INSTANCE_NUMBER, -1, USERENV('INSTANCE'), INSTANCE_NUMBER) INSTANCE_NUMBER,
    BEGIN_DATE,
    END_DATE,
    TO_TIMESTAMP(TO_CHAR(BEGIN_DATE, 'dd.mm.yyyy hh24:mi:ss'), 
      'dd.mm.yyyy hh24:mi:ss') BEGIN_TIME,
    TO_TIMESTAMP(TO_CHAR(END_DATE, 'dd.mm.yyyy hh24:mi:ss'), 
      'dd.mm.yyyy hh24:mi:ss') END_TIME,
    MODULE
  FROM
  ( SELECT
      -1 DBID,
      -1 INSTANCE_NUMBER,        /* -1: current instance, -2: all instances aggregated, -3: all instances individually */
      TO_DATE('01.01.1000 11:55:00', 'dd.mm.yyyy hh24:mi:ss') BEGIN_DATE,
      TO_DATE('31.12.9999 18:05:00', 'dd.mm.yyyy hh24:mi:ss') END_DATE,
      'brconnect%' MODULE
    FROM
      DUAL
  ),
  ( SELECT DBID OWN_DBID FROM V$DATABASE )
),
SNAPSHOTS AS
( SELECT
    SS.DBID,
    SS.INSTANCE_NUMBER,
    MIN(SS.SNAP_ID) BEGIN_SNAP_ID,
    MIN(SS.BEGIN_INTERVAL_TIME) BEGIN_TIME,
    MAX(SS.SNAP_ID) END_SNAP_ID,
    MAX(SS.END_INTERVAL_TIME) END_TIME,
    SUM(TO_CHAR(SS.END_INTERVAL_TIME, 'SSSSS') -
      TO_CHAR(SS.BEGIN_INTERVAL_TIME, 'SSSSS') +
      86400 * (TO_CHAR(SS.END_INTERVAL_TIME, 'J') - 
               TO_CHAR(SS.BEGIN_INTERVAL_TIME, 'J')))
      SECONDS
  FROM 
    DBA_HIST_SNAPSHOT SS,
    BASIS_INFO BI
  WHERE
    BI.DBID = SS.DBID AND
    ( BI.INSTANCE_NUMBER = -3 OR
      BI.INSTANCE_NUMBER = -2 OR
      BI.INSTANCE_NUMBER = SS.INSTANCE_NUMBER ) AND
    SS.BEGIN_INTERVAL_TIME >= BI.BEGIN_TIME AND
    SS.END_INTERVAL_TIME <= BI.END_TIME
  GROUP BY
    SS.DBID,
    SS.INSTANCE_NUMBER
)
SELECT
  DECODE(BI_INST, -2, 'all', TO_CHAR(TOTAL.INSTANCE_NUMBER, 990)) INST,
  MIN(TOTAL.MODULE) MODULE,
  TO_CHAR(SUM(FRACTION.EXECUTIONS) / SUM(TOTAL.EXECUTIONS) * 100, 99999990.99) "EXECUTIONS_%",
  TO_CHAR(SUM(FRACTION.RECORDS) / SUM(TOTAL.RECORDS) * 100, 99990.99) "RECORDS_%",
  TO_CHAR(SUM(FRACTION.DISK_READS) / SUM(TOTAL.DISK_READS) * 100, 99999990.99) "DISK_READS_%",
  TO_CHAR(SUM(FRACTION.BUFFER_GETS) / SUM(TOTAL.BUFFER_GETS) * 100, 999999990.99) "BUFFER_GETS_%",
  TO_CHAR(SUM(FRACTION.CPU_TIME_MICRO) / SUM(TOTAL.CPU_TIME_MICRO) * 100, 999990.99) "CPU_TIME_%",
  TO_CHAR(SUM(FRACTION.ELAPSED_TIME_MICRO) / SUM(TOTAL.ELAPSED_TIME_MICRO) * 100, 9999999990.99) "ELAPSED_TIME_%"
FROM
( SELECT
    HSQ.INSTANCE_NUMBER,
    BI.MODULE,
    BI.INSTANCE_NUMBER BI_INST,
    SUM(HSQ.EXECUTIONS_DELTA) EXECUTIONS,
    SUM(HSQ.ROWS_PROCESSED_DELTA) RECORDS,
    SUM(HSQ.DISK_READS_DELTA) DISK_READS,
    SUM(HSQ.BUFFER_GETS_DELTA) BUFFER_GETS,
    SUM(HSQ.CPU_TIME_DELTA) CPU_TIME_MICRO,
    SUM(HSQ.ELAPSED_TIME_DELTA) ELAPSED_TIME_MICRO,
    SUM(HSQ.DIRECT_WRITES_DELTA) DIRECT_WRITES
  FROM
    BASIS_INFO BI,
    SNAPSHOTS SS,
    DBA_HIST_SQLSTAT HSQ
  WHERE
    SS.DBID = HSQ.DBID AND
    SS.INSTANCE_NUMBER = HSQ.INSTANCE_NUMBER AND
    HSQ.SNAP_ID BETWEEN SS.BEGIN_SNAP_ID + 1 AND SS.END_SNAP_ID
  GROUP BY
    HSQ.INSTANCE_NUMBER,
    BI.MODULE,
    BI.INSTANCE_NUMBER
) TOTAL,
( SELECT
    HSQ.INSTANCE_NUMBER,
    BI.MODULE,
    SUM(HSQ.EXECUTIONS_DELTA) EXECUTIONS,
    SUM(HSQ.ROWS_PROCESSED_DELTA) RECORDS,
    SUM(HSQ.DISK_READS_DELTA) DISK_READS,
    SUM(HSQ.BUFFER_GETS_DELTA) BUFFER_GETS,
    SUM(HSQ.CPU_TIME_DELTA) CPU_TIME_MICRO,
    SUM(HSQ.ELAPSED_TIME_DELTA) ELAPSED_TIME_MICRO,
    SUM(HSQ.DIRECT_WRITES_DELTA) DIRECT_WRITES
  FROM
    BASIS_INFO BI,
    SNAPSHOTS SS,
    DBA_HIST_SQLSTAT HSQ
  WHERE
    SS.DBID = HSQ.DBID AND
    SS.INSTANCE_NUMBER = HSQ.INSTANCE_NUMBER AND
    HSQ.SNAP_ID BETWEEN SS.BEGIN_SNAP_ID + 1 AND SS.END_SNAP_ID AND
    HSQ.MODULE LIKE BI.MODULE
  GROUP BY
    HSQ.INSTANCE_NUMBER,
    BI.MODULE
) FRACTION
WHERE 
  TOTAL.INSTANCE_NUMBER = FRACTION.INSTANCE_NUMBER
GROUP BY
  DECODE(BI_INST, -2, 'all', TO_CHAR(TOTAL.INSTANCE_NUMBER, 990))
ORDER BY
  DECODE(BI_INST, -2, 'all', TO_CHAR(TOTAL.INSTANCE_NUMBER, 990))
));
