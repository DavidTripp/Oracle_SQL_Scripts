SELECT NULL LINE FROM DUAL WHERE 1 = 0
UNION ALL (
SELECT NULL LINE FROM DUAL WHERE 1 = 0
) UNION ALL ( SELECT * FROM (
WITH BASIS_INFO AS
( SELECT /*+ INLINE */
    DECODE(INSTANCE_NUMBER, -1, USERENV('INSTANCE'), INSTANCE_NUMBER) INSTANCE_NUMBER,
    SESSION_ID,
	SQL_EXEC_ID,
    SQL_ID,
    NUM_LINES
  FROM
  ( SELECT
      -1 INSTANCE_NUMBER,
      -1 SESSION_ID,
      '0hrxctwzryvmj' SQL_ID,
	  -1 SQL_EXEC_ID,
      200 NUM_LINES
    FROM
      DUAL
  )
),
REPORT_TEXT AS
( SELECT /*+ INLINE */
    DBMS_SQLTUNE.REPORT_SQL_MONITOR
    ( INST_ID      => DECODE(INSTANCE_NUMBER, -2, NULL, INSTANCE_NUMBER),
      SESSION_ID   => DECODE(SESSION_ID, -1, NULL, SESSION_ID),
      SQL_ID       => DECODE(SQL_ID, '%', NULL, SQL_ID),
	  SQL_EXEC_ID  => DECODE(SQL_EXEC_ID, -1, NULL, SQL_EXEC_ID),
      REPORT_LEVEL => 'ALL',
      TYPE         => 'TEXT'
    ) TEXT
FROM
  BASIS_INFO
),
LINEFEED_POSITIONS AS
( SELECT /*+ INLINE */
    ROWNUM LF_NUM,
    LF_POS
  FROM
  ( SELECT
      DBMS_LOB.INSTR(T.TEXT, CHR(10), 1, R.LNR) LF_POS
    FROM
      REPORT_TEXT T,
      ( SELECT ROWNUM LNR FROM BASIS_INFO CONNECT BY LEVEL <= NUM_LINES ) R
    UNION
    ( SELECT 0 LF_POS FROM DUAL )
  )
  WHERE
    LF_POS >= 0
  ORDER BY
    LF_POS
)
SELECT
  LINE
FROM
( SELECT
    DECODE(LE.LF_POS, LS.LF_POS + 1, ' ', 
      DBMS_LOB.SUBSTR(T.TEXT, LE.LF_POS - LS.LF_POS - 1, LS.LF_POS + 1)) LINE  
  FROM
    REPORT_TEXT T,
    LINEFEED_POSITIONS LS,
    LINEFEED_POSITIONS LE
  WHERE
    LS.LF_NUM = LE.LF_NUM - 1
  ORDER BY
    LS.LF_NUM
)
WHERE
  LINE IS NOT NULL
));
