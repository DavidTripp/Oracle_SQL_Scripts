SELECT NULL BEGIN_TIME, NULL VALUE_TOTAL, NULL VALUE_PER_S, 
  NULL SQL_ID_1, NULL VALUE_1, NULL PCT_1, NULL SQL_ID_2, 
  NULL VALUE_2, NULL PCT_2, NULL SQL_ID_3, NULL VALUE_3, 
  NULL PCT_3, NULL SQL_ID_4, NULL VALUE_4, NULL PCT_4, 
  NULL SQL_ID_5, NULL VALUE_5, NULL PCT_5
FROM DUAL WHERE 1 = 0
UNION ALL (
SELECT NULL BEGIN_TIME, NULL VALUE_TOTAL, NULL VALUE_PER_S, 
  NULL SQL_ID_1, NULL VALUE_1, NULL PCT_1, NULL SQL_ID_2, 
  NULL VALUE_2, NULL PCT_2, NULL SQL_ID_3, NULL VALUE_3, 
  NULL PCT_3, NULL SQL_ID_4, NULL VALUE_4, NULL PCT_4, 
  NULL SQL_ID_5, NULL VALUE_5, NULL PCT_5
FROM DUAL WHERE 1 = 0
) UNION ALL ( SELECT * FROM (
WITH BASIS_INFO AS
( SELECT /*+ MATERIALIZE */
    DECODE(DBID, -1, OWN_DBID, DBID) DBID,
    DECODE(INSTANCE_NUMBER, -1, USERENV('INSTANCE'), INSTANCE_NUMBER) INSTANCE_NUMBER,
    BEGIN_DATE,
    END_DATE,
    TO_TIMESTAMP(TO_CHAR(BEGIN_DATE, 'dd.mm.yyyy hh24:mi:ss'), 'dd.mm.yyyy hh24:mi:ss') BEGIN_TIME,
    TO_TIMESTAMP(TO_CHAR(END_DATE, 'dd.mm.yyyy hh24:mi:ss'), 'dd.mm.yyyy hh24:mi:ss') END_TIME,
    BEGIN_SNAP_ID,    
    END_SNAP_ID,
    KEY_FIGURE
  FROM
  ( SELECT
      -1 DBID,
      -1 INSTANCE_NUMBER,          /* -1 for current instance, -2 for all instances */
      TO_DATE('01.01.1000 03:55:00', 'dd.mm.yyyy hh24:mi:ss') BEGIN_DATE,
      TO_DATE('31.12.9999 05:05:00', 'dd.mm.yyyy hh24:mi:ss') END_DATE,
      -1 BEGIN_SNAP_ID,   
      -1 END_SNAP_ID,
      'Elapsed Time (s)' KEY_FIGURE
        /* 'Elapsed Time (s)', 'Executions', 'Records', 'Disk Reads', 
           'Buffer Gets', 'CPU Time (s)', 'Direct Writes' 'Cluster Time (s)', 'PX Servers' */
    FROM
      DUAL
  ),
  ( SELECT DBID OWN_DBID FROM V$DATABASE )
),
SNAPSHOTS AS
( SELECT 
    HSS.DBID,
    HSS.INSTANCE_NUMBER INST_ID,
    HSS.SNAP_ID,
    HSS.BEGIN_INTERVAL_TIME,
    HSS.END_INTERVAL_TIME,
    TO_CHAR(HSS.END_INTERVAL_TIME, 'SSSSS') -
      TO_CHAR(HSS.BEGIN_INTERVAL_TIME, 'SSSSS') +
      86400 * (TO_CHAR(HSS.END_INTERVAL_TIME, 'J') - 
               TO_CHAR(HSS.BEGIN_INTERVAL_TIME, 'J'))
      INTERVAL_SECONDS
  FROM 
    BASIS_INFO BI,
    DBA_HIST_SNAPSHOT HSS
  WHERE
    BI.DBID = HSS.DBID AND
    ( BI.INSTANCE_NUMBER = -2 OR
      BI.INSTANCE_NUMBER = HSS.INSTANCE_NUMBER ) AND
    HSS.BEGIN_INTERVAL_TIME >= BI.BEGIN_TIME AND 
    HSS.END_INTERVAL_TIME <= BI.END_TIME
)
SELECT
  'KEY FIGURE:' BEGIN_TIME,
  KEY_FIGURE VALUE_TOTAL,
  NULL VALUE_PER_S,
  NULL SQL_ID_1,
  NULL VALUE_1,
  NULL PCT_1,
  NULL SQL_ID_2,
  NULL VALUE_2,
  NULL PCT_2,
  NULL SQL_ID_3,
  NULL VALUE_3,
  NULL PCT_3,
  NULL SQL_ID_4,
  NULL VALUE_4,
  NULL PCT_4,
  NULL SQL_ID_5,
  NULL VALUE_5,
  NULL PCT_5
FROM
  BASIS_INFO
UNION ALL
( SELECT
    NULL BEGIN_TIME,
    NULL VALUE_TOTAL,
    NULL VALUE_PER_S,
    NULL SQL_ID_1,
    NULL VALUE_1,
    NULL PCT_1,
    NULL SQL_ID_2,
    NULL VALUE_2,
    NULL PCT_2,
    NULL SQL_ID_3,
    NULL VALUE_3,
    NULL PCT_3,
    NULL SQL_ID_4,
    NULL VALUE_4,
    NULL PCT_4,
    NULL SQL_ID_5,
    NULL VALUE_5,
    NULL PCT_5
  FROM
    BASIS_INFO
)
UNION ALL
( SELECT
    *
  FROM
  ( SELECT
      TO_CHAR(BEGIN_INTERVAL_TIME, 'dd.mm.yyyy hh24:mi:ss') BEGIN_TIME,
      TO_CHAR(VALUE_TOTAL, 99999999999999990) VALUE_TOTAL,
      TO_CHAR(VALUE_PER_S, 9999990.99) VALUE_PER_S,
      SQL_ID_1,
      TO_CHAR(VALUE_1, 99999990) VALUE_1,
      TO_CHAR(PCT_1, 990.99) PCT_1,
      SQL_ID_2,
      TO_CHAR(VALUE_2, 99999990) VALUE_2,
      TO_CHAR(PCT_2, 990.99) PCT_2,
      SQL_ID_3,
      TO_CHAR(VALUE_3, 99999990) VALUE_3,
      TO_CHAR(PCT_3, 990.99) PCT_3,
      SQL_ID_4,
      TO_CHAR(VALUE_4, 99999990) VALUE_4,
      TO_CHAR(PCT_4, 990.99) PCT_4,
      SQL_ID_5,
      TO_CHAR(VALUE_5, 99999990) VALUE_5,
      TO_CHAR(PCT_5, 990.99) PCT_5
    FROM
    ( SELECT
        BEGIN_INTERVAL_TIME,
        SNAP_ID,
        SUM(SUM(VALUE)) OVER (PARTITION BY SNAP_ID) VALUE_TOTAL,
        SUM(SUM(VALUE)) OVER (PARTITION BY SNAP_ID) / MAX(INTERVAL_SECONDS) VALUE_PER_S,
        SQL_ID SQL_ID_1,
        SUM(VALUE) VALUE_1,
        SUM(PERCENT) PCT_1,
        LEAD(SQL_ID, 1) OVER (PARTITION BY SNAP_ID ORDER BY SUM(VALUE) DESC) SQL_ID_2,
        LEAD(SUM(VALUE), 1) OVER (PARTITION BY SNAP_ID ORDER BY SUM(VALUE) DESC) VALUE_2,
        LEAD(SUM(PERCENT), 1) OVER (PARTITION BY SNAP_ID ORDER BY SUM(VALUE) DESC) PCT_2,
        LEAD(SQL_ID, 2) OVER (PARTITION BY SNAP_ID ORDER BY SUM(VALUE) DESC) SQL_ID_3,
        LEAD(SUM(VALUE), 2) OVER (PARTITION BY SNAP_ID ORDER BY SUM(VALUE) DESC) VALUE_3,
        LEAD(SUM(PERCENT), 2) OVER (PARTITION BY SNAP_ID ORDER BY SUM(VALUE) DESC) PCT_3,
        LEAD(SQL_ID, 3) OVER (PARTITION BY SNAP_ID ORDER BY SUM(VALUE) DESC) SQL_ID_4,
        LEAD(SUM(VALUE), 3) OVER (PARTITION BY SNAP_ID ORDER BY SUM(VALUE) DESC) VALUE_4,
        LEAD(SUM(PERCENT), 3) OVER (PARTITION BY SNAP_ID ORDER BY SUM(VALUE) DESC) PCT_4,
        LEAD(SQL_ID, 4) OVER (PARTITION BY SNAP_ID ORDER BY SUM(VALUE) DESC) SQL_ID_5,
        LEAD(SUM(VALUE), 4) OVER (PARTITION BY SNAP_ID ORDER BY SUM(VALUE) DESC) VALUE_5,
        LEAD(SUM(PERCENT), 4) OVER (PARTITION BY SNAP_ID ORDER BY SUM(VALUE) DESC) PCT_5,
        ROW_NUMBER() OVER (PARTITION BY SNAP_ID ORDER BY SUM(VALUE) DESC) POSITION
      FROM
      ( SELECT
          BEGIN_INTERVAL_TIME,
          SNAP_ID,
          INTERVAL_SECONDS,
          SQL_ID,
          VALUE,
          RATIO_TO_REPORT(VALUE) OVER (PARTITION BY SNAP_ID) * 100 PERCENT
        FROM
        ( SELECT
            SS.BEGIN_INTERVAL_TIME,
            SS.SNAP_ID,
            SS.INTERVAL_SECONDS,
            S.SQL_ID,
            DECODE ( BI.KEY_FIGURE,
              'Elapsed Time (s)', S.ELAPSED_TIME_DELTA / 1000000,
              'Executions', S.EXECUTIONS_DELTA,
              'Records', S.ROWS_PROCESSED_DELTA,
              'Disk Reads', S.DISK_READS_DELTA,
              'Buffer Gets', S.BUFFER_GETS_DELTA,
              'CPU Time (s)', S.CPU_TIME_DELTA / 1000000,
              'Direct Writes', S.DIRECT_WRITES_DELTA,
              'Cluster Time (s)', S.CLWAIT_DELTA / 1000000,
              'PX Servers', S.PX_SERVERS_EXECS_DELTA ) VALUE
          FROM
            BASIS_INFO BI,
            SNAPSHOTS SS,
            DBA_HIST_SQLSTAT S
          WHERE
            SS.DBID = S.DBID AND
            SS.INST_ID = S.INSTANCE_NUMBER AND
            SS.SNAP_ID = S.SNAP_ID
        )
      )
      GROUP BY
        BEGIN_INTERVAL_TIME,
        SNAP_ID,
        SQL_ID
    )
    WHERE
      POSITION = 1
    ORDER BY
      SNAP_ID DESC
  )
)
));