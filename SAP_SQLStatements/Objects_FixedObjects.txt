SELECT NULL TABLE_NAME, NULL NUM_ROWS, NULL INDEX_NUMBER, NULL COLUMN_NAME, 
  NULL NUM_DISTINCT FROM DUAL WHERE 1 = 0
UNION ALL (
SELECT NULL TABLE_NAME, NULL NUM_ROWS, NULL INDEX_NUMBER, NULL COLUMN_NAME, 
  NULL NUM_DISTINCT FROM DUAL WHERE 1 = 0
) UNION ALL ( SELECT * FROM (
WITH BASIS_INFO AS
( SELECT /*+ OPT_PARAM('OPTIMIZER_DYNAMIC_SAMPLING', 6) */
    '%' FIXED_TABLE_NAME
  FROM
    DUAL
)
SELECT
  DECODE(ROW_NUMBER () OVER (PARTITION BY FIC.TABLE_NAME ORDER BY FIC.INDEX_NUMBER, 
    FIC.COLUMN_NAME), 1, FIC.TABLE_NAME, ' ') TABLE_NAME,
  DECODE(ROW_NUMBER () OVER (PARTITION BY FIC.TABLE_NAME ORDER BY FIC.INDEX_NUMBER, 
    FIC.COLUMN_NAME), 1, TO_CHAR(TS.NUM_ROWS, 9999999990), ' ') NUM_ROWS,
  DECODE(ROW_NUMBER () OVER (PARTITION BY FIC.TABLE_NAME, FIC.INDEX_NUMBER ORDER BY 
    FIC.COLUMN_NAME), 1, TO_CHAR(FIC.INDEX_NUMBER, 99999999990), ' ') INDEX_NUMBER,
  FIC.COLUMN_NAME,
  DECODE(TCS.NUM_DISTINCT, NULL, ' ', TO_CHAR(TCS.NUM_DISTINCT, 99999999990)) NUM_DISTINCT
FROM
  BASIS_INFO BI,
  V$INDEXED_FIXED_COLUMN FIC,
  DBA_TAB_STATISTICS TS,
  DBA_TAB_COL_STATISTICS TCS
WHERE
  FIC.TABLE_NAME LIKE BI.FIXED_TABLE_NAME AND
  FIC.TABLE_NAME = TS.TABLE_NAME (+) AND
  FIC.TABLE_NAME = TCS.TABLE_NAME (+) AND
  FIC.COLUMN_NAME = TCS.COLUMN_NAME (+)
ORDER BY
  FIC.TABLE_NAME,
  FIC.INDEX_NUMBER,
  FIC.COLUMN_NAME
))
;
