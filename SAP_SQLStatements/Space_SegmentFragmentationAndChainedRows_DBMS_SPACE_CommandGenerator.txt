SELECT NULL LINE FROM DUAL WHERE 1 = 0
UNION ALL (
SELECT NULL LINE FROM DUAL WHERE 1 = 0
) UNION ALL ( SELECT * FROM (
WITH BASIS_INFO AS
( SELECT
    'SAP%' OWNER,
    'EABL' SEGMENT_NAME,             /* Name of segment or name pattern */
    '%' PARTITION_NAME,
    '%' SEGMENT_TYPE,                /* TABLE, TABLE PARTITION, INDEX, INDEX PARTITION, LOBSEGMENT */
    -1 MIN_SIZE_MB,
    'UNUSED' SORT_BY            /* UNUSED, QUALITY, SEGMENT, CHAINED_ROWS */
  FROM
    DUAL
),
SEGMENTS AS
( SELECT
    S.OWNER,
    S.SEGMENT_NAME,
    S.PARTITION_NAME,
    DECODE(S.SEGMENT_TYPE, 'LOBSEGMENT', 'LOB', S.SEGMENT_TYPE) SEGMENT_TYPE,
    S.BYTES / 1024 / 1024 SEG_SIZE_MB,
    ROWNUM SEG_POS
  FROM
    BASIS_INFO BI,
    DBA_SEGMENTS S
  WHERE
    S.OWNER LIKE BI.OWNER AND
    S.SEGMENT_NAME LIKE BI.SEGMENT_NAME AND
    NVL(S.PARTITION_NAME, ' ') LIKE BI.PARTITION_NAME AND
    S.SEGMENT_TYPE LIKE BI.SEGMENT_TYPE AND
    S.BYTES >= BI.MIN_SIZE_MB * 1024 * 1024
)
SELECT 'SELECT NULL OWNER, NULL SEGMENT_NAME, NULL PART_NAME,' FROM DUAL
UNION ALL
( SELECT '  NULL SEGMENT_TYPE, NULL UNUSED_MB,' FROM DUAL )
UNION ALL
( SELECT '  NULL "QUALITY_%", NULL GROSS_MB, NULL NET_MB,' FROM DUAL )
UNION ALL
( SELECT '  NULL "CHAIN_%" FROM DUAL WHERE 1 = 0' FROM DUAL )
UNION ALL
( SELECT 'UNION ALL (' FROM DUAL )
UNION ALL
( SELECT 'SELECT NULL OWNER, NULL SEGMENT_NAME, NULL PART_NAME,' FROM DUAL )
UNION ALL
( SELECT '  NULL SEGMENT_TYPE, NULL UNUSED_MB,' FROM DUAL )
UNION ALL
( SELECT '  NULL "QUALITY_%", NULL GROSS_MB, NULL NET_MB,' FROM DUAL )
UNION ALL
( SELECT '  NULL "CHAIN_%" FROM DUAL WHERE 1 = 0' FROM DUAL )
UNION ALL
( SELECT ') UNION ALL ( SELECT * FROM (' FROM DUAL )
UNION ALL
( SELECT 'SELECT' FROM DUAL )
UNION ALL
( SELECT '  OWNER, SEGMENT_NAME, PART_NAME, SEGMENT_TYPE, UNUSED_MB,' FROM DUAL )
UNION ALL
( SELECT '  "QUALITY_%", GROSS_MB, NET_MB, "CHAIN_%"' FROM DUAL )
UNION ALL
( SELECT 'FROM (' FROM DUAL )
UNION ALL
( SELECT
    LINE
  FROM
  ( SELECT 
      LINE_TEXT LINE 
    FROM
    ( SELECT SEG_POS, 1 LINE_POS, '( SELECT' LINE_TEXT FROM SEGMENTS
      UNION ALL
      ( SELECT SEG_POS,  2, '    ' || CHR(39) || OWNER || CHR(39) || ' OWNER,'  FROM SEGMENTS )
      UNION ALL
      ( SELECT SEG_POS,  3, '    ' || CHR(39) || SEGMENT_NAME || CHR(39) || ' SEGMENT_NAME,' FROM SEGMENTS )
      UNION ALL
      ( SELECT SEG_POS,  4, '    ' || CHR(39) || PARTITION_NAME || CHR(39) || ' PART_NAME,' FROM SEGMENTS )
      UNION ALL
      ( SELECT SEG_POS,  5, '    ' || CHR(39) || SEGMENT_TYPE || CHR(39) || ' SEGMENT_TYPE,' FROM SEGMENTS )
      UNION ALL
      ( SELECT SEG_POS, 10, '    TO_CHAR((SPACE_ALLOCATED - SPACE_USED) / 1024 / 1024, 999990.99) UNUSED_MB,' FROM SEGMENTS )
      UNION ALL
      ( SELECT SEG_POS, 11, '    TO_CHAR(SPACE_USED / SPACE_ALLOCATED * 100, 99990.99) "QUALITY_%",' FROM SEGMENTS )
      UNION ALL
      ( SELECT SEG_POS, 12, '    TO_CHAR(SPACE_ALLOCATED / 1024 / 1024, 9999990.99) GROSS_MB,' FROM SEGMENTS )
      UNION ALL
      ( SELECT SEG_POS, 13, '    TO_CHAR(SPACE_USED / 1024 / 1024, 9999990.99) NET_MB,' FROM SEGMENTS )
      UNION ALL
      ( SELECT SEG_POS, 14, '    TO_CHAR(CHAIN_PCENT, 999990) "CHAIN_%"' FROM SEGMENTS )
      UNION ALL
      ( SELECT SEG_POS, 20, '  FROM' FROM SEGMENTS )
      UNION ALL
      ( SELECT SEG_POS, 22, '    TABLE(DBMS_SPACE.OBJECT_SPACE_USAGE_TBF(' || CHR(39) || OWNER || CHR(39) || ', ' || CHR(39) || SEGMENT_NAME || CHR(39) || ',' FROM SEGMENTS )
      UNION ALL
      ( SELECT SEG_POS, 23, '      ' || CHR(39) || SEGMENT_TYPE || CHR(39) || ', NULL' || DECODE(PARTITION_NAME, NULL, NULL, ', ' || CHR(39) || PARTITION_NAME || CHR(39)) || '))' FROM SEGMENTS )
      UNION ALL
      ( SELECT SEG_POS, 26, ')' FROM SEGMENTS )
      UNION ALL
      ( SELECT SEG_POS, 27, 'UNION ALL' FROM SEGMENTS )
    )
    ORDER BY
      SEG_POS,
      LINE_POS
  )
)
UNION ALL
( SELECT '( SELECT NULL, NULL, NULL, NULL, NULL, NULL,' FROM DUAL )
UNION ALL
( SELECT '    NULL, NULL, NULL FROM DUAL WHERE 1 = 0 )' FROM DUAL )
UNION ALL
( SELECT ')' FROM DUAL )
UNION ALL
( SELECT 'ORDER BY' FROM DUAL )
UNION ALL
( SELECT '  ' || DECODE(SORT_BY, 'SEGMENT', 'OWNER || SEGMENT_NAME', 'QUALITY', '"QUALITY_%"', 'UNUSED',
    'UNUSED_MB DESC', 'CHAINED_ROWS', '"CHAIN_%" DESC') FROM BASIS_INFO )
UNION ALL
( SELECT '));' FROM DUAL )
));



