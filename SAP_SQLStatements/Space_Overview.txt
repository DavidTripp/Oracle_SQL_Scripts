SELECT NULL NAME, NULL "NUMBER", NULL SIZE_GB, NULL PERCENT FROM DUAL WHERE 1 = 0
UNION ALL ( 
SELECT NULL NAME, NULL "NUMBER", NULL SIZE_GB, NULL PERCENT FROM DUAL WHERE 1 = 0
) UNION ALL ( SELECT * FROM (
WITH BASIS_INFO AS
( SELECT
    '%' OWNER,
    10 MIN_SEGMENT_TYPE_SIZE_MB
  FROM
    DUAL
),
DATABASE_SIZE AS
( SELECT /*+ MATERIALIZE */
    SUM(BYTES) BYTES
  FROM
  ( SELECT BYTES FROM DBA_DATA_FILES UNION ALL
    SELECT BYTES FROM DBA_TEMP_FILES )
),
SEGMENTS AS
( SELECT /*+ MATERIALIZE */
    S.SEGMENT_TYPE,
    COUNT(*) NUM_SEGMENTS,
    SUM(S.BYTES) BYTES,
    SUM(S.EXTENTS) EXTENTS
  FROM
    BASIS_INFO BI,
    DBA_SEGMENTS S
  WHERE
    S.OWNER LIKE BI.OWNER
  GROUP BY
    S.SEGMENT_TYPE
),
TEMP_EXTENTS AS
( SELECT /*+ MATERIALIZE */
    SUM(BYTES_USED) BYTES
  FROM
    GV$TEMP_EXTENT_POOL
),
FREESPACE_FRAGMENTS AS
( SELECT /*+ MATERIALIZE */
    BYTES SIZE_BYTE,
    COUNT(*) NUM_FRAGMENTS
  FROM
    DBA_FREE_SPACE
  GROUP BY
    BYTES
),
REDO_LOGS AS
( SELECT /*+ MATERIALIZE */
    INST_ID,
    MEMBERS,
    BYTES,
    MIN(BYTES) OVER (PARTITION BY INST_ID) MIN_BYTES,
    MAX(BYTES) OVER (PARTITION BY INST_ID) MAX_BYTES
  FROM
    GV$LOG
)
SELECT
 'Database' NAME,
  TO_CHAR(1, 999999990) "NUMBER",
  TO_CHAR(BYTES / 1024 / 1024 / 1024, 999990.99) SIZE_GB, 
  TO_CHAR(100, 990.99) PERCENT
FROM
  DATABASE_SIZE
UNION ALL
( SELECT
    'Tablespaces',
    TO_CHAR(COUNT(*), 999999990),
    TO_CHAR(MIN(D.BYTES) / 1024 / 1024 / 1024, 999990.99),
    TO_CHAR(100, 990.99)
  FROM
    DBA_TABLESPACES TS,
    DATABASE_SIZE D
)
UNION ALL
( SELECT
    'Datafiles' NAME,
    TO_CHAR(COUNT(*), 999999990),
    TO_CHAR(SUM(DF.BYTES) / 1024 / 1024 / 1024, 999990.99),
    TO_CHAR(SUM(DF.BYTES) / D.BYTES * 100, 990.99)
  FROM
    DBA_DATA_FILES DF,
    DATABASE_SIZE D
  GROUP BY
    D.BYTES
)
UNION ALL
( SELECT
    'Tempfiles' NAME,
    TO_CHAR(COUNT(*), 999999990),
    TO_CHAR(SUM(TF.BYTES) / 1024 / 1024 / 1024, 999990.99),
    TO_CHAR(SUM(TF.BYTES) / D.BYTES * 100, 990.99)
  FROM
    DBA_TEMP_FILES TF,
    DATABASE_SIZE D
  GROUP BY
    D.BYTES
)
UNION ALL
( SELECT
    NULL, NULL, NULL, NULL
  FROM
    DUAL
)
UNION ALL
( SELECT
    'Segments (total)',
    TO_CHAR(SUM(S.NUM_SEGMENTS), 999999990),
    TO_CHAR(SUM(S.BYTES) / 1024 / 1024 / 1024, 999990.99),
    TO_CHAR(SUM(S.BYTES) / D.BYTES * 100, 990.99)
  FROM
    SEGMENTS S,
    DATABASE_SIZE D
  GROUP BY
    D.BYTES
)
UNION ALL
( SELECT
    *
  FROM 
  ( SELECT
      'Segments (' || LOWER(SEGMENT_TYPE) || ')',
      TO_CHAR(NUM_SEGMENTS, 999999990),
      TO_CHAR(BYTES / 1024 / 1024 / 1024, 999990.99),
      TO_CHAR(BYTES / TOTAL_BYTES * 100, 990.99)
    FROM
    ( SELECT
        S.SEGMENT_TYPE,
        SUM(S.NUM_SEGMENTS) NUM_SEGMENTS,
        SUM(S.BYTES) BYTES,
        D.BYTES TOTAL_BYTES
      FROM
        BASIS_INFO BI,
        SEGMENTS S,
        DATABASE_SIZE D
      GROUP BY
        S.SEGMENT_TYPE,
        BI.MIN_SEGMENT_TYPE_SIZE_MB,
        D.BYTES
      HAVING
        SUM(S.BYTES) / 1024 / 1024 >= BI.MIN_SEGMENT_TYPE_SIZE_MB
      UNION ALL
      ( SELECT
          'TEMPORARY',
          COUNT(*) NUM_SEGMENTS,
          SUM(TE.BYTES) BYTES,
          D.BYTES TOTAL_BYTES
        FROM
          BASIS_INFO BI,
          TEMP_EXTENTS TE,
          DATABASE_SIZE D
        GROUP BY
          BI.MIN_SEGMENT_TYPE_SIZE_MB,
          D.BYTES
        HAVING
          SUM(TE.BYTES) / 1024 / 1024 >= BI.MIN_SEGMENT_TYPE_SIZE_MB
      )
    )
    ORDER BY
      BYTES DESC 
  )
) 
UNION ALL
( SELECT
    NULL, NULL, NULL, NULL
  FROM
    DUAL
)
UNION ALL
( SELECT
    'Freespace areas',
    TO_CHAR(SUM(F.NUM_FRAGMENTS), 999999990),
    TO_CHAR(SUM(F.SIZE_BYTE * F.NUM_FRAGMENTS) / 1024 / 1024 / 1024, 999990.99),
    TO_CHAR(SUM(F.SIZE_BYTE * F.NUM_FRAGMENTS) / D.BYTES * 100, 990.99)    
  FROM
    FREESPACE_FRAGMENTS F,
    DATABASE_SIZE D
  GROUP BY
    D.BYTES
)
UNION ALL
( SELECT
    'Freespace areas (temp.)',
    NULL,
    TO_CHAR((SUM(TF.BYTES) - TE.BYTES) / 1024 / 1024 / 1024, 999990.99),
    TO_CHAR((SUM(TF.BYTES) - TE.BYTES) / D.BYTES * 100, 990.99)  
  FROM
    TEMP_EXTENTS TE,
    DBA_TEMP_FILES TF,
    DATABASE_SIZE D
  GROUP BY
    TE.BYTES,
    D.BYTES
)
UNION ALL
( SELECT
    'Freespace areas < 1 MB',
    TO_CHAR(SUM(F.NUM_FRAGMENTS), 999999990),
    TO_CHAR(SUM(F.SIZE_BYTE * F.NUM_FRAGMENTS) / 1024 / 1024 / 1024, 999990.99),
    TO_CHAR(SUM(F.SIZE_BYTE * F.NUM_FRAGMENTS) / D.BYTES * 100, 990.99)    
  FROM
    FREESPACE_FRAGMENTS F,
    DATABASE_SIZE D
  WHERE
    F.SIZE_BYTE < 1024 * 1024
  GROUP BY
    D.BYTES
)
UNION ALL
( SELECT
    NULL, NULL, NULL, NULL
  FROM
    DUAL
)
UNION ALL
( SELECT
    'Redo log groups (inst. ' || INST_ID || ', ' || MEMBERS || ' member' ||
      DECODE(MEMBERS, 1, NULL, 's') || ')',
    TO_CHAR(COUNT(*), 999999990),
    TO_CHAR(SUM(BYTES) / 1024 / 1024 / 1024, 999990.99),
    NULL
  FROM
    REDO_LOGS
  GROUP BY
    INST_ID,
    MEMBERS    
)
UNION ALL
( SELECT
    'Redo log size (inst. ' || INST_ID || ')',
    TO_CHAR(COUNT(*), 999999990),
    TO_CHAR(BYTES / 1024 / 1024 / 1024, 999990.99),
    NULL
  FROM
    REDO_LOGS
  WHERE
    MIN_BYTES = MAX_BYTES 
  GROUP BY
    INST_ID,
    BYTES,
    MIN_BYTES,
    MAX_BYTES
) 
UNION ALL
( SELECT
    'Redo log size min. (inst. ' || INST_ID || ')',
    TO_CHAR(COUNT(*), 999999990),
    TO_CHAR(BYTES / 1024 / 1024 / 1024, 999990.99),
    NULL
  FROM
    REDO_LOGS
  WHERE
    MIN_BYTES != MAX_BYTES AND
    BYTES = MIN_BYTES
  GROUP BY
    INST_ID,
    BYTES,
    MIN_BYTES
) 
UNION ALL
( SELECT
    'Redo log size max. (inst. ' || INST_ID || ')',
    TO_CHAR(COUNT(*), 999999990),
    TO_CHAR(BYTES / 1024 / 1024 / 1024, 999990.99),
    NULL
  FROM
    REDO_LOGS
  WHERE
    MIN_BYTES != MAX_BYTES AND
    BYTES = MAX_BYTES
  GROUP BY
    INST_ID,
    BYTES,
    MAX_BYTES
) 
));

