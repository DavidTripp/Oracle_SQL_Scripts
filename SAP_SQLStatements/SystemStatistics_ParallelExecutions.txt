SELECT 
  NULL BEGIN_TIME, NULL NO_DOWNGRADE, 
  NULL DG_TOTAL, NULL DG_1_25_PCT, 
  NULL DG_25_50_PCT, NULL DG_50_75_PCT, 
  NULL DG_75_99_PCT, NULL DG_SERIAL
  FROM DUAL WHERE 1 = 0
UNION ALL (
SELECT NULL BEGIN_TIME, NULL NO_DOWNGRADE, 
  NULL DG_TOTAL, NULL DG_1_25_PCT, 
  NULL DG_25_50_PCT, NULL DG_50_75_PCT, 
  NULL DG_75_99_PCT, NULL DG_SERIAL
  FROM DUAL WHERE 1 = 0
) UNION ALL ( SELECT * FROM (
WITH BASIS_INFO AS
( SELECT /*+ MATERIALIZE */
    DECODE(DBID, -1, OWN_DBID, DBID) DBID,
    DECODE(INSTANCE_NUMBER, -1, USERENV('INSTANCE'), 
      INSTANCE_NUMBER) INSTANCE_NUMBER,
    BEGIN_DATE,
    END_DATE,
    TO_TIMESTAMP(TO_CHAR(BEGIN_DATE, 'dd.mm.yyyy hh24:mi:ss'), 
      'dd.mm.yyyy hh24:mi:ss') BEGIN_TIME,
    TO_TIMESTAMP(TO_CHAR(END_DATE, 'dd.mm.yyyy hh24:mi:ss'), 
      'dd.mm.yyyy hh24:mi:ss') END_TIME,
    ONLY_DOWNGRADES,
    DECODE(AGGREGATE_BY,
      'SNAPSHOT',    'YYYY-MM-DD HH24:MI:SS',
      'DAY',         'YYYY-MM-DD (DY)',
      'HOUR_OF_DAY', 'HH24',
      AGGREGATE_BY ) AGGREGATE_BY
  FROM
  ( SELECT
      -1 DBID,
      -1 INSTANCE_NUMBER,
      TO_DATE('01.01.1000 09:07:00', 'dd.mm.yyyy hh24:mi:ss') BEGIN_DATE,
      TO_DATE('31.12.9999 18:00:00', 'dd.mm.yyyy hh24:mi:ss') END_DATE,
      'X' ONLY_DOWNGRADES,
      'SNAPSHOT' AGGREGATE_BY    /* SNAPSHOT, DAY, HOUR_OF_DAY or Oracle time pattern */
    FROM
      DUAL
  ),
  ( SELECT DBID OWN_DBID FROM V$DATABASE )
),
SNAPSHOTS AS
( SELECT /*+ MATERIALIZE */ 
    HSS2.DBID,
    HSS2.INSTANCE_NUMBER,
    HSS2.SNAP_ID,
    HSS1.SNAP_ID PREV_SNAP_ID,
    HSS2.BEGIN_INTERVAL_TIME,
    HSS2.END_INTERVAL_TIME,
    TO_CHAR(HSS2.END_INTERVAL_TIME, 'SSSSS') -
      TO_CHAR(HSS2.BEGIN_INTERVAL_TIME, 'SSSSS') +
      86400 * (TO_CHAR(HSS2.END_INTERVAL_TIME, 'J') - 
               TO_CHAR(HSS2.BEGIN_INTERVAL_TIME, 'J'))
      INTERVAL_SECONDS,
    DECODE(HSS2.STARTUP_TIME, HSS1.STARTUP_TIME, 'NO', 'YES') RESTART
  FROM 
    BASIS_INFO BI,
    DBA_HIST_SNAPSHOT HSS1, 
    DBA_HIST_SNAPSHOT HSS2
  WHERE
    HSS2.DBID = BI.DBID AND
    HSS1.DBID (+) = HSS2.DBID AND
    HSS2.INSTANCE_NUMBER = BI.INSTANCE_NUMBER AND
    HSS1.INSTANCE_NUMBER (+) = HSS2.INSTANCE_NUMBER AND
    HSS2.END_INTERVAL_TIME BETWEEN BI.BEGIN_TIME AND BI.END_TIME AND
    HSS1.SNAP_ID (+) = HSS2.SNAP_ID - 1
  ORDER BY
    HSS2.SNAP_ID
)
SELECT
  BEGIN_TIME,
  NO_DOWNGRADE,
  DG_TOTAL,
  DG_1_25_PCT,
  DG_25_50_PCT,
  DG_50_75_PCT,
  DG_75_99_PCT,
  DG_SERIAL
FROM
( SELECT
    BEGIN_TIME,
    TO_CHAR(NO_DOWNGRADE, 99999999990) NO_DOWNGRADE,
    TO_CHAR(DG_1_25_PCT + DG_25_50_PCT + DG_50_75_PCT +
      DG_75_99_PCT + DG_SERIAL, 9999990) DG_TOTAL,
    TO_CHAR(DG_1_25_PCT, 9999999990) DG_1_25_PCT,
    TO_CHAR(DG_25_50_PCT, 99999999990) DG_25_50_PCT,
    TO_CHAR(DG_50_75_PCT, 99999999990) DG_50_75_PCT,
    TO_CHAR(DG_75_99_PCT, 99999999990) DG_75_99_PCT,
    TO_CHAR(DG_SERIAL, 99999990) DG_SERIAL,
    ONLY_DOWNGRADES
  FROM
  ( SELECT
      TO_CHAR(BEGIN_INTERVAL_TIME, AGGREGATE_BY) BEGIN_TIME,
      SUM(SECONDS) SECONDS,
      SUM(NO_DOWNGRADE) NO_DOWNGRADE,
      SUM(DG_1_25_PCT) DG_1_25_PCT,
      SUM(DG_25_50_PCT) DG_25_50_PCT,
      SUM(DG_50_75_PCT) DG_50_75_PCT,
      SUM(DG_75_99_PCT) DG_75_99_PCT,
      SUM(DG_SERIAL) DG_SERIAL,
      ONLY_DOWNGRADES
    FROM
    ( SELECT
        SS.BEGIN_INTERVAL_TIME, 
        SS.INTERVAL_SECONDS SECONDS,
        DECODE(SS.RESTART, 'YES', HSY1.VALUE, HSY1.VALUE - 
          LAG(HSY1.VALUE, 1) OVER (ORDER BY SS.SNAP_ID)) NO_DOWNGRADE,
        DECODE(SS.RESTART, 'YES', HSY2.VALUE, HSY2.VALUE - 
          LAG(HSY2.VALUE, 1) OVER (ORDER BY SS.SNAP_ID)) DG_1_25_PCT,
        DECODE(SS.RESTART, 'YES', HSY3.VALUE, HSY3.VALUE - 
          LAG(HSY3.VALUE, 1) OVER (ORDER BY SS.SNAP_ID)) DG_25_50_PCT,
        DECODE(SS.RESTART, 'YES', HSY4.VALUE, HSY4.VALUE - 
          LAG(HSY4.VALUE, 1) OVER (ORDER BY SS.SNAP_ID)) DG_50_75_PCT,
        DECODE(SS.RESTART, 'YES', HSY5.VALUE, HSY5.VALUE - 
          LAG(HSY5.VALUE, 1) OVER (ORDER BY SS.SNAP_ID)) DG_75_99_PCT,
        DECODE(SS.RESTART, 'YES', HSY6.VALUE, HSY6.VALUE - 
          LAG(HSY6.VALUE, 1) OVER (ORDER BY SS.SNAP_ID)) DG_SERIAL,
        SS.PREV_SNAP_ID,
        BI.ONLY_DOWNGRADES,
        BI.AGGREGATE_BY
      FROM 
        BASIS_INFO BI,
        SNAPSHOTS SS,
        DBA_HIST_SYSSTAT HSY1, 
        DBA_HIST_SYSSTAT HSY2, 
        DBA_HIST_SYSSTAT HSY3,
        DBA_HIST_SYSSTAT HSY4,
        DBA_HIST_SYSSTAT HSY5,
        DBA_HIST_SYSSTAT HSY6
      WHERE
        HSY1.DBID = SS.DBID AND
        HSY2.DBID = SS.DBID AND
        HSY3.DBID = SS.DBID AND
        HSY4.DBID = SS.DBID AND
        HSY5.DBID = SS.DBID AND
        HSY6.DBID = SS.DBID AND
        HSY1.INSTANCE_NUMBER = SS.INSTANCE_NUMBER AND
        HSY2.INSTANCE_NUMBER = SS.INSTANCE_NUMBER AND
        HSY3.INSTANCE_NUMBER = SS.INSTANCE_NUMBER AND
        HSY4.INSTANCE_NUMBER = SS.INSTANCE_NUMBER AND
        HSY5.INSTANCE_NUMBER = SS.INSTANCE_NUMBER AND
        HSY6.INSTANCE_NUMBER = SS.INSTANCE_NUMBER AND
        HSY1.SNAP_ID = SS.SNAP_ID AND
        HSY2.SNAP_ID = SS.SNAP_ID AND
        HSY3.SNAP_ID = SS.SNAP_ID AND
        HSY4.SNAP_ID = SS.SNAP_ID AND
        HSY5.SNAP_ID = SS.SNAP_ID AND
        HSY6.SNAP_ID = SS.SNAP_ID AND
        HSY1.STAT_NAME = 'Parallel operations not downgraded' AND
        HSY2.STAT_NAME = 'Parallel operations downgraded 1 to 25 pct' AND
        HSY3.STAT_NAME = 'Parallel operations downgraded 25 to 50 pct' AND
        HSY4.STAT_NAME = 'Parallel operations downgraded 50 to 75 pct' AND
        HSY5.STAT_NAME = 'Parallel operations downgraded 75 to 99 pct' AND
        HSY6.STAT_NAME = 'Parallel operations downgraded to serial'
    )
    WHERE 
      PREV_SNAP_ID IS NOT NULL
    GROUP BY
      ONLY_DOWNGRADES,
      TO_CHAR(BEGIN_INTERVAL_TIME, AGGREGATE_BY)
    ORDER BY
      1 DESC
  )
)
WHERE
  ( ONLY_DOWNGRADES = ' ' OR DG_TOTAL > 0 )
));
