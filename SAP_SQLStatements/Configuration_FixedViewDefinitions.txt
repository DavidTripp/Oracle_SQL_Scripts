SELECT NULL LINE FROM DUAL WHERE 1 = 0
UNION ALL (
SELECT NULL LINE FROM DUAL WHERE 1 = 0
) UNION ALL ( SELECT * FROM (
WITH BASIS_INFO AS
( SELECT /*+ MATERIALIZE */
    DECODE(INSTANCE_NUMBER, -1, USERENV('INSTANCE'), INSTANCE_NUMBER) INSTANCE_NUMBER,
    FIXED_VIEW,
    COMPLEX_TEXT,
    COMMA_AS_SPLITTER,
    BLANK_AS_SPLITTER
  FROM
  ( SELECT
      -1 INSTANCE_NUMBER,
      'GV$FILESTAT' FIXED_VIEW,
      'X' COMPLEX_TEXT,      /* deactivation for large texts useful */
      ' ' COMMA_AS_SPLITTER,
      'X' BLANK_AS_SPLITTER
    FROM
      DUAL
  )
),
TEXT_STRING AS
( SELECT /*+ MATERIALIZE */
    FV.VIEW_DEFINITION TEXT_STRING,
    LENGTH(FV.VIEW_DEFINITION) LENGTH,
    LENGTH(REGEXP_REPLACE(FV.VIEW_DEFINITION, '[^ ]', '')) NUM_BLANKS,
    LENGTH(REGEXP_REPLACE(FV.VIEW_DEFINITION, '[^,]', '')) NUM_COMMA
  FROM
    BASIS_INFO BI,
    GV$FIXED_VIEW_DEFINITION FV
  WHERE
    BI.INSTANCE_NUMBER = FV.INST_ID AND
    FV.VIEW_NAME = BI.FIXED_VIEW
),
START_POSITIONS AS
( SELECT /*+ MATERIALIZE */
    DECODE(ROWNUM, 
      1, 1, 
      NUM_BLANKS + 2, LENGTH + 1, 
      INSTR(STL.TEXT_STRING, ' ', 1, ROWNUM - 1) + 1) POS
  FROM
    BASIS_INFO BI,
    TEXT_STRING STL,
    ( SELECT 1 FROM V$SESSTAT, V$SESSTAT WHERE ROWNUM <= 
      ( SELECT NUM_BLANKS + 2 FROM TEXT_STRING )
    )
  WHERE
    BI.COMPLEX_TEXT = 'X' AND
    BI.BLANK_AS_SPLITTER = 'X'
  UNION
  ( SELECT /*+ MATERIALIZE LEADING(AA) */
      DECODE(ROWNUM, 
        1, 1, 
        NUM_COMMA + 2, LENGTH + 1, 
        INSTR(STL.TEXT_STRING, ',', 1, ROWNUM - 1) + 1) POS
    FROM
      BASIS_INFO BI,
      TEXT_STRING STL,
      ( SELECT 1 FROM V$SESSTAT, V$SESSTAT WHERE ROWNUM <= 
        ( SELECT NUM_COMMA + 2 FROM TEXT_STRING )
      )
    WHERE
      BI.COMPLEX_TEXT = 'X' AND
      BI.COMMA_AS_SPLITTER = 'X'
  )
),
START_END_POSITIONS AS
( SELECT /*+ MATERIALIZE */
    POS1,
    NVL(POS2, POS_OVERFLOW) POS2
  FROM
  ( SELECT
      SP1.POS POS1,
      MAX(SP2.POS) POS2,
      MIN(SP3.POS) POS_OVERFLOW
    FROM
      START_POSITIONS SP1,
      START_POSITIONS SP2,
      START_POSITIONS SP3
    WHERE
      SP2.POS (+) BETWEEN SP1.POS + 1 AND SP1.POS + 80 AND
      SP3.POS > SP1.POS
    GROUP BY
      SP1.POS
  )
),
START_END_LINE_POSITIONS AS
( SELECT /*+ MATERIALIZE */
    POS1,
    POS2
  FROM
    START_END_POSITIONS
  START WITH
    POS1 = 1
  CONNECT BY PRIOR 
    POS2 = POS1
  UNION ALL
  ( SELECT
      (R.ROWNUMBER - 1) * 80 + 1 POS1,
      R.ROWNUMBER * 80 + 1 POS2
    FROM
      BASIS_INFO BI,
      TEXT_STRING STL,
      ( SELECT ROWNUM ROWNUMBER FROM V$SESSTAT WHERE ROWNUM <= 1000 ) R
    WHERE
      BI.COMPLEX_TEXT = ' ' AND
      R.ROWNUMBER * 80 <= LENGTH(STL.TEXT_STRING) + 80
  )
)
SELECT
  SUBSTR(STL.TEXT_STRING, SEP.POS1, SEP.POS2 - SEP.POS1) LINE
FROM
  START_END_LINE_POSITIONS SEP, 
  TEXT_STRING STL
ORDER BY 
  SEP.POS1
));
