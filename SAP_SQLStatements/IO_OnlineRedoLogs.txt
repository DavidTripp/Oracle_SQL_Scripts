SELECT NULL INST, NULL LSN, NULL "GROUP", NULL THREAD, NULL MEM, NULL SIZE_MB,
  NULL BEGIN_TIME, NULL MINUTES, NULL ARC, NULL STATUS FROM DUAL WHERE 1 = 0
UNION ALL (
SELECT NULL INST, NULL LSN, NULL "GROUP", NULL THREAD, NULL MEM, NULL SIZE_MB,
  NULL BEGIN_TIME, NULL MINUTES, NULL ARC, NULL STATUS FROM DUAL WHERE 1 = 0
) UNION ALL ( SELECT * FROM (
WITH BASIS_INFO AS
( SELECT
    DECODE(INSTANCE_NUMBER, -1, USERENV('INSTANCE'), INSTANCE_NUMBER) INSTANCE_NUMBER
  FROM
  ( SELECT
      -2 INSTANCE_NUMBER        /* -1 for current instance, -2 for all instances */
    FROM
      DUAL
  )
)
SELECT
  TO_CHAR(L.INST_ID, 990) INST,
  TO_CHAR(L.SEQUENCE#, 999990) LSN,
  TO_CHAR(L.GROUP#, 9990) "GROUP",
  TO_CHAR(L.THREAD#, 99990) THREAD,
  TO_CHAR(L.MEMBERS, 90)  MEM,
  TO_CHAR(L.BYTES / 1024 / 1024, 999990) SIZE_MB,
  TO_CHAR(L.FIRST_TIME, 'dd.mm.yyyy hh24:mi:ss') BEGIN_TIME,
  LPAD(DECODE(L.STATUS, 'CURRENT', '>= ') || TRUNC((DECODE(L.STATUS, 'CURRENT', SYSDATE, L.NEXT_TIME) - L.FIRST_TIME) * 86400 / 60) || ':' ||
    LPAD(TRUNC(MOD((DECODE(L.STATUS, 'CURRENT', SYSDATE, L.NEXT_TIME) - L.FIRST_TIME) * 86400, 60)), 2, '0'), 9) MINUTES,
  L.ARCHIVED ARC,
  L.STATUS
FROM
  BASIS_INFO BI,
  GV$LOG L,
  GV$INSTANCE I
WHERE
  ( BI.INSTANCE_NUMBER = -2 OR L.INST_ID = BI.INSTANCE_NUMBER ) AND
  L.INST_ID = I.INSTANCE_NUMBER AND
  L.THREAD# = I.THREAD#
ORDER BY
  BEGIN_TIME DESC
));
