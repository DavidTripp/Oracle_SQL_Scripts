SELECT NULL LATCH_NAME, NULL LATCH#, NULL OCCURRENCES, NULL PERCENT FROM DUAL WHERE 1 = 0
UNION ALL (
SELECT NULL LATCH_NAME, NULL LATCH#, NULL OCCURRENCES, NULL PERCENT FROM DUAL WHERE 1 = 0
) UNION ALL ( SELECT * FROM (
WITH BASIS_INFO AS
( SELECT /*+ MATERIALIZE */
    DECODE(DBID, -1, OWN_DBID, DBID) DBID,
    DECODE(INSTANCE_NUMBER, -1, USERENV('INSTANCE'), INSTANCE_NUMBER) INSTANCE_NUMBER,
    BEGIN_DATE,
    END_DATE,
    TO_TIMESTAMP(TO_CHAR(BEGIN_DATE, 'dd.mm.yyyy hh24:mi:ss'), 
      'dd.mm.yyyy hh24:mi:ss') BEGIN_TIME,
    TO_TIMESTAMP(TO_CHAR(END_DATE, 'dd.mm.yyyy hh24:mi:ss'), 
      'dd.mm.yyyy hh24:mi:ss') END_TIME,
    BEGIN_SNAP_ID,    
    END_SNAP_ID,
    SQL_ID,
    SESSION_ID,
    DATA_SOURCE
  FROM
  ( SELECT
      -1 DBID,
      -1 INSTANCE_NUMBER,          /* -2 for all instances, -1 for current instance */
      TO_DATE('30.03.1000 11:59:00', 'dd.mm.yyyy hh24:mi:ss') BEGIN_DATE,
      TO_DATE('30.03.9999 12:00:00', 'dd.mm.yyyy hh24:mi:ss') END_DATE,
      -1 BEGIN_SNAP_ID,   /* explicit SNAP_IDs sometimes required for ASH partition pruning */
      -1 END_SNAP_ID,
      '%' SQL_ID,
      -1 SESSION_ID,   
      'AWR' DATA_SOURCE           /* AWR, CURRENT */
    FROM
      DUAL
  ),
  ( SELECT DBID OWN_DBID FROM V$DATABASE )
),
SNAPSHOTS AS
( SELECT 
    HSS.DBID,
    HSS.INSTANCE_NUMBER,
    MIN(HSS.SNAP_ID) BEGIN_SNAP_ID,
    MIN(HSS.BEGIN_INTERVAL_TIME) BEGIN_TIME,
    MAX(HSS.SNAP_ID) END_SNAP_ID,
    MAX(HSS.END_INTERVAL_TIME) END_TIME
  FROM 
    DBA_HIST_SNAPSHOT HSS,
    BASIS_INFO BI
  WHERE
    HSS.DBID = BI.DBID AND
    HSS.END_INTERVAL_TIME >= BI.BEGIN_TIME AND
    HSS.BEGIN_INTERVAL_TIME <= BI.END_TIME AND
    ( BI.BEGIN_SNAP_ID = -1 OR
      HSS.SNAP_ID >= BI.BEGIN_SNAP_ID ) AND 
    ( BI.END_SNAP_ID = -1 OR
      HSS.SNAP_ID <= BI.END_SNAP_ID ) 
  GROUP BY
    HSS.DBID,
    HSS.INSTANCE_NUMBER
)
SELECT
  'SQL_ID: ' || SQL_ID LATCH_NAME,
  NULL LATCH#,
  NULL OCCURRENCES,
  NULL PERCENT
FROM
  BASIS_INFO
WHERE
  SQL_ID != '%'
UNION ALL
( SELECT
    'SESSION: ' || SESSION_ID LATCH_NAME,
  NULL LATCH#,
  NULL OCCURRENCES,
  NULL PERCENT
FROM
  BASIS_INFO
WHERE
  SESSION_ID != -1
)
UNION ALL
( SELECT
  NULL LATCH_NAME,
  NULL LATCH#,
  NULL OCCURRENCES,
  NULL PERCENT
FROM
  BASIS_INFO
WHERE
  SESSION_ID != -1 OR
  SQL_ID != '%'
)
UNION ALL
( SELECT
    *
  FROM
  ( SELECT
      NAME LATCH_NAME,
      TO_CHAR(LATCH#, 99990) LATCH#,
      TO_CHAR(OCCURRENCES, 9999999990) OCCURRENCES,
      TO_CHAR(PERCENT, 990.99) PERCENT
    FROM
    ( SELECT /*+ FULL(ASH.ASH) */
        L.NAME,
        L.LATCH#,
        COUNT(*) OCCURRENCES,
        ROUND(RATIO_TO_REPORT(COUNT(*)) OVER () * 100, 2) PERCENT
      FROM
        BASIS_INFO BI,
        SNAPSHOTS SS,
        DBA_HIST_ACTIVE_SESS_HISTORY ASH,
        V$LATCH L
      WHERE
        ASH.DBID = SS.DBID AND
        ASH.SNAP_ID BETWEEN SS.BEGIN_SNAP_ID AND SS.END_SNAP_ID AND
        ASH.SAMPLE_TIME BETWEEN BI.BEGIN_TIME AND BI.END_TIME AND
        NVL(ASH.SQL_ID, ' ') LIKE BI.SQL_ID AND
        ( BI.INSTANCE_NUMBER = -2 OR 
          BI.INSTANCE_NUMBER = ASH.INSTANCE_NUMBER ) AND
        ( BI.SESSION_ID = -1 OR
          BI.SESSION_ID = ASH.SESSION_ID ) AND
        BI.DATA_SOURCE = 'AWR' AND
        ASH.P2 = L.LATCH# AND
        ASH.EVENT = 'latch free' AND
        ASH.SESSION_STATE = 'WAITING'
      GROUP BY
        L.LATCH#,
        L.NAME
      UNION ALL
      ( SELECT
          L.NAME,
          L.LATCH#,
          COUNT(*) OCCURRENCES,
          ROUND(RATIO_TO_REPORT(COUNT(*)) OVER () * 100, 2) PERCENT
        FROM
          BASIS_INFO BI,
          SNAPSHOTS SS,
          GV$ACTIVE_SESSION_HISTORY ASH,
          V$LATCH L
        WHERE
          ASH.SAMPLE_TIME BETWEEN BI.BEGIN_TIME AND BI.END_TIME AND
          NVL(ASH.SQL_ID, ' ') LIKE BI.SQL_ID AND
          ( BI.INSTANCE_NUMBER = -2 OR 
            BI.INSTANCE_NUMBER = ASH.INST_ID ) AND
          ( BI.SESSION_ID = -1 OR
            BI.SESSION_ID = ASH.SESSION_ID ) AND
          BI.DATA_SOURCE = 'CURRENT' AND
          ASH.P2 = L.LATCH# AND
          ASH.EVENT = 'latch free' AND
          ASH.SESSION_STATE = 'WAITING'
        GROUP BY
          L.LATCH#,
          L.NAME 
      )
    )
    ORDER BY
      OCCURRENCES DESC
  )
)
));
