WITH
	/*+ 
	SET PAGESIZE 2000
	SET LINESIZE 2000
	COL REMARK FOR A20
	COL SQL_TEXT FOR A64
	*/ 
	FUNCTION SQLTEXT_EXPAND(INPUT CLOB) RETURN CLOB IS
		OUTPUT CLOB;
	BEGIN
		DBMS_UTILITY.EXPAND_SQL_TEXT 
			(	INPUT, 
				OUTPUT);
	RETURN OUTPUT;
	END;
BASIS_INFO AS
(
SELECT
	'0w26sk6t6gq98'	SQL_ID
FROM
DUAL
)
SELECT 
	'SQL_ID' REMARK,
	SQL_ID SQL_TEXT
FROM
	BASIS_INFO
UNION ALL
SELECT * FROM 
(
SELECT 
	DECODE(VCNT.CNT,1,'Original Text','') REMARK,
	DBMS_LOB.SUBSTR(VS.SQL_FULLTEXT,64,(VCNT.CNT-1)*64+1) SQL_TEXT
FROM
	V$SQL VS,
	BASIS_INFO BI,
	(SELECT LEVEL CNT FROM DUAL CONNECT BY LEVEL <= 100) VCNT
WHERE
	VS.SQL_ID LIKE BI.SQL_ID AND
	DBMS_LOB.SUBSTR(VS.SQL_FULLTEXT,64,(VCNT.CNT-1)*64+1) IS NOT NULL
ORDER BY VCNT.CNT
)
UNION ALL
SELECT * FROM 
(
SELECT 
	DECODE(VCNT.CNT,1,'Expanded Text','') REMARK,
	DBMS_LOB.SUBSTR(SQLOUTTEXT.OUTTEXT,64,(VCNT.CNT-1)*64+1) SQL_TEXT
FROM
	(SELECT 
		SQLTEXT_EXPAND(VS.SQL_FULLTEXT) OUTTEXT 
	FROM 
		V$SQL VS,
		BASIS_INFO BI
	WHERE
		VS.SQL_ID LIKE BI.SQL_ID) SQLOUTTEXT,
	(SELECT LEVEL CNT FROM DUAL CONNECT BY LEVEL <= 100) VCNT
WHERE
	DBMS_LOB.SUBSTR(SQLOUTTEXT.OUTTEXT,64,(VCNT.CNT-1)*64+1) IS NOT NULL
ORDER BY VCNT.CNT
)
	
	
	
	