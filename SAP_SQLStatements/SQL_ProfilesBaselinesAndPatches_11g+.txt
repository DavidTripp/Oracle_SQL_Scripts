SELECT NULL TYPE, NULL HANDLE, NULL NAME, NULL CREATION_TIME, NULL SQL_ID, NULL PLAN_HASH, 
  NULL ADDITIONAL_INFORMATION, NULL SQL_TEXT FROM DUAL WHERE 1 = 0
UNION ALL (
SELECT NULL TYPE, NULL HANDLE, NULL NAME, NULL CREATION_TIME, NULL SQL_ID, NULL PLAN_HASH, 
  NULL ADDITIONAL_INFORMATION, NULL SQL_TEXT FROM DUAL WHERE 1 = 0
) UNION ALL ( SELECT * FROM (
WITH BASIS_INFO AS
( SELECT /*+ MATERIALIZE */
    DECODE(DBID, -1, OWN_DBID, DBID) DBID,
    DECODE(INSTANCE_NUMBER, -1, USERENV('INSTANCE'), INSTANCE_NUMBER) INSTANCE_NUMBER,
    DISPLAY_BASELINES,
    DISPLAY_PROFILES,
    DISPLAY_PATCHES,
    DATA_SOURCE
  FROM
  ( SELECT
      -1 DBID,
      -1 INSTANCE_NUMBER,          /* -2 for all instances, -1 for current instance */
      'X' DISPLAY_BASELINES,
      'X' DISPLAY_PROFILES,
      'X' DISPLAY_PATCHES,
      'ALL' DATA_SOURCE            /* AWR, CURRENT, ALL */
  FROM
    DUAL
  ),
  ( SELECT DBID OWN_DBID FROM V$DATABASE )
),
SQL_STATEMENTS AS
( SELECT DISTINCT
    *
  FROM
  ( SELECT
      S.SQL_ID,
      S.PLAN_HASH_VALUE PLAN_HASH,
      S.SQL_PLAN_BASELINE,
      S.SQL_PROFILE,
      S.SQL_PATCH
    FROM
      BASIS_INFO BI,
      GV$SQL S
    WHERE
      ( BI.INSTANCE_NUMBER = -2 OR S.INST_ID = BI.INSTANCE_NUMBER ) AND
      ( BI.DISPLAY_BASELINES = 'X' AND S.SQL_PLAN_BASELINE IS NOT NULL OR
        BI.DISPLAY_PROFILES = 'X' AND S.SQL_PROFILE IS NOT NULL OR
        BI.DISPLAY_PATCHES = 'X' AND S.SQL_PATCH IS NOT NULL ) AND
      BI.DATA_SOURCE IN ('CURRENT', 'ALL')
    UNION ALL
    ( SELECT DISTINCT
        S.SQL_ID,
        S.PLAN_HASH_VALUE PLAN_HASH,
        NULL SQL_PLAN_BASELINE,
        S.SQL_PROFILE,
        NULL SQL_PATCH
      FROM
        BASIS_INFO BI,
        DBA_HIST_SQLSTAT S
      WHERE
        ( BI.INSTANCE_NUMBER = -2 OR S.INSTANCE_NUMBER = BI.INSTANCE_NUMBER ) AND
        BI.DBID = S.DBID AND
        BI.DISPLAY_PROFILES = 'X' AND 
        S.SQL_PROFILE IS NOT NULL AND
        BI.DATA_SOURCE IN ('AWR', 'ALL')
    )
  )
)
SELECT 
  DECODE(ROW_NUMBER() OVER (PARTITION BY TYPE, NAME, CREATED ORDER BY SQL_ID), 1, TYPE, NULL) TYPE,
  DECODE(ROW_NUMBER() OVER (PARTITION BY TYPE, NAME, CREATED ORDER BY SQL_ID), 1, HANDLE, NULL) HANDLE,
  DECODE(ROW_NUMBER() OVER (PARTITION BY TYPE, NAME, CREATED ORDER BY SQL_ID), 1, NAME, NULL) NAME,
  DECODE(ROW_NUMBER() OVER (PARTITION BY TYPE, NAME, CREATED ORDER BY SQL_ID), 1, TO_CHAR(CREATED, 'dd.mm.yyyy hh24:mi:ss'), NULL) CREATION_TIME,
  SQL_ID,
  PLAN_HASH,
  ADDITIONAL_INFORMATION,
  SQL_TEXT
FROM
( SELECT DISTINCT
    'PROFILE' TYPE,
    ' ' HANDLE,
    SP.NAME,
    SP.CREATED,
    SQ.SQL_ID,
    SQ.PLAN_HASH,
    SP.TYPE || ', ' || STATUS ADDITIONAL_INFORMATION,
    TO_CHAR(DBMS_LOB.SUBSTR(SP.SQL_TEXT, 200, 1)) SQL_TEXT
  FROM
    SQL_STATEMENTS SQ,
    DBA_SQL_PROFILES SP
  WHERE
    SP.NAME = SQ.SQL_PROFILE (+)
  UNION ALL
  ( SELECT DISTINCT
      'BASELINE' TYPE,
      SP.SQL_HANDLE HANDLE,
      SP.PLAN_NAME NAME,
      SP.CREATED,
      SQ.SQL_ID,
      SQ.PLAN_HASH,
      'ENABLED: ' || SUBSTR(SP.ENABLED, 1, 1) || ', ACCEPTED: ' || SUBSTR(SP.ACCEPTED, 1, 1) || 
        DECODE(MODULE, NULL, NULL, ', MODULE: ' || SP.MODULE) ADDITIONAL_INFORMATION,
      TO_CHAR(DBMS_LOB.SUBSTR(SP.SQL_TEXT, 200, 1)) SQL_TEXT
    FROM
      SQL_STATEMENTS SQ,
      DBA_SQL_PLAN_BASELINES SP
    WHERE
      SP.PLAN_NAME = SQ.SQL_PLAN_BASELINE (+)
  )
  UNION ALL
  ( SELECT DISTINCT
      'PATCH' TYPE,
      ' ' HANDLE,
      SP.NAME,
      SP.CREATED,
      SQ.SQL_ID,
      SQ.PLAN_HASH,
      SP.STATUS ADDITIONAL_INFORMATION,
      TO_CHAR(DBMS_LOB.SUBSTR(SP.SQL_TEXT, 200, 1)) SQL_TEXT
    FROM
      SQL_STATEMENTS SQ,
      DBA_SQL_PATCHES SP
    WHERE
      SP.NAME = SQ.SQL_PATCH (+)
  )
) S
ORDER BY
  S.TYPE, 
  S.NAME,
  S.CREATED,
  S.SQL_ID
));

