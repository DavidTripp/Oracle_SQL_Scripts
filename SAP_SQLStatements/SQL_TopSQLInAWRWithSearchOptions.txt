SELECT NULL SQL_ID, NULL ACT_SESS, NULL EXECUTIONS, NULL ELA_TIME_MS, 
  NULL ELA_MS_PER_EXEC, NULL CPU_TIME_MS, NULL CPU_MS_PER_EXEC, NULL ROWS_PROC, 
  NULL ROWS_PER_EXEC, NULL DISK_READS, NULL READS_PER_EXEC, NULL BUFFER_GETS, 
  NULL GETS_PER_EXEC, NULL GETS_PER_ROW, NULL DIRECT_WRITES, NULL CL_TIME_MS,
  NULL CL_MS_PER_EXEC, NULL AVG_PARSE_MS, NULL PX_SERVERS,
  NULL MODULE, NULL TABLES, NULL SQL_TEXT FROM DUAL WHERE 1 = 0
UNION ALL (
SELECT NULL SQL_ID, NULL ACT_SESS, NULL EXECUTIONS, NULL ELA_TIME_MS, 
  NULL ELA_MS_PER_EXEC, NULL CPU_TIME_MS, NULL CPU_MS_PER_EXEC, NULL ROWS_PROC, 
  NULL ROWS_PER_EXEC, NULL DISK_READS, NULL READS_PER_EXEC, NULL BUFFER_GETS, 
  NULL GETS_PER_EXEC, NULL GETS_PER_ROW, NULL DIRECT_WRITES, NULL CL_TIME_MS,
  NULL CL_MS_PER_EXEC, NULL AVG_PARSE_MS, NULL PX_SERVERS,
  NULL MODULE, NULL TABLES, NULL SQL_TEXT FROM DUAL WHERE 1 = 0
) UNION ALL ( SELECT * FROM (
WITH BASIS_INFO AS
( SELECT /*+ MATERIALIZE */
    DECODE(DBID, -1, OWN_DBID, DBID) DBID,
    DECODE(INSTANCE_NUMBER, -1, USERENV('INSTANCE'), INSTANCE_NUMBER) INSTANCE_NUMBER,
    BEGIN_DATE,
    END_DATE,
    TO_TIMESTAMP(TO_CHAR(BEGIN_DATE, 'dd.mm.yyyy hh24:mi:ss'), 'dd.mm.yyyy hh24:mi:ss') BEGIN_TIME,
    TO_TIMESTAMP(TO_CHAR(END_DATE, 'dd.mm.yyyy hh24:mi:ss'), 'dd.mm.yyyy hh24:mi:ss') END_TIME,
    BEGIN_SNAP_ID,    
    END_SNAP_ID,
    SORTING_BY,
    SQL_PATTERN,
    NUM_RECORDS,
    TABLE_NAME,
    MODULE_PATTERN,
    SHORT_SQL_TEXT
  FROM
  ( SELECT
      -1 DBID,
      -1 INSTANCE_NUMBER,
      TO_DATE('01.01.1000 03:55:00', 'dd.mm.yyyy hh24:mi:ss') BEGIN_DATE,
      TO_DATE('31.12.9999 05:05:00', 'dd.mm.yyyy hh24:mi:ss') END_DATE,
      -1 BEGIN_SNAP_ID,   
      -1 END_SNAP_ID,
      'Elapsed Time' SORTING_BY,         
        /* 'Elapsed Time', 'Executions', 'Records', 'Disk Reads', 
           'Buffer Gets', 'CPU Time', 'Direct Writes' 'Cluster Time', 'PX Servers' */
      '%' SQL_PATTERN,
      300 NUM_RECORDS,
      '%' TABLE_NAME,
      '%' MODULE_PATTERN,
      ' ' SHORT_SQL_TEXT
    FROM
      DUAL
  ),
  ( SELECT DBID OWN_DBID FROM V$DATABASE )
),
SNAPSHOTS AS
( SELECT /*+ MATERIALIZE */
    SS.DBID,
    SS.INSTANCE_NUMBER,
    MIN(SS.SNAP_ID) BEGIN_SNAP_ID,
    MIN(SS.BEGIN_INTERVAL_TIME) BEGIN_TIME,
    MAX(SS.SNAP_ID) END_SNAP_ID,
    MAX(SS.END_INTERVAL_TIME) END_TIME,
    SUM(TO_CHAR(SS.END_INTERVAL_TIME, 'SSSSS') -
      TO_CHAR(SS.BEGIN_INTERVAL_TIME, 'SSSSS') +
      86400 * (TO_CHAR(SS.END_INTERVAL_TIME, 'J') - 
               TO_CHAR(SS.BEGIN_INTERVAL_TIME, 'J')))
      SECONDS
  FROM 
    DBA_HIST_SNAPSHOT SS,
    BASIS_INFO BI
  WHERE
    BI.DBID = SS.DBID AND
    BI.INSTANCE_NUMBER = SS.INSTANCE_NUMBER AND
    SS.BEGIN_INTERVAL_TIME >= BI.BEGIN_TIME AND
    SS.END_INTERVAL_TIME <= BI.END_TIME
  GROUP BY
    SS.DBID,
    SS.INSTANCE_NUMBER
),
SQL_STATEMENTS AS
( SELECT 
    *
  FROM
  ( SELECT
      HSQ.SQL_ID SQL_ID,
      SUM(HSQ.EXECUTIONS_DELTA) EXECUTIONS,
      SUM(HSQ.ROWS_PROCESSED_DELTA) ROWS_PROCESSED,
      SUM(HSQ.DISK_READS_DELTA) DISK_READS,
      SUM(HSQ.BUFFER_GETS_DELTA) BUFFER_GETS,
      SUM(HSQ.CPU_TIME_DELTA) CPU_TIME_MICRO,
      SUM(HSQ.ELAPSED_TIME_DELTA) ELA_TIME_MICRO,
      DECODE(SS.SECONDS, 0, 0, SUM(HSQ.ELAPSED_TIME_DELTA) / 
        1000000 / SS.SECONDS) ACTIVE_SESSIONS,
      SUM(HSQ.DIRECT_WRITES_DELTA) DIRECT_WRITES,
      SUM(HSQ.CLWAIT_DELTA) CLUSTER_TIME_MICRO,
      SUM(HSQ.PX_SERVERS_EXECS_DELTA) PX_SERVERS,
      MIN(HSQ.MODULE) MODULE,
      MIN(HSQ.PARSING_SCHEMA_NAME) PARSING_SCHEMA_NAME,
      AVG(SQS.AVG_HARD_PARSE_TIME) AVG_HARD_PARSE_TIME_MICRO,
      TRANSLATE(MIN(TO_CHAR(SUBSTR(HST.SQL_TEXT, 1, 3000))), 
        CHR(10), ' ') SQL_TEXT
    FROM
      DBA_HIST_SQLSTAT HSQ,
      DBA_HIST_SQLTEXT HST,
      V$SQLSTATS SQS,
      SNAPSHOTS SS,
      BASIS_INFO BI
    WHERE
      SS.DBID = HSQ.DBID AND
      HST.DBID (+) = HSQ.DBID AND
      SS.INSTANCE_NUMBER = HSQ.INSTANCE_NUMBER AND
      HST.SQL_ID (+) = HSQ.SQL_ID AND
      SQS.SQL_ID (+) = HSQ.SQL_ID AND
      HSQ.SNAP_ID BETWEEN SS.BEGIN_SNAP_ID AND SS.END_SNAP_ID AND
      ( BI.MODULE_PATTERN = '%' OR HSQ.MODULE LIKE BI.MODULE_PATTERN )
    GROUP BY
      HSQ.SQL_ID,
      BI.SORTING_BY,
      SS.SECONDS
    ORDER BY 
      DECODE( BI.SORTING_BY, 
        'Elapsed Time',  ELA_TIME_MICRO,
        'Executions',    EXECUTIONS,
        'Records',       ROWS_PROCESSED,
        'Disk Reads',    DISK_READS,
        'Buffer Gets',   BUFFER_GETS,
        'CPU Time',      CPU_TIME_MICRO,
        'Direct Writes', DIRECT_WRITES,
        'Cluster Time',  CLUSTER_TIME_MICRO ) DESC
  ) SQ,
    BASIS_INFO BI
  WHERE
    SQ.SQL_TEXT LIKE BI.SQL_PATTERN 
),
TABLE_INFO AS
( SELECT
    TI.SQL_ID SQL_ID,
    TI.TABLE_OWNER TABLE_OWNER,
    TI.TABLE_NAME TABLE_NAME
  FROM
    SQL_STATEMENTS SQ,
  ( SELECT 
      SQ.SQL_ID SQL_ID,
      SP.OBJECT_OWNER TABLE_OWNER, 
      SP.OBJECT_NAME TABLE_NAME
    FROM 
      SQL_STATEMENTS SQ,
      DBA_HIST_SQL_PLAN SP,
      BASIS_INFO BI
    WHERE
      SQ.SQL_ID = SP.SQL_ID AND 
      ( SP.OBJECT_TYPE LIKE '%TABLE%' OR SP.OPERATION = 'DELETE' )
    UNION
    ( SELECT  
        SQ.SQL_ID SQL_ID,
        I.TABLE_OWNER TABLE_OWNER, 
        I.TABLE_NAME TABLE_NAME
      FROM 
        SQL_STATEMENTS SQ,
        DBA_HIST_SQL_PLAN SP,
        DBA_INDEXES I,
        BASIS_INFO BI
      WHERE
        SP.OBJECT_OWNER = I.OWNER AND
        SP.OBJECT_NAME = I.INDEX_NAME AND
        SP.OBJECT_TYPE LIKE '%INDEX%' AND
        SQ.SQL_ID = SP.SQL_ID 
    )
    UNION
    ( SELECT 
        SQ.SQL_ID SQL_ID,
        SQ.PARSING_SCHEMA_NAME TABLE_OWNER,
        REGEXP_REPLACE(SQ.SQL_TEXT, 'INSERT INTO[ "]+([^ "]+)[ "]+.*', 
          '\1', 1, 1, 'i') TABLE_NAME
        FROM 
          SQL_STATEMENTS SQ
    )
    UNION
    ( SELECT 
        SQ.SQL_ID SQL_ID,
        REGEXP_REPLACE(SQ.SQL_TEXT,
          'BEGIN DBMS_STATS.*OWNNAME => [''"]+([^''"]+)[''"]+.*', 
          '\1', 1, 1, 'i') TABLE_OWNER,
        REGEXP_REPLACE(SQ.SQL_TEXT,
          'BEGIN DBMS_STATS.*TABNAME => [''"]+([^''"]+)[''"]+.*', 
          '\1', 1, 1, 'i') TABLE_NAME
      FROM 
        SQL_STATEMENTS SQ
    ) 
  ) TI
  WHERE
    SQ.SQL_ID = TI.SQL_ID AND
    TI.TABLE_NAME != SQ.SQL_TEXT
)
SELECT
  TO_CHAR(BEGIN_TIME, 'dd.mm.yyyy') SQL_ID,
  '   -' ACT_SESS,
  TO_CHAR(END_TIME, 'dd.mm.yyyy') EXECUTIONS,
  NULL ELA_TIME_MS, 
  NULL ELA_MS_PER_EXEC, 
  NULL CPU_TIME_MS, 
  NULL CPU_MS_PER_EXEC, 
  NULL ROWS_PROC, 
  NULL ROWS_PER_EXEC,
  NULL DISK_READS, 
  NULL READS_PER_EXEC, 
  NULL BUFFER_GETS, 
  NULL GETS_PER_EXEC,
  NULL GETS_PER_ROW, 
  NULL DIRECT_WRITES, 
  NULL CL_TIME_MS,
  NULL CL_MS_PER_EXEC,
  NULL AVG_PARSE_MS,
  NULL PX_SERVERS,
  NULL MODULE, 
  NULL TABLES, 
  NULL SQL_TEXT  
FROM
  SNAPSHOTS
UNION ALL
( SELECT
    TO_CHAR(BEGIN_TIME, 'hh24:mi:ss') SQL_ID,
    '   -' ACT_SESS,
    TO_CHAR(END_TIME, 'hh24:mi:ss') EXECUTIONS,
    NULL ELA_TIME_MS, 
    NULL ELA_MS_PER_EXEC, 
    NULL CPU_TIME_MS, 
    NULL CPU_MS_PER_EXEC, 
    NULL ROWS_PROC, 
    NULL ROWS_PER_EXEC,
    NULL DISK_READS, 
    NULL READS_PER_EXEC, 
    NULL BUFFER_GETS, 
    NULL GETS_PER_EXEC,
    NULL GETS_PER_ROW, 
    NULL DIRECT_WRITES, 
    NULL CL_TIME_MS,
    NULL CL_MS_PER_EXEC,
    NULL AVG_PARSE_MS,
    NULL PX_SERVERS,
    NULL MODULE, 
    NULL TABLES, 
    NULL SQL_TEXT  
  FROM
    SNAPSHOTS
)
UNION ALL
( SELECT 
    NULL SQL_ID, 
    NULL ACT_SESS, 
    NULL EXECUTIONS, 
    NULL ELA_TIME_MS, 
    NULL ELA_MS_PER_EXEC, 
    NULL CPU_TIME_MS, 
    NULL CPU_MS_PER_EXEC, 
    NULL ROWS_PROC, 
    NULL ROWS_PER_EXEC,
    NULL DISK_READS, 
    NULL READS_PER_EXEC, 
    NULL BUFFER_GETS, 
    NULL GETS_PER_EXEC,
    NULL GETS_PER_ROW, 
    NULL DIRECT_WRITES, 
    NULL CL_TIME_MS,
    NULL CL_MS_PER_EXEC,
    NULL AVG_PARSE_MS,
    NULL PX_SERVERS,
    NULL MODULE, 
    NULL TABLES, 
    NULL SQL_TEXT
  FROM 
    DUAL 
)
UNION ALL
( SELECT
    SQL_ID,
    ACT_SESS,
    EXECUTIONS,
    ELA_TIME_MS,
    ELA_MS_PER_EXEC,
    CPU_TIME_MS,
    CPU_MS_PER_EXEC,
    ROWS_PROC,
    ROWS_PER_EXEC,
    DISK_READS,
    READS_PER_EXEC,
    BUFFER_GETS,
    GETS_PER_EXEC,
    GETS_PER_ROW,
    DIRECT_WRITES,
    CL_TIME_MS,
    CL_MS_PER_EXEC,
    AVG_PARSE_MS,
    PX_SERVERS,
    MODULE,
    TABLES,
    SUBSTR(SQL_TEXT, 1, 200) SQL_TEXT
  FROM
  ( SELECT
      SQL_ID,
      TO_CHAR(EXECUTIONS, 9999999990) EXECUTIONS,
      TO_CHAR(ROWS_PROCESSED, 999999999990) ROWS_PROC,
      TO_CHAR(DECODE(EXECUTIONS, 0, 0, ROWS_PROCESSED / EXECUTIONS),
        999999990.99) ROWS_PER_EXEC,
      TO_CHAR(DISK_READS, 999999990) DISK_READS,
      TO_CHAR(DECODE(EXECUTIONS, 0, 0, DISK_READS / EXECUTIONS), 
        9999999990.99) READS_PER_EXEC,
      TO_CHAR(BUFFER_GETS, 999999999990) BUFFER_GETS,
      TO_CHAR(DECODE(EXECUTIONS, 0, 0, BUFFER_GETS / EXECUTIONS), 
        9999999990.99) GETS_PER_EXEC,
      TO_CHAR(DECODE(ROWS_PROCESSED, 0, 0, BUFFER_GETS / ROWS_PROCESSED), 
        99999990.99) GETS_PER_ROW,
      TO_CHAR(CPU_TIME_MICRO / 1000, 9999999990) CPU_TIME_MS,
      TO_CHAR(DECODE(EXECUTIONS, 0, 0, CPU_TIME_MICRO / EXECUTIONS) / 
        1000, 99999999990.99) CPU_MS_PER_EXEC,
      TO_CHAR(ACTIVE_SESSIONS, 9990.99) ACT_SESS,
      TO_CHAR(ELA_TIME_MICRO / 1000, 99999999990) ELA_TIME_MS,
      TO_CHAR(DECODE(EXECUTIONS, 0, 0, ELA_TIME_MICRO / EXECUTIONS) / 
        1000, 99999999990.99) ELA_MS_PER_EXEC,
      TO_CHAR(DIRECT_WRITES, 999999999990) DIRECT_WRITES,
      TO_CHAR(CLUSTER_TIME_MICRO / 1000, 999999990) CL_TIME_MS,
      TO_CHAR(DECODE(EXECUTIONS, 0, 0, CLUSTER_TIME_MICRO / EXECUTIONS) /
        1000, 9999999990.99) CL_MS_PER_EXEC,
      TO_CHAR(AVG_HARD_PARSE_TIME_MICRO / 1000, 99999990.99) AVG_PARSE_MS,
      TO_CHAR(PX_SERVERS, 999999990) PX_SERVERS,
      MODULE,
      TABLE_NAME || ' ' || 
        LEAD(TABLE_NAME, 1) OVER (PARTITION BY SQL_ID ORDER BY 
          TABLE_NAME) || ' ' ||
        LEAD(TABLE_NAME, 2) OVER (PARTITION BY SQL_ID ORDER BY 
          TABLE_NAME) || ' ' ||
        LEAD(TABLE_NAME, 3) OVER (PARTITION BY SQL_ID ORDER BY 
          TABLE_NAME) || ' ' ||
        LEAD(TABLE_NAME, 4) OVER (PARTITION BY SQL_ID ORDER BY 
          TABLE_NAME) || ' ' ||
        LEAD(TABLE_NAME, 5) OVER (PARTITION BY SQL_ID ORDER BY 
          TABLE_NAME) TABLES,
      TABLE_NUM, 
      DECODE(SHORT_SQL_TEXT, 'X',
        DECODE(WORD_1,
          'CREATE', WORD_1 || ' ' || WORD_2 || DECODE(WORD_2, 
            'BITMAP', ' ' || WORD_3, 'UNIQUE', ' ' || WORD_3),
          'LOCK', WORD_1 || ' ' || WORD_2,
          'ALTER', WORD_1 || ' ' || WORD_2,
          'BEGIN', DECODE(WORD_2, 'SYS', WORD_4, WORD_2),
          '/*', WORD_4 || ' ' || WORD_5, 
          'MERGE/*' || '+', 'MERGE',
          'CALL', WORD_2,
          WORD_1),
        SQL_TEXT)  SQL_TEXT,
      NUM_RECORDS,
      SORTING_BY
    FROM
    ( SELECT
        SQ.SQL_ID,
        SQ.EXECUTIONS,
        SQ.ROWS_PROCESSED,
        SQ.DISK_READS,
        SQ.BUFFER_GETS,
        SQ.CPU_TIME_MICRO,
        SQ.ELA_TIME_MICRO,
        SQ.ACTIVE_SESSIONS,
        SQ.DIRECT_WRITES,
        SQ.CLUSTER_TIME_MICRO,
        SQ.MODULE,
        SQ.AVG_HARD_PARSE_TIME_MICRO,
        SQ.PX_SERVERS,
        TI.TABLE_NAME, 
        ROW_NUMBER () OVER ( PARTITION BY SQ.SQL_ID ORDER BY 
          TI.TABLE_NAME ) TABLE_NUM,
        REGEXP_REPLACE(UPPER(SQL_TEXT), ' *([^ (]+) *.*', '\1', 
          1, 1, 'i') WORD_1,
        REGEXP_REPLACE(UPPER(SQL_TEXT), ' *[^ (]+[ (]+([^ (]+) *.*', '\1', 
          1, 1, 'i') WORD_2,
        REGEXP_REPLACE(UPPER(SQL_TEXT), 
          ' *[^ (]+[ (]+[^ (]+[ (]+([^ (]+) *.*', '\1', 
          1, 1, 'i') WORD_3,
        REGEXP_REPLACE(UPPER(SQL_TEXT), 
          ' *[^ (]+[ (]+[^ (]+[ (]+[^ (]+[ (]+([^ (]+) *.*', '\1', 
          1, 1, 'i') WORD_4,
        REGEXP_REPLACE(UPPER(SQL_TEXT), 
          ' *[^ (]+[ (]+[^ (]+[ (]+[^ (]+[ (]+[^ (]+[ (]+([^ (]+) *.*', 
          '\1', 1, 1, 'i') WORD_5,
        SQ.SQL_TEXT,
        BI.NUM_RECORDS,
        BI.SORTING_BY,
        BI.SHORT_SQL_TEXT
      FROM
        SQL_STATEMENTS SQ,
        TABLE_INFO TI,
        BASIS_INFO BI
      WHERE
        SQ.SQL_ID = TI.SQL_ID (+) AND
        ( BI.TABLE_NAME = '%' OR 
          BI.TABLE_NAME IN ( SELECT TABLE_NAME FROM TABLE_INFO TI2 
            WHERE SQ.SQL_ID = TI2.SQL_ID ) 
        )
    )
    ORDER BY 
      DECODE ( SORTING_BY, 
        'Elapsed Time',  ELA_TIME_MICRO,
        'Executions',    EXECUTIONS,
        'Records',       ROWS_PROCESSED,
        'Disk Reads',    DISK_READS,
        'Buffer Gets',   BUFFER_GETS,
        'CPU Time',      CPU_TIME_MICRO,
        'Direct Writes', DIRECT_WRITES,
        'PX Servers',    PX_SERVERS,
        'Cluster Time',  CLUSTER_TIME_MICRO ) DESC     
  )
  WHERE
    TABLE_NUM = 1 AND
    (NUM_RECORDS = -1 OR ROWNUM <= NUM_RECORDS)
)
));
