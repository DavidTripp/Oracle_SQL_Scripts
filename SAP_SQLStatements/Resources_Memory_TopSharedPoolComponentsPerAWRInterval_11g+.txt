SELECT 
  /* 11g: - NTH_VALUE */
  NULL END_INTERVAL_TIME, NULL INST, NULL COMPONENT_1, 
  NULL SIZE_1_MB,
  NULL COMPONENT_2, NULL SIZE_2_MB, NULL COMPONENT_3, NULL SIZE_3_MB,
  NULL COMPONENT_4, NULL SIZE_4_MB, NULL COMPONENT_5, NULL SIZE_5_MB
  FROM DUAL WHERE 1 = 0
UNION ALL (
SELECT NULL END_INTERVAL_TIME, NULL INST, NULL COMPONENT_1, 
  NULL SIZE_1_MB,
  NULL COMPONENT_2, NULL SIZE_2_MB, NULL COMPONENT_3, NULL SIZE_3_MB,
  NULL COMPONENT_4, NULL SIZE_4_MB, NULL COMPONENT_5, NULL SIZE_5_MB
  FROM DUAL WHERE 1 = 0
) UNION ALL ( SELECT * FROM (
WITH BASIS_INFO AS
( SELECT /*+ MATERIALIZE */
    DECODE(DBID, -1, OWN_DBID, DBID) DBID,
    DECODE(INSTANCE_NUMBER, -1, USERENV('INSTANCE'), INSTANCE_NUMBER) INSTANCE_NUMBER,
    COMPONENT
  FROM
  ( SELECT
      -1 DBID,
      -1 INSTANCE_NUMBER,
      '%' COMPONENT
    FROM
      DUAL
  ),
  ( SELECT DBID OWN_DBID FROM V$DATABASE ) 
)
SELECT 
  TO_CHAR(END_INTERVAL_TIME, 'YYYY-MM-DD HH24:MI:SS') END_INTERVAL_TIME,
  TO_CHAR(INST_ID, 990) INST,
  COMPONENT_1,
  TO_CHAR(SIZE_1_MB, 99990.99) SIZE_1_MB,
  COMPONENT_2,
  TO_CHAR(SIZE_2_MB, 99990.99) SIZE_2_MB,
  COMPONENT_3,
  TO_CHAR(SIZE_3_MB, 99990.99) SIZE_3_MB,
  COMPONENT_4,
  TO_CHAR(SIZE_4_MB, 99990.99) SIZE_4_MB,
  COMPONENT_5,
  TO_CHAR(SIZE_5_MB, 99990.99) SIZE_5_MB
  FROM
( SELECT DISTINCT
    HSG.SNAP_ID,
    HSS.INSTANCE_NUMBER INST_ID,
    HSS.END_INTERVAL_TIME, 
    NTH_VALUE(HSG.NAME, 1) OVER (PARTITION BY HSG.SNAP_ID ORDER BY HSG.BYTES DESC 
      ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) COMPONENT_1,
    NTH_VALUE(HSG.BYTES, 1) OVER (PARTITION BY HSG.SNAP_ID ORDER BY HSG.BYTES DESC
      ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) / 1024 / 1024 SIZE_1_MB,
    NTH_VALUE(HSG.NAME, 2) OVER (PARTITION BY HSG.SNAP_ID ORDER BY HSG.BYTES DESC
      ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) COMPONENT_2,
    NTH_VALUE(HSG.BYTES, 2) OVER (PARTITION BY HSG.SNAP_ID ORDER BY HSG.BYTES DESC
      ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) / 1024 / 1024 SIZE_2_MB,
    NTH_VALUE(HSG.NAME, 3) OVER (PARTITION BY HSG.SNAP_ID ORDER BY HSG.BYTES DESC
      ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) COMPONENT_3,
    NTH_VALUE(HSG.BYTES, 3) OVER (PARTITION BY HSG.SNAP_ID ORDER BY HSG.BYTES DESC
      ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) / 1024 / 1024 SIZE_3_MB,
    NTH_VALUE(HSG.NAME, 4) OVER (PARTITION BY HSG.SNAP_ID ORDER BY HSG.BYTES DESC
      ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) COMPONENT_4,
    NTH_VALUE(HSG.BYTES, 4) OVER (PARTITION BY HSG.SNAP_ID ORDER BY HSG.BYTES DESC
      ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) / 1024 / 1024 SIZE_4_MB,
    NTH_VALUE(HSG.NAME, 5) OVER (PARTITION BY HSG.SNAP_ID ORDER BY HSG.BYTES DESC
      ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) COMPONENT_5,
    NTH_VALUE(HSG.BYTES, 5) OVER (PARTITION BY HSG.SNAP_ID ORDER BY HSG.BYTES DESC
      ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) / 1024 / 1024 SIZE_5_MB
  FROM
    BASIS_INFO BI,
    DBA_HIST_SGASTAT HSG, 
    DBA_HIST_SNAPSHOT HSS
  WHERE
    BI.DBID = HSG.DBID AND
    BI.DBID = HSS.DBID AND
    BI.INSTANCE_NUMBER = HSG.INSTANCE_NUMBER AND
    BI.INSTANCE_NUMBER = HSS.INSTANCE_NUMBER AND
    HSG.SNAP_ID = HSS.SNAP_ID AND
    HSG.POOL = 'shared pool' AND
    HSG.NAME LIKE BI.COMPONENT
)
ORDER BY
  SNAP_ID DESC
));
