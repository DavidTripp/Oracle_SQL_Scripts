SELECT
NULL BEGIN_TIME, NULL CR_LATENCY, NULL CR_BUILD, 
NULL CR_FLUSH, NULL CR_SEND, NULL CR_LMS,
NULL CUR_LATENCY, NULL CUR_PIN, NULL CUR_FLUSH,
NULL CUR_SEND, NULL CUR_LMS FROM DUAL WHERE 1=0 UNION ALL
(
SELECT
NULL BEGIN_TIME, NULL CR_LATENCY, NULL CR_BUILD, 
NULL CR_FLUSH, NULL CR_SEND, NULL CR_LMS,
NULL CUR_LATENCY, NULL CUR_PIN, NULL CUR_FLUSH,
NULL CUR_SEND, NULL CUR_LMS FROM DUAL WHERE 1=0
)
UNION ALL
(SELECT * FROM (
WITH BASIS_INFO AS
( SELECT 
    DECODE(DBID, -1, OWN_DBID, DBID) DBID,
    DECODE(INSTANCE_NUMBER, -1, USERENV('INSTANCE'), INSTANCE_NUMBER) INSTANCE_NUMBER,
    BEGIN_DATE,
    END_DATE,
    TO_TIMESTAMP(TO_CHAR(BEGIN_DATE, 'dd.mm.yyyy hh24:mi:ss'), 
      'dd.mm.yyyy hh24:mi:ss') BEGIN_TIME,
    TO_TIMESTAMP(TO_CHAR(END_DATE, 'dd.mm.yyyy hh24:mi:ss'), 
      'dd.mm.yyyy hh24:mi:ss') END_TIME,
    AGGREGATE_BY,
    SORT_ORDER,
    EXCLUDE_WEEKENDS
  FROM
  ( SELECT
      -1 DBID,
      -2 INSTANCE_NUMBER,        /* -1 for current instance, -2 for all instances */
      TO_DATE('27.01.2016 12:57:00', 'dd.mm.yyyy hh24:mi:ss') BEGIN_DATE,
      TO_DATE('31.12.9999 00:05:00', 'dd.mm.yyyy hh24:mi:ss') END_DATE,
      'DAY_INST' AGGREGATE_BY,  /* SNAPSHOT, DAY, HOUR_OF_DAY, INSTANCE, SS_INST, DAY_INST, HOD_INST */
      'ASC' SORT_ORDER,     /* ASC, DESC */
      ' ' EXCLUDE_WEEKENDS
    FROM
      DUAL
  ),
  ( SELECT DBID OWN_DBID FROM V$DATABASE )
),
SNAPSHOTS AS
( SELECT /*+ MATERIALIZE */ 
    DBID,
    INSTANCE_NUMBER,
    SNAP_ID,
    PREV_SNAP_ID,
    MIN_SNAP_ID,
    BEGIN_INTERVAL_TIME,
    END_INTERVAL_TIME,
    INTERVAL_SECONDS,
    SUM(INTERVAL_SECONDS) OVER () TOTAL_SECONDS,
    RESTART
  FROM
  ( SELECT
      HSS2.DBID,
      HSS2.INSTANCE_NUMBER,
      HSS2.SNAP_ID,
      HSS1.SNAP_ID PREV_SNAP_ID,
      MIN(HSS2.SNAP_ID) OVER (PARTITION BY HSS2.INSTANCE_NUMBER) MIN_SNAP_ID,
      HSS2.BEGIN_INTERVAL_TIME,
      HSS2.END_INTERVAL_TIME,
      TO_CHAR(HSS2.END_INTERVAL_TIME, 'SSSSS') -
        TO_CHAR(HSS2.BEGIN_INTERVAL_TIME, 'SSSSS') +
        86400 * (TO_CHAR(HSS2.END_INTERVAL_TIME, 'J') - 
                 TO_CHAR(HSS2.BEGIN_INTERVAL_TIME, 'J'))
        INTERVAL_SECONDS,
      DECODE(HSS2.STARTUP_TIME, HSS1.STARTUP_TIME, 'NO', 'YES') RESTART
    FROM 
      BASIS_INFO BI,
      DBA_HIST_SNAPSHOT HSS1, 
      DBA_HIST_SNAPSHOT HSS2
    WHERE
      HSS2.DBID = BI.DBID AND
      HSS1.DBID (+) = HSS2.DBID AND
      ( BI.INSTANCE_NUMBER = -2 OR 
        HSS2.INSTANCE_NUMBER = BI.INSTANCE_NUMBER ) AND
      HSS1.INSTANCE_NUMBER (+) = HSS2.INSTANCE_NUMBER AND
      HSS2.END_INTERVAL_TIME BETWEEN BI.BEGIN_TIME AND BI.END_TIME AND
      HSS1.SNAP_ID (+) = HSS2.SNAP_ID - 1
    ORDER BY
      HSS2.SNAP_ID
  )
),
BLKTIME_PER_INTERVAL AS
( SELECT /*+ MATERIALIZE */
    SNAP_ID,
    MIN(BEGIN_INTERVAL_TIME) OVER (PARTITION BY SNAP_ID) BEGIN_INTERVAL_TIME,
    PREV_SNAP_ID,
    INSTANCE_NUMBER,
    SECONDS,
    CR_BLK_RECEIVE_TIME,
    CR_BLK_RECEIVED,
    CR_BLK_BUILD_TIME,
    CR_BLK_FLUSH_TIME,
    CR_BLK_SEND_TIME,
    CR_BLK_SERVED,
	CUR_BLK_RECEIVE_TIME,
    CUR_BLK_RECEIVED,
    CUR_BLK_PIN_TIME,
    CUR_BLK_FLUSH_TIME,
    CUR_BLK_SEND_TIME,
    CUR_BLK_SERVED	
  FROM
  ( SELECT
      SS.INSTANCE_NUMBER,
      SS.SNAP_ID,
      SS.BEGIN_INTERVAL_TIME,
      SS.INTERVAL_SECONDS SECONDS,
      DECODE(SS.RESTART, 'YES', HSY1.VALUE, HSY1.VALUE - 
        LAG(HSY1.VALUE, 1) OVER (PARTITION BY SS.INSTANCE_NUMBER ORDER BY SS.SNAP_ID)) CR_BLK_RECEIVE_TIME,
      DECODE(SS.RESTART, 'YES', HSY2.VALUE, HSY2.VALUE - 
        LAG(HSY2.VALUE, 1) OVER (PARTITION BY SS.INSTANCE_NUMBER ORDER BY SS.SNAP_ID)) CR_BLK_RECEIVED,
      DECODE(SS.RESTART, 'YES', HSY3.VALUE, HSY3.VALUE - 
        LAG(HSY3.VALUE, 1) OVER (PARTITION BY SS.INSTANCE_NUMBER ORDER BY SS.SNAP_ID)) CR_BLK_BUILD_TIME,
      DECODE(SS.RESTART, 'YES', HSY4.VALUE, HSY4.VALUE - 
        LAG(HSY4.VALUE, 1) OVER (PARTITION BY SS.INSTANCE_NUMBER ORDER BY SS.SNAP_ID)) CR_BLK_FLUSH_TIME,
      DECODE(SS.RESTART, 'YES', HSY5.VALUE, HSY5.VALUE - 
        LAG(HSY5.VALUE, 1) OVER (PARTITION BY SS.INSTANCE_NUMBER ORDER BY SS.SNAP_ID)) CR_BLK_SEND_TIME,
      DECODE(SS.RESTART, 'YES', HSY6.VALUE, HSY6.VALUE - 
        LAG(HSY6.VALUE, 1) OVER (PARTITION BY SS.INSTANCE_NUMBER ORDER BY SS.SNAP_ID)) CR_BLK_SERVED,
	  DECODE(SS.RESTART, 'YES', HSY7.VALUE, HSY7.VALUE - 
        LAG(HSY7.VALUE, 1) OVER (PARTITION BY SS.INSTANCE_NUMBER ORDER BY SS.SNAP_ID)) CUR_BLK_RECEIVE_TIME,
      DECODE(SS.RESTART, 'YES', HSY8.VALUE, HSY8.VALUE - 
        LAG(HSY8.VALUE, 1) OVER (PARTITION BY SS.INSTANCE_NUMBER ORDER BY SS.SNAP_ID)) CUR_BLK_RECEIVED,
      DECODE(SS.RESTART, 'YES', HSY9.VALUE, HSY9.VALUE - 
        LAG(HSY9.VALUE, 1) OVER (PARTITION BY SS.INSTANCE_NUMBER ORDER BY SS.SNAP_ID)) CUR_BLK_PIN_TIME,
      DECODE(SS.RESTART, 'YES', HSY10.VALUE, HSY10.VALUE - 
        LAG(HSY10.VALUE, 1) OVER (PARTITION BY SS.INSTANCE_NUMBER ORDER BY SS.SNAP_ID)) CUR_BLK_FLUSH_TIME,
      DECODE(SS.RESTART, 'YES', HSY11.VALUE, HSY11.VALUE - 
        LAG(HSY11.VALUE, 1) OVER (PARTITION BY SS.INSTANCE_NUMBER ORDER BY SS.SNAP_ID)) CUR_BLK_SEND_TIME,
      DECODE(SS.RESTART, 'YES', HSY12.VALUE, HSY12.VALUE - 
        LAG(HSY12.VALUE, 1) OVER (PARTITION BY SS.INSTANCE_NUMBER ORDER BY SS.SNAP_ID)) CUR_BLK_SERVED,
      SS.PREV_SNAP_ID,
      SS.MIN_SNAP_ID
    FROM
      SNAPSHOTS SS,
      DBA_HIST_SYSSTAT HSY1, 
      DBA_HIST_SYSSTAT HSY2, 
      DBA_HIST_SYSSTAT HSY3,
      DBA_HIST_SYSSTAT HSY4,
      DBA_HIST_SYSSTAT HSY5,
      DBA_HIST_SYSSTAT HSY6,
	  DBA_HIST_SYSSTAT HSY7, 
      DBA_HIST_SYSSTAT HSY8, 
      DBA_HIST_SYSSTAT HSY9,
      DBA_HIST_SYSSTAT HSY10,
      DBA_HIST_SYSSTAT HSY11,
      DBA_HIST_SYSSTAT HSY12
    WHERE
      HSY1.DBID = SS.DBID AND
      HSY2.DBID = SS.DBID AND
      HSY3.DBID = SS.DBID AND
      HSY4.DBID = SS.DBID AND
      HSY5.DBID = SS.DBID AND
      HSY6.DBID = SS.DBID AND
	  HSY7.DBID = SS.DBID AND
      HSY8.DBID = SS.DBID AND
      HSY9.DBID = SS.DBID AND
      HSY10.DBID = SS.DBID AND
      HSY11.DBID = SS.DBID AND
      HSY12.DBID = SS.DBID AND
      HSY1.INSTANCE_NUMBER = SS.INSTANCE_NUMBER AND
      HSY2.INSTANCE_NUMBER = SS.INSTANCE_NUMBER AND
      HSY3.INSTANCE_NUMBER = SS.INSTANCE_NUMBER AND
      HSY4.INSTANCE_NUMBER = SS.INSTANCE_NUMBER AND
      HSY5.INSTANCE_NUMBER = SS.INSTANCE_NUMBER AND
      HSY6.INSTANCE_NUMBER = SS.INSTANCE_NUMBER AND
	  HSY7.INSTANCE_NUMBER = SS.INSTANCE_NUMBER AND
      HSY8.INSTANCE_NUMBER = SS.INSTANCE_NUMBER AND
      HSY9.INSTANCE_NUMBER = SS.INSTANCE_NUMBER AND
      HSY10.INSTANCE_NUMBER = SS.INSTANCE_NUMBER AND
      HSY11.INSTANCE_NUMBER = SS.INSTANCE_NUMBER AND
      HSY12.INSTANCE_NUMBER = SS.INSTANCE_NUMBER AND
      HSY1.SNAP_ID = SS.SNAP_ID AND
      HSY2.SNAP_ID = SS.SNAP_ID AND
      HSY3.SNAP_ID = SS.SNAP_ID AND
      HSY4.SNAP_ID = SS.SNAP_ID AND
      HSY5.SNAP_ID = SS.SNAP_ID AND
      HSY6.SNAP_ID = SS.SNAP_ID AND
	  HSY7.SNAP_ID = SS.SNAP_ID AND
      HSY8.SNAP_ID = SS.SNAP_ID AND
      HSY9.SNAP_ID = SS.SNAP_ID AND
      HSY10.SNAP_ID = SS.SNAP_ID AND
      HSY11.SNAP_ID = SS.SNAP_ID AND
      HSY12.SNAP_ID = SS.SNAP_ID AND
	  HSY1.STAT_NAME = 'gc cr block receive time' AND
      HSY2.STAT_NAME = 'gc cr blocks received' AND
      HSY3.STAT_NAME = 'gc cr block build time' AND
      HSY4.STAT_NAME = 'gc cr block flush time' AND
      HSY5.STAT_NAME = 'gc cr block send time' AND
      HSY6.STAT_NAME = 'gc cr blocks served' AND
	  HSY7.STAT_NAME = 'gc current block receive time' AND
      HSY8.STAT_NAME = 'gc current blocks received' AND
      HSY9.STAT_NAME = 'gc current block pin time' AND
      HSY10.STAT_NAME = 'gc current block flush time' AND
      HSY11.STAT_NAME = 'gc current block send time' AND
      HSY12.STAT_NAME = 'gc current blocks served' 
  )
  WHERE
    SNAP_ID != MIN_SNAP_ID
)
SELECT 
  'BEGIN TIME:' BEGIN_TIME, 
  TO_CHAR(MIN(END_INTERVAL_TIME), 'dd.mm.yyyy') CR_LATENCY, 
  TO_CHAR(MIN(END_INTERVAL_TIME), 'hh24:mi:ss') CR_BUILD, 
	NULL CR_FLUSH, NULL CR_SEND, NULL CR_LMS,
	NULL CUR_LATENCY, NULL CUR_PIN, NULL CUR_FLUSH,
	NULL CUR_SEND, NULL CUR_LMS
FROM
  SNAPSHOTS
UNION ALL
SELECT 
    'END TIME:' BEGIN_TIME, 
    TO_CHAR(MAX(END_INTERVAL_TIME), 'dd.mm.yyyy') CR_LATENCY, 
    TO_CHAR(MAX(END_INTERVAL_TIME), 'hh24:mi:ss') CR_BUILD, 
	NULL CR_FLUSH, NULL CR_SEND, NULL CR_LMS,
	NULL CUR_LATENCY, NULL CUR_PIN, NULL CUR_FLUSH,
	NULL CUR_SEND, NULL CUR_LMS
  FROM 
    SNAPSHOTS
UNION ALL
SELECT 
    'INSTANCE:' BEGIN_TIME, 
    DECODE(INSTANCE_NUMBER, -2, 'ALL', TO_CHAR(INSTANCE_NUMBER)) CR_LATENCY, 
	NULL CR_BUILD, 
	NULL CR_FLUSH, NULL CR_SEND, NULL CR_LMS,
	NULL CUR_LATENCY, NULL CUR_PIN, NULL CUR_FLUSH,
	NULL CUR_SEND, NULL CUR_LMS
  FROM 
    BASIS_INFO
UNION ALL
SELECT 
    'AGGREGATION BY:' BEGINTIME, 
    AGGREGATE_BY CR_LATENCY, 
	NULL CR_BUILD, 
	NULL CR_FLUSH, NULL CR_SEND, NULL CR_LMS,
	NULL CUR_LATENCY, NULL CUR_PIN, NULL CUR_FLUSH,
	NULL CUR_SEND, NULL CUR_LMS
  FROM 
    BASIS_INFO
UNION ALL
SELECT 
    'WEEKENDS EXCLUDED:' BEGIN_TIME, 
    DECODE(EXCLUDE_WEEKENDS, 'X', 'YES', 'NO') CR_LATENCY, 
	NULL CR_BUILD, NULL CR_FLUSH, NULL CR_SEND, NULL CR_LMS,
	NULL CUR_LATENCY, NULL CUR_PIN, NULL CUR_FLUSH,
	NULL CUR_SEND, NULL CUR_LMS
  FROM 
    BASIS_INFO
UNION ALL
SELECT 
    NULL BEGINTIME, 
    NULL CR_LATENCY, 
	NULL CR_BUILD, NULL CR_FLUSH, NULL CR_SEND, NULL CR_LMS,
	NULL CUR_LATENCY, 
	NULL CUR_PIN, NULL CUR_FLUSH, NULL CUR_SEND, NULL CUR_LMS
  FROM 
    BASIS_INFO
UNION ALL
SELECT * FROM
(
SELECT
	DECODE(INSTANCE_NUMBER, 0, 'Since DB Start ('||TO_CHAR(MIN(STARTUP_TIME),'YYYY-MM-DD HH24:MI')||')'
							 , 'Since Inst. '||INSTANCE_NUMBER||' Start ('||TO_CHAR(MIN(STARTUP_TIME),'YYYY-MM-DD HH24:MI')||')') BEGIN_TIME,
	TO_CHAR(AVG(CR_LATENCY),'990.99') CR_LATENCY,
	TO_CHAR(AVG(CR_BUILD),'990.99') CR_BUILD,
	TO_CHAR(AVG(CR_FLUSH),'990.99') CR_FLUSH,
	TO_CHAR(AVG(CR_SEND),'990.99') CR_SEND,
	TO_CHAR(AVG(CR_LMS),'990.99') CR_LMS,
	TO_CHAR(AVG(CUR_LATENCY),'990.99') CUR_LATENCY,
	TO_CHAR(AVG(CUR_PIN),'990.99') CUR_PIN,
	TO_CHAR(AVG(CUR_FLUSH),'990.99') CUR_FLUSH,
	TO_CHAR(AVG(CUR_SEND),'990.99') CUR_SEND,
	TO_CHAR(AVG(CUR_LMS),'990.99') CUR_LMS
FROM
(	SELECT
		DECODE(BI.AGGREGATE_BY,'SNAPSHOT'   , DECODE(BI.INSTANCE_NUMBER, -2, 0, GVS.INST_ID),
							   'DAY'	    , DECODE(BI.INSTANCE_NUMBER, -2, 0, GVS.INST_ID),
							   'HOUR_OF_DAY', DECODE(BI.INSTANCE_NUMBER, -2, 0, GVS.INST_ID),
							   'INSTANCE'	, GVS.INST_ID,
							   'SS_INST'	, GVS.INST_ID,
							   'DAY_INST'	, GVS.INST_ID,
							   'HOD_INST'	, GVS.INST_ID) INSTANCE_NUMBER,
		GVS.*
	FROM
	(
	SELECT 
		G1.INST_ID INST_ID,
		GVI.STARTUP_TIME,
		DECODE(G2.VALUE,0,0,G1.VALUE/G2.VALUE*10) CR_LATENCY,
		DECODE(G6.VALUE,0,0,G3.VALUE/G6.VALUE*10) CR_BUILD,
		DECODE(G6.VALUE,0,0,G4.VALUE/G6.VALUE*10) CR_FLUSH,
		DECODE(G6.VALUE,0,0,G5.VALUE/G6.VALUE*10) CR_SEND,
		DECODE(G2.VALUE,0,0,G1.VALUE/G2.VALUE*10) - 
				DECODE(G6.VALUE,0,0,(G3.VALUE+G4.VALUE+G5.VALUE)/G6.VALUE*10) CR_LMS,
		DECODE(G8.VALUE,0,0,G7.VALUE/G8.VALUE*10) CUR_LATENCY,
		DECODE(G12.VALUE,0,0,G9.VALUE/G12.VALUE*10) CUR_PIN,
		DECODE(G12.VALUE,0,0,G10.VALUE/G12.VALUE*10) CUR_FLUSH,
		DECODE(G12.VALUE,0,0,G11.VALUE/G12.VALUE*10) CUR_SEND,
		DECODE(G8.VALUE,0,0,G7.VALUE/G8.VALUE*10) - 
				DECODE(G12.VALUE,0,0,(G9.VALUE+G10.VALUE+G11.VALUE)/G12.VALUE*10) CUR_LMS
	FROM   
		GV$SYSSTAT G1, 
		GV$SYSSTAT G2,
		GV$SYSSTAT G3, 
		GV$SYSSTAT G4,
		GV$SYSSTAT G5, 
		GV$SYSSTAT G6,
		GV$SYSSTAT G7, 
		GV$SYSSTAT G8,
		GV$SYSSTAT G9, 
		GV$SYSSTAT G10,
		GV$SYSSTAT G11, 
		GV$SYSSTAT G12,
		GV$INSTANCE GVI
	WHERE
		G1.NAME = 'gc cr block receive time' AND
		G2.NAME = 'gc cr blocks received' AND
		G3.NAME = 'gc cr block build time' AND
		G4.NAME = 'gc cr block flush time' AND
		G5.NAME = 'gc cr block send time' AND
		G6.NAME = 'gc cr blocks served' AND
		G7.NAME = 'gc current block receive time' AND
		G8.NAME = 'gc current blocks received' AND
		G9.NAME = 'gc current block pin time' AND
		G10.NAME = 'gc current block flush time' AND
		G11.NAME = 'gc current block send time' AND
		G12.NAME = 'gc current blocks served' AND	
		G1.INST_ID = G2.INST_ID AND
		G1.INST_ID = G3.INST_ID AND
		G1.INST_ID = G4.INST_ID AND
		G1.INST_ID = G5.INST_ID AND
		G1.INST_ID = G6.INST_ID AND
		G1.INST_ID = G7.INST_ID AND
		G1.INST_ID = G8.INST_ID AND
		G1.INST_ID = G9.INST_ID AND
		G1.INST_ID = G10.INST_ID AND
		G1.INST_ID = G11.INST_ID AND
		G1.INST_ID = G12.INST_ID AND
		GVI.INST_ID = G1.INST_ID
	) GVS, BASIS_INFO BI
	WHERE
		GVS.INST_ID = BI.INSTANCE_NUMBER OR
		BI.INSTANCE_NUMBER = -2
)
GROUP BY
	INSTANCE_NUMBER
ORDER BY INSTANCE_NUMBER
)
UNION ALL
SELECT * FROM
(
SELECT 
	BEGIN_TIME, 
	TO_CHAR(DECODE(SUM(CR_BLK_RECEIVED),0,0,SUM(CR_BLK_RECEIVE_TIME)*10/SUM(CR_BLK_RECEIVED)),'990.99') CR_LATENCY, 
	TO_CHAR(DECODE(SUM(CR_BLK_SERVED),0,0,SUM(CR_BLK_BUILD_TIME)*10/SUM(CR_BLK_SERVED)),'990.99') CR_BUILD,
	TO_CHAR(DECODE(SUM(CR_BLK_SERVED),0,0,SUM(CR_BLK_FLUSH_TIME)*10/SUM(CR_BLK_SERVED)),'990.99') CR_FLUSH,
	TO_CHAR(DECODE(SUM(CR_BLK_SERVED),0,0,SUM(CR_BLK_SEND_TIME)*10/SUM(CR_BLK_SERVED)),'990.99') CR_SEND,
	TO_CHAR(DECODE(SUM(CR_BLK_RECEIVED),0,0,SUM(CR_BLK_RECEIVE_TIME)*10/SUM(CR_BLK_RECEIVED))-
			DECODE(SUM(CR_BLK_SERVED),0,0,SUM(CR_BLK_BUILD_TIME+CR_BLK_FLUSH_TIME+CR_BLK_SEND_TIME)*10/SUM(CR_BLK_SERVED)),'990.99') CR_LMS,
	TO_CHAR(DECODE(SUM(CUR_BLK_RECEIVED),0,0,SUM(CUR_BLK_RECEIVE_TIME)*10/SUM(CUR_BLK_RECEIVED)),'990.99') CUR_LATENCY, 
	TO_CHAR(DECODE(SUM(CUR_BLK_SERVED),0,0,SUM(CUR_BLK_PIN_TIME)*10/SUM(CUR_BLK_SERVED)),'990.99') CUR_PIN,
	TO_CHAR(DECODE(SUM(CUR_BLK_SERVED),0,0,SUM(CUR_BLK_FLUSH_TIME)*10/SUM(CUR_BLK_SERVED)),'990.99') CUR_FLUSH,
	TO_CHAR(DECODE(SUM(CUR_BLK_SERVED),0,0,SUM(CUR_BLK_SEND_TIME)*10/SUM(CUR_BLK_SERVED)),'990.99') CUR_SEND,
	TO_CHAR(DECODE(SUM(CUR_BLK_RECEIVED),0,0,SUM(CUR_BLK_RECEIVE_TIME)*10/SUM(CUR_BLK_RECEIVED))-
			DECODE(SUM(CUR_BLK_SERVED),0,0,SUM(CUR_BLK_PIN_TIME+CUR_BLK_FLUSH_TIME+CUR_BLK_SEND_TIME)*10/SUM(CUR_BLK_SERVED)),'990.99') CUR_LMS
	FROM
	( SELECT
        DECODE(BI.AGGREGATE_BY,
          'SNAPSHOT', TO_CHAR(K.BEGIN_INTERVAL_TIME, 'YYYY-MM-DD HH24:MI:SS'),
          'DAY', TO_CHAR(K.BEGIN_INTERVAL_TIME, 'YYYY-MM-DD (DY)'),
          'HOUR_OF_DAY', TO_CHAR(K.BEGIN_INTERVAL_TIME, 'HH24') || ':00',
          'INSTANCE', 'Instance: ' || TO_CHAR(K.INSTANCE_NUMBER),
          'SS_INST', TO_CHAR(K.BEGIN_INTERVAL_TIME, 'YYYY-MM-DD HH24:MI:SS') ||
             ' (Instance: ' || TO_CHAR(K.INSTANCE_NUMBER) || ')',
          'DAY_INST', TO_CHAR(K.BEGIN_INTERVAL_TIME, 'YYYY-MM-DD (DY)') ||
             ' (Instance: ' || TO_CHAR(K.INSTANCE_NUMBER) || ')',
          'HOD_INST', TO_CHAR(K.BEGIN_INTERVAL_TIME, 'HH24') || ':00' ||
             ' (Instance: ' || TO_CHAR(K.INSTANCE_NUMBER) || ')') BEGIN_TIME,
        K.*,
        BI.SORT_ORDER,
        BI.AGGREGATE_BY
      FROM
        BASIS_INFO BI,
        BLKTIME_PER_INTERVAL K
      WHERE
        K.PREV_SNAP_ID IS NOT NULL AND
        ( BI.EXCLUDE_WEEKENDS = ' ' OR 
          TO_CHAR(K.BEGIN_INTERVAL_TIME, 'D') NOT IN (7, 1) )
    )
	GROUP BY
      BEGIN_TIME,
      SORT_ORDER,
      AGGREGATE_BY
    ORDER BY
      DECODE(SORT_ORDER, 
        'ASC', MIN(BEGIN_TIME), SYSDATE),
      DECODE(SORT_ORDER, 
        'DESC', MIN(BEGIN_TIME), SYSDATE) DESC
)		
))