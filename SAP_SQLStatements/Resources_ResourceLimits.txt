SELECT NULL INST, NULL RESOURCE_NAME, NULL AVAILABLE, NULL CURRENT_USED, 
  NULL "CURRENT_USED_%", NULL MAX_USED, NULL "MAX_USED_%" FROM DUAL WHERE 1 = 0
UNION ALL (
SELECT NULL INST, NULL RESOURCE_NAME, NULL AVAILABLE, NULL CURRENT_USED, 
  NULL "CURRENT_USED_%", NULL MAX_USED, NULL "MAX_USED_%" FROM DUAL WHERE 1 = 0
) UNION ALL ( SELECT * FROM (
WITH BASIS_INFO AS
( SELECT
    DECODE(INSTANCE_NUMBER, -1, USERENV('INSTANCE'), INSTANCE_NUMBER) INSTANCE_NUMBER,
    RESOURCE_NAME,
    ONLY_STANDARD_RESOURCES
  FROM
  ( SELECT
      -1 INSTANCE_NUMBER,                /* -1 for current instance, -2 for all instances */
      '%' RESOURCE_NAME,
      'X' ONLY_STANDARD_RESOURCES
    FROM
      DUAL
  )
) 
SELECT
  TO_CHAR(RL.INST_ID, 990) INST,
  RL.RESOURCE_NAME,
  TO_CHAR(RL.INITIAL_ALLOCATION, 99999990) AVAILABLE,
  TO_CHAR(RL.CURRENT_UTILIZATION, 99999999990) CURRENT_USED,
  TO_CHAR(DECODE(RL.INITIAL_ALLOCATION, 0, 0, RL.CURRENT_UTILIZATION / RL.INITIAL_ALLOCATION * 100), 9999999990.99) "CURRENT_USED_PCT",
  TO_CHAR(RL.MAX_UTILIZATION, 9999990) MAX_USED,
  TO_CHAR(DECODE(RL.INITIAL_ALLOCATION, 0, 0, RL.MAX_UTILIZATION / RL.INITIAL_ALLOCATION * 100), 999990.99) "MAX_USED_PCT"
FROM
  BASIS_INFO BI,
  GV$RESOURCE_LIMIT RL
WHERE
  ( BI.INSTANCE_NUMBER = -2 OR BI.INSTANCE_NUMBER = RL.INST_ID ) AND
  ( BI.ONLY_STANDARD_RESOURCES = ' ' OR
    RL.RESOURCE_NAME IN ( 'processes', 'sessions', 'enqueue_locks', 'enqueue_resources', 'dml_locks',
      'transactions', 'parallel_max_servers' )
  ) AND
  RL.RESOURCE_NAME LIKE BI.RESOURCE_NAME
ORDER BY
  INST,
  RESOURCE_NAME
));
