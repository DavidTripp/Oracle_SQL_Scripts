SELECT NULL BEGIN_TIME, NULL TOTAL_REQS, NULL "APP_REQ_%",
  NULL TOTAL_GB, NULL "APP_GB_%", NULL DISK_READS, NULL "CACHE_%",
  NULL "DIRECT_%", NULL "PRFTCH_%", NULL "LOB_%", NULL "TEMP_%", 
  NULL "WARMUP_%", NULL "RETRY_%"
  FROM DUAL WHERE 1 = 0
UNION ALL (
SELECT NULL BEGIN_TIME, NULL TOTAL_REQS, NULL "APP_REQ_%",
  NULL TOTAL_GB, NULL "APP_GB_%", NULL DISK_READS, NULL "CACHE_%",
  NULL "DIRECT_%", NULL "PRFTCH_%", NULL "LOB_%", NULL "TEMP_%", 
  NULL "WARMUP_%", NULL "RETRY_%"
  FROM DUAL WHERE 1 = 0
) UNION ALL ( SELECT * FROM (
WITH BASIS_INFO AS
( SELECT /*+ MATERIALIZE */
    DECODE(DBID, -1, OWN_DBID, DBID) DBID,
    DECODE(INSTANCE_NUMBER, -1, USERENV('INSTANCE'), 
      INSTANCE_NUMBER) INSTANCE_NUMBER,
    BEGIN_DATE,
    END_DATE,
    TO_TIMESTAMP(TO_CHAR(BEGIN_DATE, 'dd.mm.yyyy hh24:mi:ss'), 
      'dd.mm.yyyy hh24:mi:ss') BEGIN_TIME,
    TO_TIMESTAMP(TO_CHAR(END_DATE, 'dd.mm.yyyy hh24:mi:ss'), 
      'dd.mm.yyyy hh24:mi:ss') END_TIME,
    DECODE(AGGREGATE_BY,
      'SNAPSHOT',    'YYYY-MM-DD HH24:MI:SS',
      'DAY',         'YYYY-MM-DD (DY)',
      'HOUR_OF_DAY', 'HH24',
      AGGREGATE_BY ) AGGREGATE_BY
  FROM
  ( SELECT
      -1 DBID,
      -1 INSTANCE_NUMBER,
      TO_DATE('01.01.1000 09:07:00', 'dd.mm.yyyy hh24:mi:ss') BEGIN_DATE,
      TO_DATE('31.12.9999 18:00:00', 'dd.mm.yyyy hh24:mi:ss') END_DATE,
      'DAY' AGGREGATE_BY    /* SNAPSHOT, DAY, HOUR_OF_DAY or Oracle time pattern */
    FROM
      DUAL
  ),
  ( SELECT DBID OWN_DBID FROM V$DATABASE )
),
SNAPSHOTS AS
( SELECT /*+ MATERIALIZE */ 
    HSS2.DBID,
    HSS2.INSTANCE_NUMBER,
    HSS2.SNAP_ID,
    HSS1.SNAP_ID PREV_SNAP_ID,
    HSS2.BEGIN_INTERVAL_TIME,
    HSS2.END_INTERVAL_TIME,
    TO_CHAR(HSS2.END_INTERVAL_TIME, 'SSSSS') -
      TO_CHAR(HSS2.BEGIN_INTERVAL_TIME, 'SSSSS') +
      86400 * (TO_CHAR(HSS2.END_INTERVAL_TIME, 'J') - 
               TO_CHAR(HSS2.BEGIN_INTERVAL_TIME, 'J'))
      INTERVAL_SECONDS,
    DECODE(HSS2.STARTUP_TIME, HSS1.STARTUP_TIME, 'NO', 'YES') RESTART
  FROM 
    BASIS_INFO BI,
    DBA_HIST_SNAPSHOT HSS1, 
    DBA_HIST_SNAPSHOT HSS2
  WHERE
    HSS2.DBID = BI.DBID AND
    HSS1.DBID (+) = HSS2.DBID AND
    HSS2.INSTANCE_NUMBER = BI.INSTANCE_NUMBER AND
    HSS1.INSTANCE_NUMBER (+) = HSS2.INSTANCE_NUMBER AND
    HSS2.END_INTERVAL_TIME BETWEEN BI.BEGIN_TIME AND BI.END_TIME AND
    HSS1.SNAP_ID (+) = HSS2.SNAP_ID - 1
  ORDER BY
    HSS2.SNAP_ID
)
SELECT
  BEGIN_TIME,
  TOTAL_REQS,
  "APP_REQ_%",
  TOTAL_GB,
  "APP_GB_%",
  DISK_READS,
  "CACHE_%",
  "DIRECT_%",
  "PRFTCH_%",
  "LOB_%",
  "TEMP_%",
  "WARMUP_%",
  "RETRY_%"
FROM
( SELECT
    BEGIN_TIME, 
    TO_CHAR(TOTAL_REQUESTS, 999999990) TOTAL_REQS,
    TO_CHAR(DECODE(TOTAL_REQUESTS, 0, 0, 
      APP_REQUESTS / TOTAL_REQUESTS * 100), 99990.99) "APP_REQ_%",
    TO_CHAR(TOTAL_BYTES / 1024 / 1024 / 1024, 999990.99) TOTAL_GB,
    TO_CHAR(DECODE(TOTAL_BYTES, 0, 0, 
      APP_BYTES / TOTAL_BYTES * 100), 9990.99) "APP_GB_%",
    TO_CHAR(DISK_READS, 99999999990) DISK_READS,
    TO_CHAR(DECODE(DISK_READS, 0, 0,
      CACHE_READS / DISK_READS * 100), 990.99) "CACHE_%",
    TO_CHAR(DECODE(DISK_READS, 0, 0,
      DIRECT_READS / DISK_READS * 100), 9990.99) "DIRECT_%",
    TO_CHAR(DECODE(DISK_READS, 0, 0,
      PREFETCH_READS / DISK_READS * 100), 9990.99) "PRFTCH_%",
    TO_CHAR(DECODE(DISK_READS, 0, 0,
      WARMUP_READS / DISK_READS * 100), 9990.99) "WARMUP_%",
    TO_CHAR(DECODE(DISK_READS, 0, 0,
      CORR_RETRY_READS / DISK_READS * 100), 990.99) "RETRY_%",
    TO_CHAR(DECODE(DISK_READS, 0, 0,
      DIRECT_LOB_READS / DISK_READS * 100), 990.99) "LOB_%",
    TO_CHAR(DECODE(DISK_READS, 0, 0,
      DIRECT_TEMP_READS / DISK_READS * 100), 990.99) "TEMP_%"
  FROM
  ( SELECT
      BEGIN_TIME,
      SUM(SECONDS) SECONDS,
      SUM(TOTAL_BYTES) TOTAL_BYTES,
      SUM(APP_BYTES) APP_BYTES,
      SUM(CACHE_READS) CACHE_READS,
      SUM(DIRECT_READS) DIRECT_READS,
      SUM(PREFETCH_READS) PREFETCH_READS,
      SUM(WARMUP_READS) WARMUP_READS,
      SUM(CORR_RETRY_READS) CORR_RETRY_READS,
      SUM(DIRECT_LOB_READS) DIRECT_LOB_READS,
      SUM(DIRECT_TEMP_READS) DIRECT_TEMP_READS,
      SUM(TOTAL_REQUESTS) TOTAL_REQUESTS,
      SUM(APP_REQUESTS) APP_REQUESTS,
      SUM(DISK_READS) DISK_READS
    FROM
    ( SELECT
        TO_CHAR(SS.BEGIN_INTERVAL_TIME, AGGREGATE_BY) BEGIN_TIME,
        SS.INTERVAL_SECONDS SECONDS,
        DECODE(SS.RESTART, 'YES', HSY1.VALUE, HSY1.VALUE - 
          LAG(HSY1.VALUE, 1) OVER (ORDER BY SS.SNAP_ID)) TOTAL_BYTES,
        DECODE(SS.RESTART, 'YES', HSY2.VALUE, HSY2.VALUE - 
          LAG(HSY2.VALUE, 1) OVER (ORDER BY SS.SNAP_ID)) APP_BYTES,
        DECODE(SS.RESTART, 'YES', HSY3.VALUE, HSY3.VALUE - 
          LAG(HSY3.VALUE, 1) OVER (ORDER BY SS.SNAP_ID)) CACHE_READS,
        DECODE(SS.RESTART, 'YES', HSY4.VALUE, HSY4.VALUE - 
          LAG(HSY4.VALUE, 1) OVER (ORDER BY SS.SNAP_ID)) DIRECT_READS,
        DECODE(SS.RESTART, 'YES', HSY5.VALUE, HSY5.VALUE - 
          LAG(HSY5.VALUE, 1) OVER (ORDER BY SS.SNAP_ID)) PREFETCH_READS,
        DECODE(SS.RESTART, 'YES', HSY6.VALUE, HSY6.VALUE - 
          LAG(HSY6.VALUE, 1) OVER (ORDER BY SS.SNAP_ID)) WARMUP_READS,
        DECODE(SS.RESTART, 'YES', HSY7.VALUE, HSY7.VALUE - 
          LAG(HSY7.VALUE, 1) OVER (ORDER BY SS.SNAP_ID)) CORR_RETRY_READS,
        DECODE(SS.RESTART, 'YES', HSY8.VALUE, HSY8.VALUE - 
          LAG(HSY8.VALUE, 1) OVER (ORDER BY SS.SNAP_ID)) DIRECT_LOB_READS,
        DECODE(SS.RESTART, 'YES', HSY9.VALUE, HSY9.VALUE - 
          LAG(HSY9.VALUE, 1) OVER (ORDER BY SS.SNAP_ID)) DIRECT_TEMP_READS,
        DECODE(SS.RESTART, 'YES', HSY10.VALUE, HSY10.VALUE - 
          LAG(HSY10.VALUE, 1) OVER (ORDER BY SS.SNAP_ID)) TOTAL_REQUESTS,
        DECODE(SS.RESTART, 'YES', HSY11.VALUE, HSY11.VALUE - 
          LAG(HSY11.VALUE, 1) OVER (ORDER BY SS.SNAP_ID)) APP_REQUESTS,
        DECODE(SS.RESTART, 'YES', HSY12.VALUE, HSY12.VALUE - 
          LAG(HSY12.VALUE, 1) OVER (ORDER BY SS.SNAP_ID)) DISK_READS
      FROM 
        BASIS_INFO BI,
        SNAPSHOTS SS,
        DBA_HIST_SYSSTAT HSY1, 
        DBA_HIST_SYSSTAT HSY2, 
        DBA_HIST_SYSSTAT HSY3,
        DBA_HIST_SYSSTAT HSY4,
        DBA_HIST_SYSSTAT HSY5,
        DBA_HIST_SYSSTAT HSY6,
        DBA_HIST_SYSSTAT HSY7,
        DBA_HIST_SYSSTAT HSY8,
        DBA_HIST_SYSSTAT HSY9,
        DBA_HIST_SYSSTAT HSY10,
        DBA_HIST_SYSSTAT HSY11,
        DBA_HIST_SYSSTAT HSY12
      WHERE
        HSY1.DBID = SS.DBID AND
        HSY2.DBID = SS.DBID AND
        HSY3.DBID = SS.DBID AND
        HSY4.DBID = SS.DBID AND
        HSY5.DBID = SS.DBID AND
        HSY6.DBID = SS.DBID AND
        HSY7.DBID = SS.DBID AND
        HSY8.DBID = SS.DBID AND
        HSY9.DBID = SS.DBID AND
        HSY10.DBID = SS.DBID AND
        HSY11.DBID = SS.DBID AND
        HSY12.DBID = SS.DBID AND
        HSY1.INSTANCE_NUMBER = SS.INSTANCE_NUMBER AND
        HSY2.INSTANCE_NUMBER = SS.INSTANCE_NUMBER AND
        HSY3.INSTANCE_NUMBER = SS.INSTANCE_NUMBER AND
        HSY4.INSTANCE_NUMBER = SS.INSTANCE_NUMBER AND
        HSY5.INSTANCE_NUMBER = SS.INSTANCE_NUMBER AND
        HSY6.INSTANCE_NUMBER = SS.INSTANCE_NUMBER AND
        HSY7.INSTANCE_NUMBER = SS.INSTANCE_NUMBER AND
        HSY8.INSTANCE_NUMBER = SS.INSTANCE_NUMBER AND
        HSY9.INSTANCE_NUMBER = SS.INSTANCE_NUMBER AND
        HSY10.INSTANCE_NUMBER = SS.INSTANCE_NUMBER AND
        HSY11.INSTANCE_NUMBER = SS.INSTANCE_NUMBER AND
        HSY12.INSTANCE_NUMBER = SS.INSTANCE_NUMBER AND
        HSY1.SNAP_ID = SS.SNAP_ID AND
        HSY2.SNAP_ID = SS.SNAP_ID AND
        HSY3.SNAP_ID = SS.SNAP_ID AND
        HSY4.SNAP_ID = SS.SNAP_ID AND
        HSY5.SNAP_ID = SS.SNAP_ID AND
        HSY6.SNAP_ID = SS.SNAP_ID AND
        HSY7.SNAP_ID = SS.SNAP_ID AND
        HSY8.SNAP_ID = SS.SNAP_ID AND
        HSY9.SNAP_ID = SS.SNAP_ID AND
        HSY10.SNAP_ID = SS.SNAP_ID AND
        HSY11.SNAP_ID = SS.SNAP_ID AND
        HSY12.SNAP_ID = SS.SNAP_ID AND
        HSY1.STAT_NAME = 'physical read total bytes' AND
        HSY2.STAT_NAME = 'physical read bytes' AND
        HSY3.STAT_NAME = 'physical reads cache' AND
        HSY4.STAT_NAME = 'physical reads direct' AND
        HSY5.STAT_NAME = 'physical reads cache prefetch' AND
        HSY6.STAT_NAME = 'physical reads prefetch warmup' AND
        HSY7.STAT_NAME = 'physical reads retry corrupt' AND
        HSY8.STAT_NAME = 'physical reads direct (lob)' AND
        HSY9.STAT_NAME = 'physical reads direct temporary tablespace' AND
        HSY10.STAT_NAME = 'physical read total IO requests' AND
        HSY11.STAT_NAME = 'physical read IO requests' AND
        HSY12.STAT_NAME = 'physical reads'
    )
    GROUP BY
      BEGIN_TIME
  )
)
ORDER BY
  BEGIN_TIME DESC
));
