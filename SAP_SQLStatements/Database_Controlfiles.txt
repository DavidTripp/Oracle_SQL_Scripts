SELECT NULL SECTION#, NULL SECTION_NAME, NULL RECORD_SIZE, NULL RECORDS_TOTAL,
  NULL TOTAL_SIZE_KB, NULL SIZE_PCT FROM DUAL WHERE 1 = 0
UNION ALL (
SELECT NULL SECTION#, NULL SECTION_NAME, NULL RECORD_SIZE, NULL RECORDS_TOTAL,
  NULL TOTAL_SIZE_KB, NULL SIZE_PCT FROM DUAL WHERE 1 = 0
) UNION ALL ( SELECT * FROM (
WITH BASIS_INFO AS
( SELECT /*+ MATERIALIZE */
    DECODE(INSTANCE_NUMBER, -1, USERENV('INSTANCE'), INSTANCE_NUMBER) INSTANCE_NUMBER,
    SECTION_NAME,
    ORDER_BY
  FROM
  ( SELECT
      -1 INSTANCE_NUMBER,
      '%' SECTION_NAME,
      'SECTION' ORDER_BY     /* SECTION, SIZE */
    FROM
      DUAL
   )
)
SELECT
  TO_CHAR(SECTION#, 9999990) SECTION#,
  SECTION_NAME,
  TO_CHAR(RECORD_SIZE, 9999999990) RECORD_SIZE,
  TO_CHAR(RECORDS_TOTAL, 999999999990) RECORDS_TOTAL,
  TO_CHAR(TOTAL_SIZE_KB, 999999999990) TOTAL_SIZE_KB,
  TO_CHAR(RATIO_TO_REPORT (TOTAL_SIZE_KB) OVER () * 100, 9990.99) SIZE_PCT
FROM
( SELECT
    ROWNUM-1 SECTION#,
    C.TYPE SECTION_NAME,
    C.RECORD_SIZE,
    C.RECORDS_TOTAL,
    ROUND(C.RECORD_SIZE * C.RECORDS_TOTAL / 1024) TOTAL_SIZE_KB,
    BI.SECTION_NAME SECTION_NAME_PATTERN,
    BI.ORDER_BY
  FROM 
    BASIS_INFO BI,
    GV$CONTROLFILE_RECORD_SECTION C
  WHERE
    BI.INSTANCE_NUMBER = C.INST_ID 
)
WHERE
  SECTION_NAME LIKE SECTION_NAME_PATTERN
ORDER BY
  DECODE(ORDER_BY, 'SECTION', SECTION#, 1),
  DECODE(ORDER_BY, 'SIZE', TOTAL_SIZE_KB) DESC
));
