SELECT /* 11g: Display of deadlocked sessions based on V$WAIT_CHAINS */ 
  NULL SID, NULL INST, NULL DEADLOCK, NULL PROCESS, NULL MACHINE,
  NULL ACTION, NULL COMMAND_TYPE, NULL SQL_ID, 
  NULL PREV_SQL_ID, NULL ENQ_TYPE, NULL ENQ_REQUEST, NULL OBJECT_NAME,
  NULL ROW_WAIT_FILE#, NULL ROW_WAIT_BLOCK#, NULL ROW_WAIT_ROW#,
  NULL SECONDS_IN_WAIT, NULL ROW_EXTRACTION_COMMAND
FROM DUAL WHERE 1 = 0
UNION ALL ( 
SELECT NULL SID, NULL INST, NULL DEADLOCK, NULL PROCESS, NULL MACHINE,
  NULL ACTION, NULL COMMAND_TYPE, NULL SQL_ID, 
  NULL PREV_SQL_ID, NULL ENQ_TYPE, NULL ENQ_REQUEST, NULL OBJECT_NAME,
  NULL ROW_WAIT_FILE#, NULL ROW_WAIT_BLOCK#, NULL ROW_WAIT_ROW#,
  NULL SECONDS_IN_WAIT, NULL ROW_EXTRACTION_COMMAND
FROM DUAL WHERE 1 = 0
) UNION ALL ( SELECT * FROM (
WITH ALL_SESSIONS AS 
( SELECT /*+ MATERIALIZE */ 
    S.INST_ID,
    S.SID, 
    S.PROCESS,
    S.MACHINE,
    S.COMMAND,
    S.BLOCKING_SESSION,
    S.BLOCKING_INSTANCE,
    S.BLOCKING_SESSION_STATUS,
    DECODE(S.STATE, 'WAITING', S.EVENT, 'CPU') ACTION,
    S.P1,
    S.P2,
    S.P3,
    S.SECONDS_IN_WAIT, 
    S.SQL_ID, 
    S.PREV_SQL_ID,
    S.ROW_WAIT_OBJ#, 
    S.ROW_WAIT_FILE#, 
    S.ROW_WAIT_BLOCK#, 
    S.ROW_WAIT_ROW#,
    DECODE(NVL(WC.CHAIN_IS_CYCLE, ' '), 'TRUE', 'X', ' ') DEADLOCK,
    AA.NAME COMMAND_TYPE
  FROM 
    GV$SESSION S,
    V$WAIT_CHAINS WC,
    AUDIT_ACTIONS AA
  WHERE
    S.INST_ID = WC.INSTANCE (+) AND
    S.SID = WC.SID (+) AND
    S.SERIAL# = WC.SESS_SERIAL# (+) AND
    S.COMMAND = AA.ACTION (+)
),
BLOCKED_SESSIONS AS
( SELECT
    INST_ID,
    SID,
    ROW_WAIT_OBJ#
  FROM
    ALL_SESSIONS
  WHERE
    BLOCKING_SESSION_STATUS = 'VALID'
),
BLOCKING_SESSIONS AS
( SELECT DISTINCT 
    BLOCKING_INSTANCE INST_ID,
    BLOCKING_SESSION SID
  FROM
    ALL_SESSIONS
),
PRIMARY_BLOCKING_SESSIONS AS
( SELECT
    INST_ID,
    SID
  FROM
    BLOCKING_SESSIONS
  WHERE
    ( INST_ID, SID ) NOT IN
    ( SELECT
        INST_ID,
        SID
      FROM
        BLOCKED_SESSIONS
    )
),
LOCKED_OBJECTS AS
( SELECT DISTINCT /*+ MATERIALIZE */
    O.OWNER OWNER,
    O.OBJECT_NAME OBJECT_NAME,
    O.OBJECT_ID OBJECT_ID,
    O.DATA_OBJECT_ID DATA_OBJECT_ID
  FROM
    DBA_OBJECTS O,
    BLOCKED_SESSIONS BS
  WHERE
    BS.ROW_WAIT_OBJ# = O.OBJECT_ID
)
SELECT
  SID, 
  TO_CHAR(INST_ID, 990) INST, 
  DEADLOCK,
  PROCESS,
  MACHINE,
  ACTION,
  COMMAND_TYPE,
  SQL_ID,
  PREV_SQL_ID,
  ENQ_TYPE,
  ENQ_REQUEST,
  OBJECT_NAME,
  TO_CHAR(ROW_WAIT_FILE#, 9999999999990) ROW_WAIT_FILE#,
  TO_CHAR(ROW_WAIT_BLOCK#, 99999999999990) ROW_WAIT_BLOCK#,
  TO_CHAR(ROW_WAIT_ROW#, 999999999990) ROW_WAIT_ROW#,
  TO_CHAR(SECONDS_IN_WAIT, 99999999999990) SECONDS_IN_WAIT,
  ROW_EXTRACTION_COMMAND
FROM 
( SELECT 
    LPAD(' ', 2 * (LOCK_LEVEL - 1)) || SID SID, 
    INST_ID,
    DEADLOCK,
    PROCESS,
    MACHINE,
    ACTION,
    COMMAND_TYPE,
    SQL_ID,
    PREV_SQL_ID,
    DECODE(SUBSTR(ACTION, 1, 4), 'enq:', CHR(BITAND(P1, -16777216) / 16777215) ||       
      CHR(BITAND(P1, 16711680) / 65535), NULL) ENQ_TYPE,   
    DECODE(SUBSTR(ACTION, 1, 4), 'enq:', DECODE(BITAND(P1, 65535), 4, '4 (Shared)', 
      6, '6 (Exclusive)', BITAND(P1, 65535)), NULL) ENQ_REQUEST,
    DECODE(ACTION, 'enq: TX - row lock contention', NVL(OBJECT_NAME, ROW_WAIT_OBJ#), NULL) OBJECT_NAME,
    DECODE(ACTION, 'enq: TX - row lock contention', ROW_WAIT_FILE#, NULL) ROW_WAIT_FILE#,
    DECODE(ACTION, 'enq: TX - row lock contention', ROW_WAIT_BLOCK#, NULL) ROW_WAIT_BLOCK#,
    DECODE(ACTION, 'enq: TX - row lock contention', ROW_WAIT_ROW#, NULL) ROW_WAIT_ROW#,
    DECODE(ACTION, 'enq: TX - row lock contention', SECONDS_IN_WAIT) SECONDS_IN_WAIT,
    DECODE(ACTION, 'enq: TX - row lock contention', 
      DECODE(BITAND(P1, 65535), 6, 
      'SELECT * FROM "' || OWNER || '"."' || OBJECT_NAME || 
      '" WHERE ROWID = DBMS_ROWID.ROWID_CREATE(1, ' ||                       
      DATA_OBJECT_ID || ', ' || ROW_WAIT_FILE# || ', ' || ROW_WAIT_BLOCK# || ', ' ||             
      ROW_WAIT_ROW# || ');', 'No exclusive lock'), 'No row lock contention') ROW_EXTRACTION_COMMAND
  FROM
  ( SELECT
      LEVEL LOCK_LEVEL,
      S.*,
      LO.*
    FROM
      ALL_SESSIONS S,
      LOCKED_OBJECTS LO
    WHERE
      S.ROW_WAIT_OBJ# = LO.OBJECT_ID (+)
    CONNECT BY NOCYCLE
      PRIOR SID = BLOCKING_SESSION AND
      PRIOR INST_ID = BLOCKING_INSTANCE
    START WITH
      (INST_ID, SID) IN
      ( SELECT 
          INST_ID, SID 
        FROM 
          PRIMARY_BLOCKING_SESSIONS
      ) OR
      S.DEADLOCK = 'X'
  )
)
));
