SELECT NULL BEGIN_TIME, NULL SECONDS, NULL INST, NULL KEY_FIGURE, NULL VALUE_TOTAL, NULL VALUE_PER_S, NULL AREA_1, NULL VALUE_1,
  NULL PCT_1, NULL AREA_2, NULL VALUE_2, NULL PCT_2, NULL AREA_3, NULL VALUE_3, NULL PCT_3, 
  NULL AREA_4, NULL VALUE_4, NULL PCT_4, NULL AREA_5, NULL VALUE_5, NULL PCT_5
FROM DUAL WHERE 1 = 0
UNION ALL (
SELECT NULL BEGIN_TIME, NULL SECONDS, NULL INST, NULL KEY_FIGURE, NULL VALUE_TOTAL, NULL VALUE_PER_S, NULL AREA_1, NULL VALUE_1,
  NULL PCT_1, NULL AREA_2, NULL VALUE_2, NULL PCT_2, NULL AREA_3, NULL VALUE_3, NULL PCT_3, 
  NULL AREA_4, NULL VALUE_4, NULL PCT_4, NULL AREA_5, NULL VALUE_5, NULL PCT_5
FROM DUAL WHERE 1 = 0
) UNION ALL ( SELECT * FROM (
WITH BASIS_INFO AS
( SELECT
    INSTANCE_NUMBER,
    FILE_NAME,
    TABLESPACE_NAME,
    SOURCE,
    KEY_FIGURE,
    AGGREGATE_BY
  FROM
  ( SELECT
      -1 INSTANCE_NUMBER,
      '%' FILE_NAME,
      '%' TABLESPACE_NAME,
      'HISTORY' SOURCE,            /* CURRENT, HISTORY */
      'Total read time (ms)' KEY_FIGURE, /* 'Avg. read time (ms)', 'Avg. write time (ms)', 'Physical reads', 'Physical writes', 
                                           'Physical block reads', 'Physical block writes', 'Total read time (ms)',
                                           'Total write time (ms)' */
      'FILE' AGGREGATE_BY              /* FILE, TABLESPACE, DRIVE or SAPDATA */
    FROM
      DUAL
  )
),
FILEMETRIC AS
( SELECT
    FM.INST_ID,
    FM.BEGIN_TIME,
    FM.END_TIME,
    FM.INTSIZE_CSEC / 100 INTERVAL_SECONDS,
    DF.FILE_NAME,
    DF.TABLESPACE_NAME,
    DECODE(INSTR(UPPER(DF.FILE_NAME), 'SAPDATA'), 0, 
      DECODE(INSTR(UPPER(DF.FILE_NAME), 'SAPTEMP'), 0, 'n/a',
      REGEXP_REPLACE(DF.FILE_NAME, '.*(saptemp[0-9]+).*', '\1', 1, 1, 'i')),
      REGEXP_REPLACE(DF.FILE_NAME, '.*(sapdata[0-9]+).*', '\1', 1, 1, 'i'))
      SAPDATA,
    DECODE(SUBSTR(DF.FILE_NAME, 2, 1), ':', 
      SUBSTR(DF.FILE_NAME, 1, 2), 'n/a') DRIVE,
    FM.AVERAGE_READ_TIME AVG_READ_MS,
    FM.AVERAGE_WRITE_TIME AVG_WRITE_MS,
    FM.PHYSICAL_READS, 
    FM.PHYSICAL_WRITES,
    FM.PHYSICAL_BLOCK_READS,
    FM.PHYSICAL_BLOCK_WRITES,
    FM.AVERAGE_READ_TIME * FM.PHYSICAL_READS TOTAL_READ_MS,
    FM.AVERAGE_WRITE_TIME * FM.PHYSICAL_WRITES TOTAL_WRITE_MS
  FROM
    BASIS_INFO BI,
    GV$FILEMETRIC_HISTORY FM,
    DBA_DATA_FILES DF
  WHERE
    ( BI.INSTANCE_NUMBER = -1 OR
      BI.INSTANCE_NUMBER = FM.INST_ID ) AND
    BI.SOURCE = 'HISTORY' AND
    FM.FILE_ID = DF.FILE_ID
  UNION ALL
  ( SELECT
      FM.INST_ID,
      FM.BEGIN_TIME,
      FM.END_TIME,
      FM.INTSIZE_CSEC / 100 INTERVAL_SECONDS,
      DF.FILE_NAME,
      DF.TABLESPACE_NAME,
      DECODE(INSTR(UPPER(DF.FILE_NAME), 'SAPDATA'), 0, 
        DECODE(INSTR(UPPER(DF.FILE_NAME), 'SAPTEMP'), 0, 'n/a',
        REGEXP_REPLACE(DF.FILE_NAME, '.*(saptemp[0-9]+).*', '\1', 1, 1, 'i')),
        REGEXP_REPLACE(DF.FILE_NAME, '.*(sapdata[0-9]+).*', '\1', 1, 1, 'i'))
        SAPDATA,
      DECODE(SUBSTR(DF.FILE_NAME, 2, 1), ':', 
        SUBSTR(DF.FILE_NAME, 1, 2), 'n/a') DRIVE,
      FM.AVERAGE_READ_TIME AVG_READ_MS,
      FM.AVERAGE_WRITE_TIME AVG_WRITE_MS,
      FM.PHYSICAL_READS, 
      FM.PHYSICAL_WRITES,
      FM.PHYSICAL_BLOCK_READS,
      FM.PHYSICAL_BLOCK_WRITES,
      FM.AVERAGE_READ_TIME * FM.PHYSICAL_READS TOTAL_READ_MS,
      FM.AVERAGE_WRITE_TIME * FM.PHYSICAL_WRITES TOTAL_WRITE_MS
    FROM
      BASIS_INFO BI,
      GV$FILEMETRIC FM,
      DBA_DATA_FILES DF
    WHERE
      ( BI.INSTANCE_NUMBER = -1 OR
        BI.INSTANCE_NUMBER = FM.INST_ID ) AND
      BI.SOURCE = 'CURRENT' AND
      FM.FILE_ID = DF.FILE_ID
  )
) 
SELECT
  TO_CHAR(BEGIN_INTERVAL_TIME, 'dd.mm.yyyy hh24:mi:ss') BEGIN_TIME,
  TO_CHAR(SECONDS, 999990) SECONDS,
  TO_CHAR(INST_ID, 990) INST,
  KEY_FIGURE,
  DECODE(SUBSTR(KEY_FIGURE, 1, 4), 'Avg.', 'n/a', TO_CHAR(VALUE_TOTAL, 999999990.99)) VALUE_TOTAL,
  DECODE(SUBSTR(KEY_FIGURE, 1, 4), 'Avg.', 'n/a', TO_CHAR(VALUE_PER_S, 9999990.99)) VALUE_PER_S,
  AREA_1,
  TO_CHAR(VALUE_1, 999990.99) VALUE_1,
  DECODE(SUBSTR(KEY_FIGURE, 1, 4), 'Avg.', 'n/a', TO_CHAR(PCT_1, 990.99)) PCT_1,
  AREA_2,
  TO_CHAR(VALUE_2, 999990.99) VALUE_2,
  DECODE(SUBSTR(KEY_FIGURE, 1, 4), 'Avg.', 'n/a', TO_CHAR(PCT_2, 990.99)) PCT_2,
  AREA_3,
  TO_CHAR(VALUE_3, 999990.99) VALUE_3,
  DECODE(SUBSTR(KEY_FIGURE, 1, 4), 'Avg.', 'n/a', TO_CHAR(PCT_3, 990.99)) PCT_3,
  AREA_4,
  TO_CHAR(VALUE_4, 999990.99) VALUE_4,
  DECODE(SUBSTR(KEY_FIGURE, 1, 4), 'Avg.', 'n/a', TO_CHAR(PCT_4, 990.99)) PCT_4,
  AREA_5,
  TO_CHAR(VALUE_5, 999990.99) VALUE_5,
  DECODE(SUBSTR(KEY_FIGURE, 1, 4), 'Avg.', 'n/a', TO_CHAR(PCT_5, 990.99)) PCT_5
FROM
( SELECT
    BEGIN_INTERVAL_TIME,
    INTERVAL_SECONDS SECONDS,
    INST_ID,
    KEY_FIGURE,
    SUM(SUM(VALUE)) OVER (PARTITION BY BEGIN_INTERVAL_TIME) VALUE_TOTAL,
    SUM(SUM(VALUE)) OVER (PARTITION BY BEGIN_INTERVAL_TIME) / INTERVAL_SECONDS VALUE_PER_S,
    AREA AREA_1,
    SUM(VALUE) VALUE_1,
    SUM(PERCENT) PCT_1,
    LEAD(AREA, 1) OVER (PARTITION BY BEGIN_INTERVAL_TIME ORDER BY SUM(VALUE) DESC) AREA_2,
    LEAD(SUM(VALUE), 1) OVER (PARTITION BY BEGIN_INTERVAL_TIME ORDER BY SUM(VALUE) DESC) VALUE_2,
    LEAD(SUM(PERCENT), 1) OVER (PARTITION BY BEGIN_INTERVAL_TIME ORDER BY SUM(VALUE) DESC) PCT_2,
    LEAD(AREA, 2) OVER (PARTITION BY BEGIN_INTERVAL_TIME ORDER BY SUM(VALUE) DESC) AREA_3,
    LEAD(SUM(VALUE), 2) OVER (PARTITION BY BEGIN_INTERVAL_TIME ORDER BY SUM(VALUE) DESC) VALUE_3,
    LEAD(SUM(PERCENT), 2) OVER (PARTITION BY BEGIN_INTERVAL_TIME ORDER BY SUM(VALUE) DESC) PCT_3,
    LEAD(AREA, 3) OVER (PARTITION BY BEGIN_INTERVAL_TIME ORDER BY SUM(VALUE) DESC) AREA_4,
    LEAD(SUM(VALUE), 3) OVER (PARTITION BY BEGIN_INTERVAL_TIME ORDER BY SUM(VALUE) DESC) VALUE_4,
    LEAD(SUM(PERCENT), 3) OVER (PARTITION BY BEGIN_INTERVAL_TIME ORDER BY SUM(VALUE) DESC) PCT_4,
    LEAD(AREA, 4) OVER (PARTITION BY BEGIN_INTERVAL_TIME ORDER BY SUM(VALUE) DESC) AREA_5,
    LEAD(SUM(VALUE), 4) OVER (PARTITION BY BEGIN_INTERVAL_TIME ORDER BY SUM(VALUE) DESC) VALUE_5,
    LEAD(SUM(PERCENT), 4) OVER (PARTITION BY BEGIN_INTERVAL_TIME ORDER BY SUM(VALUE) DESC) PCT_5,
    ROW_NUMBER() OVER (PARTITION BY BEGIN_INTERVAL_TIME ORDER BY SUM(VALUE) DESC) POSITION
  FROM
  ( SELECT
      BEGIN_TIME BEGIN_INTERVAL_TIME,
      INTERVAL_SECONDS,
      INST_ID,
      KEY_FIGURE,
      AREA,
      VALUE,
      RATIO_TO_REPORT(VALUE) OVER (PARTITION BY BEGIN_TIME) * 100 PERCENT
    FROM
    ( SELECT
        FM.BEGIN_TIME,
        FM.END_TIME,
        FM.FILE_NAME,
        FM.INTERVAL_SECONDS,
        FM.INST_ID,
        BI.KEY_FIGURE,
        DECODE ( BI.AGGREGATE_BY,
          'FILE',                            FM.FILE_NAME,
          'TABLESPACE',                      FM.TABLESPACE_NAME,
          'DRIVE',                           FM.DRIVE,
          'SAPDATA',                         FM.SAPDATA ) AREA,
        DECODE ( BI.KEY_FIGURE,
          'Avg. read time (ms)',             FM.AVG_READ_MS,
          'Avg. write time (ms)',            FM.AVG_WRITE_MS,
          'Physical reads',                  FM.PHYSICAL_READS,
          'Physical writes',                 FM.PHYSICAL_WRITES,
          'Physical block reads',            FM.PHYSICAL_BLOCK_READS,
          'Physical block writes',           FM.PHYSICAL_BLOCK_WRITES,
          'Total read time (ms)',             FM.TOTAL_READ_MS,
          'Total write time (ms)',            FM.TOTAL_WRITE_MS) VALUE
      FROM
        BASIS_INFO BI,
        FILEMETRIC FM  
    )
  )
  GROUP BY
    BEGIN_INTERVAL_TIME,
    INTERVAL_SECONDS,
    INST_ID,
    KEY_FIGURE,
    AREA
)
WHERE
  POSITION = 1
ORDER BY
  BEGIN_INTERVAL_TIME DESC,
  INST_ID
));

