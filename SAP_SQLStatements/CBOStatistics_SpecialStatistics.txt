SELECT NULL TABLE_NAME, NULL XST, NULL DLS, NULL NTS, NULL NPS, NULL NIS, NULL NCS, NULL ATS, NULL AIS, NULL ACS,
  NULL HCS, NULL LTS, NULL SSS, NULL ACTIV, NULL AMETH, NULL OPTIO, NULL PLAND FROM DUAL WHERE 1 = 0
UNION ALL (
SELECT NULL TABLE_NAME, NULL XST, NULL DLS, NULL NTS, NULL NPS, NULL NIS, NULL NCS, NULL ATS, NULL AIS, NULL ACS,
  NULL HCS, NULL LTS, NULL SSS, NULL ACTIV, NULL AMETH, NULL OPTIO, NULL PLAND FROM DUAL WHERE 1 = 0
) UNION ALL ( SELECT * FROM (
WITH BASIS_INFO AS
( SELECT /*+ OPT_PARAM('OPTIMIZER_DYNAMIC_SAMPLING', 6) */
    'SAP%' OWNER,
    'X' EXCLUDE_LONG_COLUMNS,
    'X' EXCLUDE_LOB_COLUMNS
  FROM 
    DUAL
),
NO_TABLE_STATS AS
( SELECT /*+ MATERIALIZE */ DISTINCT
    T.OWNER,
    T.TABLE_NAME
  FROM
    BASIS_INFO BI,
    DBA_TABLES T
  WHERE
    T.OWNER LIKE BI.OWNER AND
    T.LAST_ANALYZED IS NULL
),
NO_TABPART_STATS AS
( SELECT /*+ MATERIALIZE */ DISTINCT
    TP.TABLE_OWNER OWNER,
    TP.TABLE_NAME
  FROM
    BASIS_INFO BI,
    DBA_TAB_PARTITIONS TP
  WHERE
    TP.TABLE_OWNER LIKE BI.OWNER AND
    TP.LAST_ANALYZED IS NULL
),
NO_INDEX_STATS AS
( SELECT /*+ MATERIALIZE */ DISTINCT
    I.TABLE_OWNER OWNER,
    I.TABLE_NAME
  FROM
    BASIS_INFO BI,
    DBA_INDEXES I
  WHERE
    I.TABLE_OWNER LIKE BI.OWNER AND
    I.LAST_ANALYZED IS NULL AND
    I.INDEX_TYPE != 'LOB'
),
NO_COLUMN_STATS AS
( SELECT /*+ MATERIALIZE */ DISTINCT
    TC.OWNER,
    TC.TABLE_NAME
  FROM
    BASIS_INFO BI,
    DBA_TABLES T,
    DBA_TAB_COLUMNS TC
  WHERE
    TC.OWNER LIKE BI.OWNER AND
    T.OWNER = TC.OWNER AND
    T.TABLE_NAME = TC.TABLE_NAME AND
    TC.LAST_ANALYZED IS NULL AND
    ( BI.EXCLUDE_LONG_COLUMNS = ' ' OR
      TC.DATA_TYPE != 'LONG' ) AND
    ( BI.EXCLUDE_LOB_COLUMNS = ' ' OR
      TC.DATA_TYPE NOT IN ('BLOB', 'CLOB', 'NCLOB', 'BFILE') ) 
),
ADAPTED_TABLE_STATS AS
( SELECT /*+ MATERIALIZE */ DISTINCT
    T.OWNER,
    T.TABLE_NAME
  FROM
    BASIS_INFO BI,
    DBA_TABLES T
  WHERE
    T.OWNER LIKE BI.OWNER AND
    T.USER_STATS = 'YES'
),
ADAPTED_INDEX_STATS AS
( SELECT /*+ MATERIALIZE */ DISTINCT
    I.TABLE_OWNER OWNER,
    I.TABLE_NAME
  FROM
    BASIS_INFO BI,
    DBA_INDEXES I
  WHERE
    I.TABLE_OWNER LIKE BI.OWNER AND
    USER_STATS = 'YES'
),
ADAPTED_COLUMN_STATS AS
( SELECT /*+ MATERIALIZE */ DISTINCT
    CS.OWNER,
    CS.TABLE_NAME
  FROM
    BASIS_INFO BI,
    DBA_TAB_COLUMNS CS
  WHERE
    CS.OWNER LIKE BI.OWNER AND
    CS.USER_STATS = 'YES'
),
HISTOGRAM_COLUMN_STATS AS
( SELECT /*+ MATERIALIZE */ DISTINCT
    CS.OWNER,
    CS.TABLE_NAME
  FROM
    BASIS_INFO BI,
    DBA_TAB_COLUMNS CS
  WHERE
    CS.OWNER LIKE BI.OWNER AND
    CS.HISTOGRAM != 'NONE' AND
    CS.TABLE_NAME NOT LIKE '/BI%' AND 
    CS.TABLE_NAME NOT LIKE '/B28/%' 
),
SMALL_SAMPLE_SIZE AS
( SELECT  
    T.OWNER,
    T.TABLE_NAME
  FROM
    BASIS_INFO BI,                                   
    DBA_TABLES T                                                  
  WHERE
    T.OWNER LIKE BI.OWNER AND
    T.NUM_ROWS > 50000 AND                                            
    T.SAMPLE_SIZE > 100 AND                                           
    T.SAMPLE_SIZE < 0.2 * T.NUM_ROWS *                                  
      DECODE(T.NUM_ROWS, 0, 0, DECODE(TRUNC(LOG(10, 
      GREATEST(T.NUM_ROWS, T.BLOCKS))),       
      0, 1, 1, 1, 2, 1, 3, 1, 4, 0.3, 5, 0.1, 6, 0.03, 7, 0.01,     
      8, 0.003, 9, 0.001, 10, 0.0003, 11, 0.0001, 12, 0.00003,      
      0.00001))  
),                                                   
LOCKED_TABLE_STATS AS
( SELECT /*+ MATERIALIZE */ DISTINCT
    TS.OWNER,
    TS.TABLE_NAME
  FROM
    BASIS_INFO BI,
    DBA_TAB_STATISTICS TS
  WHERE
    TS.OWNER LIKE BI.OWNER AND
    TS.STATTYPE_LOCKED IS NOT NULL
),
DBSTATC_SETTINGS AS
( SELECT /*+ MATERIALIZE */ DISTINCT
    DBOBJ TABLE_NAME,
    ACTIV,
    AMETH,
    OPTIO,
    PLAND
  FROM
    DBSTATC
  WHERE
    DBTYP IN (' ', 'ORACLE') AND
    ( ACTIV IN ('I', 'N', 'R', 'U') OR
      AMETH != ' ' OR
      OPTIO != ' ' OR
      PLAND = 'X' )
),
DELIVERED_STATS AS
( SELECT 'E' STAT_LEVEL, 'AUSP' TABLE_NAME FROM DUAL UNION
  SELECT 'E', 'BKPF' FROM DUAL UNION
  SELECT 'E', 'BSID' FROM DUAL UNION
  SELECT 'E', 'HRP1001' FROM DUAL UNION
  SELECT 'E', 'MSEG' FROM DUAL UNION
  SELECT 'E', 'NAST' FROM DUAL UNION
  SELECT 'S', '/SAPAPO/MATLOC' FROM DUAL UNION
  SELECT 'S', '/SAPAPO/ORDADM_I' FROM DUAL UNION
  SELECT 'S', 'AFKO' FROM DUAL UNION
  SELECT 'S', 'AFPO' FROM DUAL UNION
  SELECT 'S', 'AFVC' FROM DUAL UNION
  SELECT 'S', 'AUFK' FROM DUAL UNION
  SELECT 'S', 'BBP_PDHGP' FROM DUAL UNION
  SELECT 'S', 'BDCP2' FROM DUAL UNION
  SELECT 'S', 'CATSDB' FROM DUAL UNION
  SELECT 'S', 'DPSOB_BP_ACC' FROM DUAL UNION
  SELECT 'S', 'DFKKOP' FROM DUAL UNION
  SELECT 'S', 'DRAW' FROM DUAL UNION
  SELECT 'S', 'EDIDC' FROM DUAL UNION
  SELECT 'S', 'EKKN' FROM DUAL UNION
  SELECT 'S', 'KSSK' FROM DUAL UNION
  SELECT 'S', 'LTAK' FROM DUAL UNION
  SELECT 'S', 'MARA' FROM DUAL UNION
  SELECT 'S', 'MLST' FROM DUAL UNION
  SELECT 'S', 'PAYR' FROM DUAL UNION
  SELECT 'S', 'RSBATCHDATA' FROM DUAL UNION
  SELECT 'S', 'SWEQUEUE' FROM DUAL UNION
  SELECT 'S', 'SWWWIHEAD' FROM DUAL UNION
  SELECT 'S', 'TBTCO' FROM DUAL UNION
  SELECT 'S', 'UPSITX' FROM DUAL UNION
  SELECT 'S', 'VEPO' FROM DUAL UNION
  SELECT 'F', 'ARFCRSTATE' FROM DUAL UNION
  SELECT 'F', 'ARFCSDATA' FROM DUAL UNION
  SELECT 'F', 'ARFCSSTATE' FROM DUAL UNION
  SELECT 'F', 'DDXTT' FROM DUAL UNION
  SELECT 'F', 'DDXTF' FROM DUAL UNION
  SELECT 'F', 'QREFTID' FROM DUAL UNION
  SELECT 'F', 'SXMSCLUP' FROM DUAL UNION
  SELECT 'F', 'SXMSCLUP2' FROM DUAL UNION
  SELECT 'F', 'SXMSCLUR' FROM DUAL UNION
  SELECT 'F', 'SXMSCLUR2' FROM DUAL UNION
  SELECT 'F', 'SXMSPEMAS' FROM DUAL UNION
  SELECT 'F', 'SXMSPEMAS2' FROM DUAL UNION
  SELECT 'F', 'SXMSPERROR' FROM DUAL UNION
  SELECT 'F', 'SXMSPERRO2' FROM DUAL UNION
  SELECT 'F', 'SXMSPHIST' FROM DUAL UNION
  SELECT 'F', 'SXMSPHIST2' FROM DUAL UNION
  SELECT 'F', 'SXMSPMAST' FROM DUAL UNION
  SELECT 'F', 'SXMSPMAST2' FROM DUAL UNION
  SELECT 'F', 'SXMSPVERS' FROM DUAL UNION
  SELECT 'F', 'SXMSPVERS2' FROM DUAL UNION
  SELECT 'F', 'TATAF' FROM DUAL UNION
  SELECT 'F', 'TESTDATRNRPART0' FROM DUAL UNION
  SELECT 'F', 'TRBAT' FROM DUAL UNION
  SELECT 'F', 'TRBAT2' FROM DUAL UNION
  SELECT 'F', 'TRFCQDATA' FROM DUAL UNION
  SELECT 'F', 'TRFCQIN' FROM DUAL UNION
  SELECT 'F', 'TRFCQOUT' FROM DUAL UNION
  SELECT 'F', 'TRFCQSTATE' FROM DUAL UNION
  SELECT 'F', 'SMOEJOBID' FROM DUAL UNION
  SELECT 'F', 'SMOFCDBHD' FROM DUAL UNION
  SELECT 'F', 'SMOFCMPDAT' FROM DUAL UNION
  SELECT 'F', 'SMOFCMPHD' FROM DUAL UNION
  SELECT 'F', 'SMOFCMPOBJ' FROM DUAL UNION
  SELECT 'F', 'SMOHJOBQ' FROM DUAL UNION
  SELECT 'F', 'SMOHMSGQ' FROM DUAL UNION
  SELECT 'F', 'SMOHMSGQRE' FROM DUAL UNION
  SELECT 'F', 'SMOHSITEQ' FROM DUAL UNION
  SELECT 'F', 'SMOHSITEQEX' FROM DUAL UNION
  SELECT 'F', 'SMOHSITEQRD' FROM DUAL UNION
  SELECT 'F', 'XI_AF_SVC_ID_MAP' FROM DUAL UNION ALL
  SELECT 'F', 'XI_IDOC_IN_MSG' FROM DUAL UNION ALL
  SELECT 'F', 'XI_IDOC_OUT_MSG' FROM DUAL
),
TABLE_LIST AS 
( SELECT TABLE_NAME FROM NO_TABLE_STATS UNION
  SELECT TABLE_NAME FROM NO_TABPART_STATS UNION
  SELECT TABLE_NAME FROM NO_INDEX_STATS UNION
  SELECT TABLE_NAME FROM NO_COLUMN_STATS UNION
  SELECT TABLE_NAME FROM ADAPTED_TABLE_STATS UNION
  SELECT TABLE_NAME FROM ADAPTED_INDEX_STATS UNION
  SELECT TABLE_NAME FROM ADAPTED_COLUMN_STATS UNION
  SELECT TABLE_NAME FROM HISTOGRAM_COLUMN_STATS UNION
  SELECT TABLE_NAME FROM SMALL_SAMPLE_SIZE UNION
  SELECT TABLE_NAME FROM LOCKED_TABLE_STATS UNION
  SELECT TABLE_NAME FROM DBSTATC_SETTINGS 
),
EXISTING_TABLES AS
( SELECT /*+ MATERIALIZE */ DISTINCT
    TL.TABLE_NAME,
    T.TEMPORARY
  FROM
    BASIS_INFO BI,
    TABLE_LIST TL,
    DBA_TABLES T
  WHERE
    T.OWNER LIKE BI.OWNER AND
    T.TABLE_NAME = TL.TABLE_NAME
)
SELECT
  TL.TABLE_NAME,
  DECODE(EXT.TABLE_NAME, NULL, ' ', 'X') XST,
  DECODE(DST.TABLE_NAME, NULL, ' ', 'X') DLS,
  DECODE(NTS.TABLE_NAME, NULL, ' ', 'X') NTS,
  DECODE(NPS.TABLE_NAME, NULL, ' ', 'X') NPS,
  DECODE(NIS.TABLE_NAME, NULL, ' ', 'X') NIS,
  DECODE(NCS.TABLE_NAME, NULL, ' ', 'X') NCS,
  DECODE(ATS.TABLE_NAME, NULL, ' ', 'X') ATS,
  DECODE(AIS.TABLE_NAME, NULL, ' ', 'X') AIS,
  DECODE(ACS.TABLE_NAME, NULL, ' ', 'X') ACS,
  DECODE(HCS.TABLE_NAME, NULL, ' ', 'X') HCS,
  DECODE(LTS.TABLE_NAME, NULL, ' ', 'X') LTS,
  DECODE(SSS.TABLE_NAME, NULL, ' ', 'X') SSS,
  DECODE(DBS.TABLE_NAME, NULL, ' ', DBS.ACTIV) ACTIV,
  DECODE(DBS.TABLE_NAME, NULL, ' ', DBS.AMETH) AMETH,
  DECODE(DBS.TABLE_NAME, NULL, ' ', DBS.OPTIO) OPTIO,
  DECODE(DBS.TABLE_NAME, NULL, ' ', DBS.PLAND) PLAND
FROM
  TABLE_LIST TL,
  EXISTING_TABLES EXT,
  DELIVERED_STATS DST,
  NO_TABLE_STATS NTS,
  NO_TABPART_STATS NPS,
  NO_INDEX_STATS NIS,
  NO_COLUMN_STATS NCS,
  ADAPTED_TABLE_STATS ATS,
  ADAPTED_INDEX_STATS AIS,
  ADAPTED_COLUMN_STATS ACS,
  HISTOGRAM_COLUMN_STATS HCS,
  LOCKED_TABLE_STATS LTS,
  SMALL_SAMPLE_SIZE SSS,
  DBSTATC_SETTINGS DBS
WHERE
  TL.TABLE_NAME = DST.TABLE_NAME (+) AND
  TL.TABLE_NAME = EXT.TABLE_NAME (+) AND
  TL.TABLE_NAME = NTS.TABLE_NAME (+) AND
  TL.TABLE_NAME = NPS.TABLE_NAME (+) AND
  TL.TABLE_NAME = NIS.TABLE_NAME (+) AND
  TL.TABLE_NAME = NCS.TABLE_NAME (+) AND
  TL.TABLE_NAME = ATS.TABLE_NAME (+) AND
  TL.TABLE_NAME = AIS.TABLE_NAME (+) AND
  TL.TABLE_NAME = ACS.TABLE_NAME (+) AND
  TL.TABLE_NAME = HCS.TABLE_NAME (+) AND
  TL.TABLE_NAME = LTS.TABLE_NAME (+) AND
  TL.TABLE_NAME = SSS.TABLE_NAME (+) AND
  TL.TABLE_NAME = DBS.TABLE_NAME (+) AND
  NVL(EXT.TEMPORARY, 'N') != 'Y'
ORDER BY
  XST DESC,
  DLS,
  TL.TABLE_NAME
));




