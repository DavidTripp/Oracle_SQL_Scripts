SELECT NULL INST, NULL SID, NULL CPID, NULL SPID, NULL OPID, NULL BSID,
  NULL EVENT, NULL P1, NULL P2, NULL P3, 
  NULL SQL_ID, NULL SQL_TYPE, NULL PROGRAM, NULL CLIENT_IDENTIFIER, 
  NULL STATUS, NULL PROCESS_TYPE, NULL RUNTIME_S FROM DUAL WHERE 1 = 0
UNION ALL (
SELECT NULL INST, NULL SID, NULL CPID, NULL SPID, NULL OPID, NULL BSID,
  NULL EVENT, NULL P1, NULL P2, NULL P3, 
  NULL SQL_ID, NULL SQL_TYPE, NULL PROGRAM, NULL CLIENT_IDENTIFIER, 
  NULL STATUS, NULL PROCESS_TYPE, NULL RUNTIME_S FROM DUAL WHERE 1 = 0
) UNION ALL ( SELECT * FROM (
WITH BASIS_INFO AS
( SELECT
    DECODE(INSTANCE_NUMBER, -1, USERENV('INSTANCE'), INSTANCE_NUMBER) INSTANCE_NUMBER,
    SESSION_ID,
    CLIENT_PID,
    SERVER_PID,
    ORACLE_PID,
    STATUS,
    SQL_ID,
    PROGRAM,
    EVENT,
    CLIENT_IDENTIFIER,
    ONLY_BUSY_EVENTS,
    SQL_PLAN_OBJECT,
    PROCESS_TYPE,
    ORDER_BY
  FROM
  ( SELECT
      -2 INSTANCE_NUMBER,                  /* -1 for current instance, -2 for all instances */
      -1 SESSION_ID,
      '%' CLIENT_PID,
      -1 SERVER_PID,
      -1 ORACLE_PID,
      '%' STATUS,                 /* %, ACTIVE, INACTIVE */
      '%' SQL_ID,
      'oracle@wyclexah001-mgmt.uk.centricaplc.com' PROGRAM,
      '%' EVENT,
      '%' CLIENT_IDENTIFIER,
      ' ' ONLY_BUSY_EVENTS,
      '%' SQL_PLAN_OBJECT,
      '%' PROCESS_TYPE,       /* %, BACKGROUND, FOREGROUND */
      'SID' ORDER_BY                   /* SID, STATUS, PROGRAM, EVENT, CLIENT_IDENTIFIER */
    FROM
      DUAL
  ),
  ( SELECT DBID OWN_DBID FROM V$DATABASE )
)
SELECT
  INST,
  SID,
  CPID,
  SPID,
  OPID,
  BSID,
  EVENT,
  P1,
  P2,
  P3,
  SQL_ID,
  NAME,
  PROGRAM,
  CLIENT_IDENTIFIER,
  STATUS,
  PROCESS_TYPE,
  RUNTIME_S
FROM
( SELECT
    S.INST_ID INST,
    TO_CHAR(S.SID, 99990) SID,
    LPAD(S.PROCESS, 10) CPID,
    TO_CHAR(P.SPID, 999999990) SPID,
    TO_CHAR(P.PID, 99990) OPID,
    TO_CHAR(S.BLOCKING_SESSION, 99990) BSID,
    DECODE(S.WAIT_TIME,
      0, S.EVENT || DECODE(SUBSTR(S.EVENT, 1, 5),
      'enq: ', ' (' || TO_CHAR(BITAND(S.P1, 65535)) || ' / ' ||
      TO_CHAR(DECODE(BITAND(S.P1, 65535), 
        1, 'Null', 
        2, 'Sub-Share',
        3, 'Sub-Exclusive', 
        4, 'Share', 
        5, 'Share/Sub-Exclusive',
        6, 'Exclusive', 'Other')) || ')' ), 'CPU') EVENT,
    S.P1,
    S.P2,
    S.P3,
    S.SQL_ID,
    AA.NAME,
    DECODE(P.BACKGROUND, 1, P.PNAME, S.PROGRAM) PROGRAM,
    S.CLIENT_IDENTIFIER,
    S.STATUS,
    DECODE(P.BACKGROUND, 1, 'BACKGROUND', 'FOREGROUND') PROCESS_TYPE,
    TO_CHAR(S.LAST_CALL_ET, 99999990) RUNTIME_S,
    BI.ORDER_BY,
    BI.ONLY_BUSY_EVENTS,
    E.WAIT_CLASS
  FROM
    BASIS_INFO BI,
    GV$SESSION S,
    AUDIT_ACTIONS AA,
    GV$PROCESS P,
    GV$EVENT_NAME E
  WHERE
    ( BI.INSTANCE_NUMBER = -2 OR 
      S.INST_ID = BI.INSTANCE_NUMBER ) AND
    ( BI.SESSION_ID = -1 OR 
      S.SID = BI.SESSION_ID ) AND
    S.STATUS LIKE BI.STATUS AND
    ( BI.SQL_ID = '%' OR S.SQL_ID LIKE BI.SQL_ID ) AND
    ( BI.PROGRAM = '%' OR S.PROGRAM LIKE BI.PROGRAM ) AND
    DECODE(S.WAIT_TIME, 0, S.EVENT, 'CPU') LIKE BI.EVENT AND
    ( BI.CLIENT_IDENTIFIER = '%' OR 
      S.CLIENT_IDENTIFIER LIKE BI.CLIENT_IDENTIFIER ) AND
    S.INST_ID = E.INST_ID (+) AND
    S.EVENT = E.NAME (+) AND
    S.COMMAND = AA.ACTION (+) AND
    P.INST_ID = S.INST_ID AND
    P.ADDR = S.PADDR AND
    DECODE(P.BACKGROUND, 1, 'BACKGROUND', 'FOREGROUND') LIKE BI.PROCESS_TYPE AND
    ( BI.CLIENT_PID = '%' OR
      S.PROCESS LIKE BI.CLIENT_PID ) AND
    ( BI.SERVER_PID = -1 OR
      BI.SERVER_PID = P.SPID ) AND
    ( BI.ORACLE_PID = -1 OR
      BI.ORACLE_PID = P.PID ) AND
    ( BI.SQL_PLAN_OBJECT = '%' OR 
      EXISTS 
      ( SELECT 
          * 
        FROM
          GV$SQL_PLAN SP
        WHERE
          SP.INST_ID = S.INST_ID AND
          SP.SQL_ID = S.SQL_ID AND
          SP.CHILD_NUMBER = S.SQL_CHILD_NUMBER AND
          SP.OBJECT_NAME LIKE BI.SQL_PLAN_OBJECT
      )
    )
)
WHERE
  ( ONLY_BUSY_EVENTS = ' ' OR
    WAIT_CLASS != 'Idle' OR
    WAIT_CLASS IS NULL )
ORDER BY
  DECODE(ORDER_BY,
    'SID', SID, 
    1),
  DECODE(ORDER_BY,
    'PROGRAM', PROGRAM,
    'CLIENT_IDENTIFIER', CLIENT_IDENTIFIER,
    'EVENT', EVENT,
    1)
));
