SELECT NULL INST_ID, NULL THREAD, NULL TIME_INTERVAL, NULL DURATION_S FROM DUAL WHERE 1 = 0
UNION ALL (
SELECT NULL INST_ID, NULL THREAD, NULL TIME_INTERVAL, NULL DURATION_S FROM DUAL WHERE 1 = 0
) UNION ALL ( SELECT * FROM (
WITH BASIS_INFO AS
( SELECT
    DECODE(INSTANCE_NUMBER, -1, USERENV('INSTANCE'), INSTANCE_NUMBER) INSTANCE_NUMBER,
    MAX_INTERVAL_TIME_S,
    NUM_RECORDS
  FROM
  ( SELECT
      -2 INSTANCE_NUMBER,             /* -2 for all instances */
      60 MAX_INTERVAL_TIME_S,
      30 NUM_RECORDS
    FROM
      DUAL
  )
)
SELECT
  TO_CHAR(INST_ID, 999990) INST_ID,
  TO_CHAR(THREAD#, 99990) THREAD,
  TIME_INTERVAL,
  TO_CHAR(DURATION_S, 999999990) DURATION_S
FROM
( SELECT
    INST_ID,
    THREAD#,
    TO_CHAR(START_TIME, 'dd.mm.yyyy hh24:mi:ss') || '-' ||
      TO_CHAR(END_TIME, 'dd.mm.yyyy hh24:mi:ss') TIME_INTERVAL,
    SECONDS DURATION_S,
    NUM_RECORDS
  FROM
  ( SELECT
      LH1.INST_ID, 
      LH1.THREAD#,
      LH1.SEQUENCE#,
      LH1.FIRST_TIME START_TIME,
      LH2.FIRST_TIME END_TIME,
      ( LH2.FIRST_TIME - LH1.FIRST_TIME ) * 86400 SECONDS,
      BI.NUM_RECORDS,
      BI.MAX_INTERVAL_TIME_S
    FROM
      BASIS_INFO BI,
      GV$LOGHIST LH1,
      GV$LOGHIST LH2,
      V$DATABASE DB
    WHERE
      ( BI.INSTANCE_NUMBER = -2 OR
        BI.INSTANCE_NUMBER = LH1.INST_ID ) AND
      LH1.INST_ID = LH2.INST_ID AND
      LH1.THREAD# = LH2.THREAD# AND
      LH1.SEQUENCE# = LH2.SEQUENCE# - 1 AND
      LH1.FIRST_TIME > DB.RESETLOGS_TIME AND
      LH2.FIRST_TIME > DB.RESETLOGS_TIME
  )
  WHERE
    SECONDS <= MAX_INTERVAL_TIME_S
  ORDER BY
    START_TIME DESC,
    INST_ID
)
WHERE
  ROWNUM <= NUM_RECORDS
));
