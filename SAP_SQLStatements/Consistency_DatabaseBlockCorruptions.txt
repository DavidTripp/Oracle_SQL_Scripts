SELECT NULL OWNER, NULL SEGMENT_NAME, NULL PART_NAME, NULL FILE_ID, NULL EXTENT_RANGE,
  NULL CORR_RANGE, NULL CORR_TYPE, NULL CORR_SCN FROM DUAL WHERE 1 = 0
UNION ALL (
SELECT NULL OWNER, NULL SEGMENT_NAME, NULL PART_NAME, NULL FILE_ID, NULL EXTENT_RANGE,
  NULL CORR_RANGE, NULL CORR_TYPE, NULL CORR_SCN FROM DUAL WHERE 1 = 0
) UNION ALL ( SELECT * FROM (
WITH BASIS_INFO AS
( SELECT /* Block erroneously marked as corrupt can be validated using RMAN and 'validate check logical datafile <file_id> block <block_id>' */
    '%' OWNER,
    '%' SEGMENT_NAME,
    '%' TABLESPACE_NAME,
    -1 FILE_ID,
    ' ' INCLUDE_FREESPACE
  FROM
    DUAL
),
SPACE_AREAS AS
( SELECT /*+ MATERIALIZE */
    E.OWNER,
    E.SEGMENT_NAME,
    E.PARTITION_NAME,
    E.FILE_ID,
    E.BLOCK_ID,
    E.BLOCKS
  FROM
    BASIS_INFO BI,
    DBA_EXTENTS E
  WHERE
    E.TABLESPACE_NAME LIKE BI.TABLESPACE_NAME AND
    ( BI.FILE_ID = -1 OR E.FILE_ID = BI.FILE_ID ) AND
    E.OWNER LIKE BI.OWNER AND
    E.SEGMENT_NAME LIKE BI.SEGMENT_NAME 
  UNION ALL
  ( SELECT /*+ MATERIALIZE */
      ' ' OWNER,
      'FREESPACE ' || ROWNUM SEGMENT_NAME,
      ' ' PARTITION_NAME,
      F.FILE_ID,
      F.BLOCK_ID,
      F.BLOCKS
    FROM
      BASIS_INFO BI,
      DBA_FREE_SPACE F
    WHERE
      F.TABLESPACE_NAME LIKE BI.TABLESPACE_NAME AND
      ( BI.FILE_ID = -1 OR F.FILE_ID = BI.FILE_ID ) AND
      BI.INCLUDE_FREESPACE = 'X'
  )
)
SELECT
  S.OWNER,
  S.SEGMENT_NAME,
  S.PARTITION_NAME PART_NAME,
  S.FILE_ID,
  S.BLOCK_ID || '-' || TO_CHAR(S.BLOCK_ID + S.BLOCKS - 1) EXTENT_RANGE,
  C.BLOCK# || '-' || TO_CHAR(C.BLOCK# + C.BLOCKS - 1) CORR_RANGE,
  C.CORRUPTION_TYPE CORR_TYPE,
  C.CORRUPTION_CHANGE# CORR_SCN
FROM
  BASIS_INFO BI,
  V$DATABASE_BLOCK_CORRUPTION C,
  SPACE_AREAS S
WHERE
  C.FILE# = S.FILE_ID AND
  C.BLOCK# BETWEEN S.BLOCK_ID AND S.BLOCK_ID + S.BLOCKS - 1
ORDER BY
  S.OWNER,
  S.SEGMENT_NAME,
  S.PARTITION_NAME,
  S.FILE_ID,
  S.BLOCK_ID
));