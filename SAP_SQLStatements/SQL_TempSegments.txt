SELECT NULL INST, NULL SID, NULL SQL_ID, NULL TABLESPACE, NULL CONTENTS, NULL SEGTYPE,
  NULL SIZE_MB, NULL "SIZE_%" FROM DUAL WHERE 1 = 0
UNION ALL (
SELECT NULL INST, NULL SID, NULL SQL_ID, NULL TABLESPACE, NULL CONTENTS, NULL SEGTYPE,
  NULL SIZE_MB, NULL "SIZE_%" FROM DUAL WHERE 1 = 0
) UNION ALL ( SELECT * FROM (
WITH BASIS_INFO AS
( SELECT
    -1 INSTANCE_NUMBER,
    '%' SQL_ID,
    -1 SESSION_ID,
    '%' TABLESPACE_NAME,
    '%' CONTENTS,
    '%' SEGTYPE,
    'SQL_ID SEGTYPE TABLESPACE' AGGREGATE_BY,   /* 'SID INSTANCE SQL_ID TABLESPACE CONTENTS SEGTYPE' or substring */
    20 NUM_RECORDS
  FROM
    DUAL
)
SELECT
  INST,
  SID,
  SQL_ID,
  TABLESPACE,
  CONTENTS,
  SEGTYPE,
  TO_CHAR(SIZE_MB, 999990.99) SIZE_MB,
  TO_CHAR(PERCENT, 990.99) "SIZE_%"
FROM
( SELECT
    DECODE(BI.INSTANCE_NUMBER, -1, 
      DECODE(INSTR(BI.AGGREGATE_BY, 'INSTANCE'), 0, 'any', TO_CHAR(TSU.INST_ID)),
      TO_CHAR(TSU.INST_ID)) INST,
    DECODE(BI.SESSION_ID, -1, 
      DECODE(INSTR(BI.AGGREGATE_BY, 'SID'), 0, 'any', TO_CHAR(S.SID, 9990)),
      TO_CHAR(S.SID, 9990)) SID,
    DECODE(INSTR(BI.SQL_ID, '%'), 0, TSU.SQL_ID, 
      DECODE(INSTR(BI.AGGREGATE_BY, 'SQL_ID'), 0, 'any', TO_CHAR(TSU.SQL_ID))) SQL_ID,
    DECODE(INSTR(BI.TABLESPACE_NAME, '%'), 0, TSU.TABLESPACE, 
      DECODE(INSTR(BI.AGGREGATE_BY, 'TABLESPACE'), 0, 'any', TSU.TABLESPACE)) TABLESPACE,
    DECODE(INSTR(BI.CONTENTS, '%'), 0, TSU.CONTENTS, 
      DECODE(INSTR(BI.AGGREGATE_BY, 'CONTENTS'), 0, 'any', TSU.CONTENTS)) CONTENTS,
    DECODE(INSTR(BI.SEGTYPE, '%'), 0, TSU.SEGTYPE, 
      DECODE(INSTR(BI.AGGREGATE_BY, 'SEGTYPE'), 0, 'any', TSU.SEGTYPE)) SEGTYPE,
    SUM(TSU.BLOCKS * TS.BLOCK_SIZE) / 1024 / 1024 SIZE_MB,
    RATIO_TO_REPORT(SUM(TSU.BLOCKS * TS.BLOCK_SIZE)) OVER () * 100 PERCENT,
    BI.NUM_RECORDS
  FROM
    BASIS_INFO BI,
    GV$TEMPSEG_USAGE TSU,
    GV$SESSION S,
    DBA_TABLESPACES TS
  WHERE
    TSU.SQL_ID LIKE BI.SQL_ID AND
    TSU.TABLESPACE LIKE BI.TABLESPACE_NAME AND
    ( BI.INSTANCE_NUMBER = -1 OR
    TSU.INST_ID = BI.INSTANCE_NUMBER ) AND
    TSU.CONTENTS LIKE BI.CONTENTS AND
    TSU.SEGTYPE LIKE BI.SEGTYPE AND
    TSU.INST_ID = S.INST_ID (+) AND
    TSU.SESSION_ADDR = S.SADDR (+) AND
    TSU.TABLESPACE = TS.TABLESPACE_NAME (+)
  GROUP BY
    BI.NUM_RECORDS,
    DECODE(BI.INSTANCE_NUMBER, -1, 
      DECODE(INSTR(BI.AGGREGATE_BY, 'INSTANCE'), 0, 'any', TO_CHAR(TSU.INST_ID)),
      TO_CHAR(TSU.INST_ID)),
    DECODE(BI.SESSION_ID, -1, 
      DECODE(INSTR(BI.AGGREGATE_BY, 'SID'), 0, 'any', TO_CHAR(S.SID, 9990)),
      TO_CHAR(S.SID, 9990)),
    DECODE(INSTR(BI.SQL_ID, '%'), 0, TSU.SQL_ID, 
      DECODE(INSTR(BI.AGGREGATE_BY, 'SQL_ID'), 0, 'any', TO_CHAR(TSU.SQL_ID))),
    DECODE(INSTR(BI.TABLESPACE_NAME, '%'), 0, TSU.TABLESPACE, 
      DECODE(INSTR(BI.AGGREGATE_BY, 'TABLESPACE'), 0, 'any', TSU.TABLESPACE)),
    DECODE(INSTR(BI.CONTENTS, '%'), 0, TSU.CONTENTS, 
      DECODE(INSTR(BI.AGGREGATE_BY, 'CONTENTS'), 0, 'any', TSU.CONTENTS)),
    DECODE(INSTR(BI.SEGTYPE, '%'), 0, TSU.SEGTYPE, 
      DECODE(INSTR(BI.AGGREGATE_BY, 'SEGTYPE'), 0, 'any', TSU.SEGTYPE))
  ORDER BY
    SUM(TSU.BLOCKS * TS.BLOCK_SIZE) DESC
)
WHERE
  ( NUM_RECORDS = -1 OR ROWNUM <= NUM_RECORDS )
));