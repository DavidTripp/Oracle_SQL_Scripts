SELECT NULL TABLESPACE_NAME, NULL FRAGMENT_SIZE_MB, NULL FRAGMENTS, 
  NULL TOTAL_SIZE_GB, NULL "TOTAL_SIZE_%" FROM DUAL WHERE 1 = 0
UNION ALL (
SELECT NULL TABLESPACE_NAME, NULL FRAGMENT_SIZE_MB, NULL FRAGMENTS, 
  NULL TOTAL_SIZE_GB, NULL "TOTAL_SIZE_%" FROM DUAL WHERE 1 = 0
) UNION ALL ( SELECT * FROM (
WITH BASIS_INFO AS
( SELECT
    '%' TABLESPACE_NAME,
    983040 LOWER_LIMIT_BYTE,   /* 983040 in case of parallel DML fragmentation problem */
    983040 UPPER_LIMIT_BYTE,   /* 983040 in case of parallel DML fragmentation problem */
    1024 MIN_WASTED_SPACE_MB
  FROM
    DUAL
)
SELECT
  FS.TABLESPACE_NAME,
  TO_CHAR(FS.BYTES / 1024 / 1024, 999999999990.99) FRAGMENT_SIZE_MB,
  TO_CHAR(COUNT(*), 99999990) FRAGMENTS,
  TO_CHAR(SUM(FS.BYTES) / 1024 / 1024 / 1024, 999999990.99) TOTAL_SIZE_GB,
  TO_CHAR(RATIO_TO_REPORT(SUM(FS.BYTES)) OVER () * 100, 99999990.99) "TOTAL_SIZE_%"
FROM
  BASIS_INFO BI,
  DBA_FREE_SPACE FS
WHERE 
  FS.TABLESPACE_NAME LIKE BI.TABLESPACE_NAME AND
  ( BI.LOWER_LIMIT_BYTE = -1 OR BI.LOWER_LIMIT_BYTE <= FS.BYTES) AND
  ( BI.UPPER_LIMIT_BYTE = -1 OR BI.UPPER_LIMIT_BYTE >= FS.BYTES)
GROUP BY
  FS.TABLESPACE_NAME,
  FS.BYTES,
  BI.MIN_WASTED_SPACE_MB
HAVING
  SUM(FS.BYTES) >= BI.MIN_WASTED_SPACE_MB * 1024 * 1024
ORDER BY 
  SUM(FS.BYTES)
));
