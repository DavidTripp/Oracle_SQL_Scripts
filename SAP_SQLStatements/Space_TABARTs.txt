SELECT /*+ OPT_PARAM('_OPTIMIZER_DISTINCT_AGG_TRANSFORM', 'FALSE') */ 
  NULL TABART, NULL TOTAL_GB, NULL TABLE_GB, NULL INDEX_GB, NULL LOB_GB FROM DUAL WHERE 1 = 0
UNION ALL (
SELECT
  NULL TABART, NULL TOTAL_GB, NULL TABLE_GB, NULL INDEX_GB, NULL LOB_GB FROM DUAL WHERE 1 = 0
) UNION ALL ( SELECT * FROM (
WITH BASIS_INFO AS
( SELECT /*+ MATERIALIZE */
    USER OWNER
  FROM
    DUAL
),
SEGMENTS AS
( SELECT /*+ MATERIALIZE */
    S.OWNER,
    S.SEGMENT_NAME,
    S.PARTITION_NAME,
    S.SEGMENT_TYPE,
    S.TABLESPACE_NAME,
    S.BYTES
  FROM
    BASIS_INFO BI,
    DBA_SEGMENTS S
  WHERE
    S.OWNER LIKE BI.OWNER
),
INDEXES AS
( SELECT /*+ MATERIALIZE */
    OWNER,
    TABLE_NAME,
    INDEX_NAME,
    TABLESPACE_NAME
  FROM 
    DBA_INDEXES
),
LOBS AS
( SELECT /*+ MATERIALIZE */
    OWNER,
    TABLE_NAME,
    SEGMENT_NAME,
    TABLESPACE_NAME, 
    INDEX_NAME,
    COLUMN_NAME
  FROM
    DBA_LOBS
),
TABARTS AS
( SELECT /*+ MATERIALIZE */
    TABNAME TABLE_NAME,
    TABART
  FROM
    DD09L
),
TABLE_SEGMENT_MAPPING AS
( SELECT /*+ MATERIALIZE */
    OWNER,
    SEGMENT_NAME TABLE_NAME,
    TABLESPACE_NAME,
    'TABLE' SEGMENT_TYPE,
    1 SEGMENTS,
    SUM(DECODE(PARTITION_NAME, NULL, 0, 1)) PARTITIONS,
    SUM(BYTES) BYTES
  FROM
    SEGMENTS
  WHERE
    SEGMENT_TYPE IN ('TABLE', 'TABLE PARTITION', 'TABLE SUBPARTITION')
  GROUP BY
    OWNER,
    SEGMENT_NAME,
    TABLESPACE_NAME
  UNION ALL
  ( SELECT
      I.OWNER OWNER,
      I.TABLE_NAME TABLE_NAME,
      S.TABLESPACE_NAME TABLESPACE_NAME,
      'INDEX' SEGMENT_TYPE,
      COUNT(DISTINCT(I.INDEX_NAME)) SEGMENTS,
      SUM(DECODE(S.PARTITION_NAME, NULL, 0, 1)) PARTITIONS,
      SUM(S.BYTES) BYTES
    FROM
      SEGMENTS S,
      INDEXES I
    WHERE
      S.OWNER = I.OWNER AND
      S.SEGMENT_NAME = I.INDEX_NAME AND
      S.SEGMENT_TYPE IN ('INDEX', 'INDEX PARTITION', 'INDEX SUBPARTITION')
    GROUP BY
      I.OWNER,
      I.TABLE_NAME,
      S.TABLESPACE_NAME 
  )
  UNION ALL
  ( SELECT
      L.OWNER OWNER,
      L.TABLE_NAME TABLE_NAME,
      S.TABLESPACE_NAME TABLESPACE_NAME,
      'LOB' SEGMENT_TYPE,
      COUNT(DISTINCT(L.COLUMN_NAME)) SEGMENTS,
      SUM(DECODE(S.PARTITION_NAME, NULL, 0, 1)) PARTITIONS,
      SUM(S.BYTES) BYTES
    FROM
      SEGMENTS S,
      LOBS L
    WHERE
      S.OWNER = L.OWNER AND
      S.SEGMENT_NAME IN ( L.SEGMENT_NAME, L.INDEX_NAME ) AND
      S.SEGMENT_TYPE IN ('LOBSEGMENT', 'LOBINDEX', 'LOB PARTITION')
    GROUP BY
      L.OWNER,
      L.TABLE_NAME,
      S.TABLESPACE_NAME
  )
),
LINES AS
( SELECT 1 LINENR, 'TOTAL' DESCRIPTION FROM DUAL UNION ALL
  ( SELECT 2 LINENR, 'TABLE' DESCRIPTION FROM DUAL ) UNION ALL
  ( SELECT 3 LINENR, 'INDEX' DESCRIPTION FROM DUAL ) UNION ALL
  ( SELECT 4 LINENR, 'LOB' DESCRIPTION FROM DUAL )
)
SELECT
  NVL(T.TABART, ' ') TABART,
  TO_CHAR(SUM(TOTAL_BYTES) / 1024 / 1024 / 1024, 99990.99) TOTAL_GB,
  TO_CHAR(SUM(TAB_BYTES) / 1024 / 1024 / 1024, 99990.99) TABLE_GB,
  TO_CHAR(SUM(IND_BYTES) / 1024 / 1024 / 1024, 9990.99) INDEX_GB,
  TO_CHAR(SUM(LOB_BYTES) / 1024 / 1024 / 1024, 9990.99) LOB_GB
FROM
( SELECT
    OWNER,
    TABLE_NAME,
    SUM(DECODE(COMPONENT, 'TOTAL', BYTES, 0)) TOTAL_BYTES,
    SUM(DECODE(COMPONENT, 'TABLE', COUNTER, 0)) "PART.",
    SUM(DECODE(COMPONENT, 'TABLE', BYTES, 0)) TAB_BYTES,
    MAX(DECODE(COMPONENT, 'TABLE', TABLESPACE_NAME)) TAB_TABSPACE,
    SUM(DECODE(COMPONENT, 'INDEX', COUNTER, 0)) "INDEXES",
    SUM(DECODE(COMPONENT, 'INDEX', BYTES, 0)) IND_BYTES,
    MAX(DECODE(COMPONENT, 'INDEX', TABLESPACE_NAME)) IND_TABSPACE,
    SUM(DECODE(COMPONENT, 'LOB',   COUNTER, 0)) LOBS,
    SUM(DECODE(COMPONENT, 'LOB',   BYTES, 0)) LOB_BYTES
  FROM
  ( SELECT
      TSM.OWNER OWNER,
      TSM.TABLE_NAME TABLE_NAME,
      L.DESCRIPTION COMPONENT,
     DECODE(L.DESCRIPTION, 
        'TOTAL', MAX(DECODE(TSM.SEGMENT_TYPE, 'TABLE', TSM.TABLESPACE_NAME)), 
        'TABLE', MAX(DECODE(TSM.SEGMENT_TYPE, 'TABLE', TSM.TABLESPACE_NAME)),
        'INDEX', MAX(DECODE(TSM.SEGMENT_TYPE, 'INDEX', TSM.TABLESPACE_NAME)),
        'LOB',   MAX(DECODE(TSM.SEGMENT_TYPE, 'LOB',   TSM.TABLESPACE_NAME))) TABLESPACE_NAME,
      DECODE(L.DESCRIPTION, 
        'TOTAL', SUM(TSM.BYTES), 
        'TABLE', SUM(DECODE(TSM.SEGMENT_TYPE, 'TABLE', TSM.BYTES)),
        'INDEX', SUM(DECODE(TSM.SEGMENT_TYPE, 'INDEX', TSM.BYTES)),
        'LOB',   SUM(DECODE(TSM.SEGMENT_TYPE, 'LOB',   TSM.BYTES))) BYTES,
      DECODE(L.DESCRIPTION,
        'TOTAL', 0,
        'TABLE', SUM(DECODE(TSM.SEGMENT_TYPE, 'TABLE', TSM.PARTITIONS)),
        'INDEX', SUM(DECODE(TSM.SEGMENT_TYPE, 'INDEX', TSM.SEGMENTS)),
        'LOB',   SUM(DECODE(TSM.SEGMENT_TYPE, 'LOB',   TSM.SEGMENTS))) COUNTER
    FROM
      TABLE_SEGMENT_MAPPING TSM,
      LINES L,
      BASIS_INFO BI
    GROUP BY
      L.LINENR,
      L.DESCRIPTION,
      TSM.OWNER,
      TSM.TABLE_NAME
    ORDER BY
      SUM(TSM.BYTES),
      TSM.TABLE_NAME,
      L.LINENR 
  )
  GROUP BY
    OWNER,
    TABLE_NAME
  ORDER BY
    3 DESC
) D,
TABARTS T
WHERE
  D.TABLE_NAME = T.TABLE_NAME (+)
GROUP BY
  NVL(T.TABART, ' ')
ORDER BY
  NVL(T.TABART, ' ')
));

