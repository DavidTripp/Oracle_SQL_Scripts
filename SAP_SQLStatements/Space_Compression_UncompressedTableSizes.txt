SELECT NULL OWNER, NULL TABLE_NAME, NULL NOCOMP_SIZE_MB, NULL COMP_SIZE_MB,
  NULL SAVED_SIZE_MB, NULL COMP_RATE_PCT FROM DUAL WHERE 1 = 0
UNION ALL (
SELECT NULL OWNER, NULL TABLE_NAME, NULL NOCOMP_SIZE_MB, NULL COMP_SIZE_MB,
  NULL SAVED_SIZE_MB, NULL COMP_RATE_PCT FROM DUAL WHERE 1 = 0
) UNION ALL ( SELECT * FROM (
WITH BASIS_INFO AS
( SELECT
    '%' OWNER,
    '%' TABLE_NAME,
    100 NUM_RECORDS,
    'X' INCLUDE_TAB_MODIFICATIONS,
    'X' EXCLUDE_LONG_TABLES,
    'X' EXCLUDE_LOB_TABLES,
    'X' EXCLUDE_MODIFIED_STATS,
    80  BLOCK_FILL_LEVEL_PCT
  FROM
    DUAL
),
EXCLUDED_TABLES AS
( SELECT /*+ MATERIALIZE */ DISTINCT
    TC.OWNER,
    TC.TABLE_NAME
  FROM
    BASIS_INFO BI,
    DBA_TAB_COLS TC
  WHERE
    TC.OWNER LIKE BI.OWNER AND
    TC.TABLE_NAME LIKE BI.TABLE_NAME AND
    ( BI.EXCLUDE_LONG_TABLES = 'X' AND TC.DATA_TYPE IN ( 'LONG', 'LONG RAW' ) OR
      BI.EXCLUDE_LOB_TABLES = 'X' AND TC.DATA_TYPE IN ( 'BLOB', 'CLOB', 'NCLOB' )
    )
  UNION
  ( SELECT
      TS.OWNER,
      TS.TABLE_NAME
    FROM
      BASIS_INFO BI,
      DBA_TAB_STATISTICS TS
    WHERE
      TS.OWNER LIKE BI.OWNER AND
      TS.TABLE_NAME LIKE BI.TABLE_NAME AND
      BI.EXCLUDE_MODIFIED_STATS = 'X' AND
      TS.USER_STATS = 'YES'
  )
),
LARGEST_TABLES AS
( SELECT /*+ MATERIALIZE */
    OWNER,
    TABLE_NAME,
    AVG_ROW_LEN,
    NUM_ROWS,
    BYTES
  FROM
  ( SELECT
      OWNER,
      TABLE_NAME,
      SUM(BYTES) BYTES,
      MAX(AVG_ROW_LEN) AVG_ROW_LEN,
      MAX(NUM_ROWS) NUM_ROWS,
      NUM_RECORDS
    FROM
    ( SELECT
        S.OWNER,
        S.SEGMENT_NAME TABLE_NAME,
        S.BYTES,
        T.AVG_ROW_LEN,
        T.NUM_ROWS,
        BI.NUM_RECORDS
      FROM
        BASIS_INFO BI,
        DBA_TABLES T,
        DBA_SEGMENTS S        
      WHERE
        S.SEGMENT_TYPE LIKE 'TABLE%' AND
        S.OWNER LIKE BI.OWNER AND
        S.SEGMENT_NAME LIKE BI.TABLE_NAME AND
        S.OWNER = T.OWNER AND
        S.SEGMENT_NAME = T.TABLE_NAME AND
        T.COMPRESSION = 'ENABLED'
      UNION ALL
      ( SELECT
          L.OWNER,
          L.TABLE_NAME,
          S.BYTES,
          NULL AVG_ROW_LEN,
          NULL NUM_ROWS,
          BI.NUM_RECORDS
        FROM
          BASIS_INFO BI,
          DBA_LOBS L,
          DBA_SEGMENTS S
        WHERE
          L.OWNER LIKE BI.OWNER AND
          L.TABLE_NAME LIKE BI.TABLE_NAME AND
          S.OWNER = L.OWNER AND
          S.SEGMENT_NAME = L.SEGMENT_NAME 
      )
    ) T
    WHERE
      NOT EXISTS
      ( SELECT
          1
        FROM
          EXCLUDED_TABLES ET
        WHERE
          ET.OWNER = T.OWNER AND
          ET.TABLE_NAME = T.TABLE_NAME
      )
    GROUP BY
      OWNER,
      TABLE_NAME,
      NUM_RECORDS
    ORDER BY
      3 DESC
  )
  WHERE
    NUM_ROWS IS NOT NULL AND
    ROWNUM <= NUM_RECORDS
)
SELECT
  OWNER,
  TABLE_NAME,
  TO_CHAR(NOCOMP_SIZE_MB, 9999999990.99) NOCOMP_SIZE_MB,
  TO_CHAR(COMP_SIZE_MB, 99999990.99) COMP_SIZE_MB,
  TO_CHAR(NOCOMP_SIZE_MB - COMP_SIZE_MB, 999999990.99) SAVED_SIZE_MB,
  TO_CHAR(COMP_SIZE_MB / NOCOMP_SIZE_MB * 100, 999999990.99) COMP_RATE_PCT
FROM
( SELECT
    LT.OWNER,
    LT.TABLE_NAME,
    ( LT.NUM_ROWS + DECODE(BI.INCLUDE_TAB_MODIFICATIONS, 'X', NVL(TM.INSERTS, 0) - NVL(TM.DELETES, 0), 0) ) * 
      LT.AVG_ROW_LEN * 100 / BI.BLOCK_FILL_LEVEL_PCT / 1024 / 1024 NOCOMP_SIZE_MB,
    LT.BYTES / 1024 / 1024 COMP_SIZE_MB
  FROM
    BASIS_INFO BI,
    LARGEST_TABLES LT,
    DBA_TAB_MODIFICATIONS TM
  WHERE
    LT.OWNER = TM.TABLE_OWNER (+) AND
    LT.TABLE_NAME = TM.TABLE_NAME (+)
)
ORDER BY
  NOCOMP_SIZE_MB DESC
));

  
