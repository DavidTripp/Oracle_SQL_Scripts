SELECT NULL BEGIN_TIME, NULL INST, NULL PARAMETER_NAME, NULL VALUE, NULL IS_DEFAULT,
  NULL VALUE_BEFORE, NULL WAS_DEFAULT FROM DUAL WHERE 1 = 0
UNION ALL (
SELECT NULL BEGIN_TIME, NULL INST, NULL PARAMETER_NAME, NULL VALUE, NULL IS_DEFAULT,
  NULL VALUE_BEFORE, NULL WAS_DEFAULT FROM DUAL WHERE 1 = 0
) UNION ALL ( SELECT * FROM (
WITH BASIS_INFO AS
( SELECT /*+ MATERIALIZE */
    DECODE(DBID, -1, OWN_DBID, DBID) DBID,
    DECODE(INSTANCE_NUMBER, -1, USERENV('INSTANCE'), INSTANCE_NUMBER) INSTANCE_NUMBER,
    BEGIN_DATE,
    END_DATE,
    TO_TIMESTAMP(TO_CHAR(BEGIN_DATE, 'dd.mm.yyyy hh24:mi:ss'), 
      'dd.mm.yyyy hh24:mi:ss') BEGIN_TIME,
    TO_TIMESTAMP(TO_CHAR(END_DATE, 'dd.mm.yyyy hh24:mi:ss'), 
      'dd.mm.yyyy hh24:mi:ss') END_TIME,
    PARAMETER_NAME
  FROM
  ( SELECT
      -1 DBID,
      -1 INSTANCE_NUMBER,
      TO_DATE('01.01.1000 00:05:00', 'dd.mm.yyyy hh24:mi:ss') BEGIN_DATE,
      TO_DATE('31.12.9999 23:05:00', 'dd.mm.yyyy hh24:mi:ss') END_DATE,
      '%' PARAMETER_NAME
    FROM 
      DUAL
  ),
  ( SELECT DBID OWN_DBID FROM V$DATABASE )
),
SNAPSHOTS AS
( SELECT
    BI.DBID,
    BI.INSTANCE_NUMBER,
    SNAP_ID,
    ROW_NUMBER () OVER (PARTITION BY HSS.DBID, HSS.INSTANCE_NUMBER ORDER BY HSS.SNAP_ID) INT_SNAP_ID,
    BEGIN_INTERVAL_TIME
  FROM
    BASIS_INFO BI,
    DBA_HIST_SNAPSHOT HSS
  WHERE
    HSS.INSTANCE_NUMBER = BI.INSTANCE_NUMBER AND
    HSS.BEGIN_INTERVAL_TIME >= BI.BEGIN_TIME AND
    HSS.END_INTERVAL_TIME <= BI.END_TIME
),
PARAMETERS AS
( SELECT
    HP.DBID,
    HP.INSTANCE_NUMBER,
    HP.SNAP_ID,
    HP.PARAMETER_NAME,
    HP.ISDEFAULT,
    HP.VALUE,
    SS.INT_SNAP_ID         /* Gaps in normal SNAP_ID possible, so INT_SNAP_ID with consecutive numbers required */
  FROM
    SNAPSHOTS SS,
    DBA_HIST_PARAMETER HP
  WHERE
    SS.DBID = HP.DBID AND
    SS.INSTANCE_NUMBER = HP.INSTANCE_NUMBER AND
    SS.SNAP_ID = HP.SNAP_ID
),
PARAMETER_CHANGES AS
( SELECT
    NVL(HP2.DBID, HP1.DBID) DBID,
    NVL(HP2.INSTANCE_NUMBER, HP1.INSTANCE_NUMBER) INSTANCE_NUMBER,
    NVL(HP1.SNAP_ID, HP2.SNAP_ID - 1) SNAP_ID_1,
    NVL(HP2.SNAP_ID, HP1.SNAP_ID + 1) SNAP_ID_2,
    NVL(HP1.PARAMETER_NAME, HP2.PARAMETER_NAME) PARAMETER_NAME,
    NVL(HP1.ISDEFAULT, 'YES') IS_DEFAULT_1,
    NVL(HP2.ISDEFAULT, 'YES') IS_DEFAULT_2,
    HP1.VALUE VALUE_1,
    HP2.VALUE VALUE_2
  FROM
    PARAMETERS HP1 FULL OUTER JOIN
    PARAMETERS HP2 ON
      HP1.DBID = HP2.DBID AND
      HP1.INSTANCE_NUMBER = HP2.INSTANCE_NUMBER AND
      HP1.INT_SNAP_ID = HP2.INT_SNAP_ID - 1 AND
      HP1.PARAMETER_NAME = HP2.PARAMETER_NAME 
  WHERE
    ( HP1.PARAMETER_NAME IS NULL OR
      HP2.PARAMETER_NAME IS NULL OR
      HP1.VALUE != HP2.VALUE
    )
)
SELECT
  DECODE(R.ID, 1, TO_CHAR(BEGIN_TIME, 'YYYY-MM-DD HH24:MI:SS'), ' ') BEGIN_TIME,
  DECODE(R.ID, 1, TO_CHAR(INSTANCE_NUMBER, 990), ' ') INST,
  DECODE(R.ID, 1, PARAMETER_NAME, ' ') PARAMETER_NAME,
  SUBSTR(VALUE, 1 + 59 * (R.ID - 1), 59) VALUE,
  DECODE(R.ID, 1, IS_DEFAULT, ' ') IS_DEFAULT,
  SUBSTR(VALUE_BEFORE, 1 + 59 * (R.ID - 1), 59) VALUE_BEFORE,
  DECODE(R.ID, 1, WAS_DEFAULT, ' ') WAS_DEFAULT
FROM
( SELECT ROWNUM ID FROM V$SESSTAT WHERE ROWNUM <= 20 ) R,
( SELECT
    S2.BEGIN_INTERVAL_TIME BEGIN_TIME,
    BI.INSTANCE_NUMBER,
    P.PARAMETER_NAME,
    P.VALUE_2 VALUE,
    P.IS_DEFAULT_2 IS_DEFAULT,
    P.VALUE_1 VALUE_BEFORE,
    P.IS_DEFAULT_1 WAS_DEFAULT
  FROM
    BASIS_INFO BI,
    SNAPSHOTS S1,
    SNAPSHOTS S2,
    PARAMETER_CHANGES P
  WHERE
    BI.DBID = S1.DBID AND
    BI.DBID = S2.DBID AND
    BI.DBID = P.DBID AND
    BI.INSTANCE_NUMBER = S1.INSTANCE_NUMBER AND
    BI.INSTANCE_NUMBER = S2.INSTANCE_NUMBER AND
    BI.INSTANCE_NUMBER = P.INSTANCE_NUMBER AND
    P.PARAMETER_NAME LIKE BI.PARAMETER_NAME AND
    P.SNAP_ID_1 = S1.SNAP_ID AND
    P.SNAP_ID_2 = S2.SNAP_ID 
) P
WHERE
  R.ID <= TRUNC(LENGTH(P.VALUE) - 1) / 59 + 1 OR
  R.ID <= TRUNC(LENGTH(P.VALUE_BEFORE) - 1) / 59 + 1 OR
  R.ID <= 1
ORDER BY
  P.BEGIN_TIME DESC,
  P.PARAMETER_NAME,
  R.ID
));
