SELECT NULL BEGIN_TIME, NULL SYSSTAT, NULL TIMEMOD, NULL OS_USER, NULL OS_SYS, 
  NULL OS_IDLE, NULL OS_IO, NULL OS_TOTAL FROM DUAL WHERE 1 = 0
UNION ALL (
SELECT NULL BEGIN_TIME, NULL SYSSTAT, NULL TIMEMOD, NULL OS_USER, NULL OS_SYS, 
  NULL OS_IDLE, NULL OS_IO, NULL OS_TOTAL FROM DUAL WHERE 1 = 0
) UNION ALL ( SELECT * FROM (
WITH BASIS_INFO AS
( SELECT /*+ MATERIALIZE */
    DECODE(DBID, -1, OWN_DBID, DBID) DBID,
    DECODE(INSTANCE_NUMBER, -1, USERENV('INSTANCE'),
      INSTANCE_NUMBER) INSTANCE_NUMBER,
    BEGIN_DATE,
    END_DATE,
    BEGIN_SNAP_ID,
    END_SNAP_ID,
    TO_TIMESTAMP(TO_CHAR(BEGIN_DATE, 'dd.mm.yyyy hh24:mi:ss'), 
      'dd.mm.yyyy hh24:mi:ss') BEGIN_TIME,
    TO_TIMESTAMP(TO_CHAR(END_DATE, 'dd.mm.yyyy hh24:mi:ss'), 
      'dd.mm.yyyy hh24:mi:ss') END_TIME,
    AGGREGATE_BY,
    EXCLUDE_WEEKENDS
  FROM
  ( SELECT
      -1 DBID,
      -1 INSTANCE_NUMBER,
      TO_DATE('01.01.1000 23:55:00', 'dd.mm.yyyy hh24:mi:ss') BEGIN_DATE,
      TO_DATE('31.12.9999 23:05:00', 'dd.mm.yyyy hh24:mi:ss') END_DATE,
      -1 BEGIN_SNAP_ID,
      -1 END_SNAP_ID,
      'SNAPSHOT' AGGREGATE_BY,  /* SNAPSHOT, DAY, HOUR_OF_DAY */
      ' ' EXCLUDE_WEEKENDS
    FROM
      DUAL
  ),
  ( SELECT DBID OWN_DBID FROM V$DATABASE )
),
SNAPSHOTS AS
( SELECT
    HSS2.DBID,
    HSS2.INSTANCE_NUMBER,
    HSS2.SNAP_ID,
    FIRST_VALUE(HSS2.SNAP_ID) OVER (ORDER BY HSS2.SNAP_ID) MIN_SNAP_ID,
    HSS2.BEGIN_INTERVAL_TIME,
    HSS2.END_INTERVAL_TIME,
    TO_CHAR(HSS2.END_INTERVAL_TIME, 'SSSSS') -
      TO_CHAR(HSS2.BEGIN_INTERVAL_TIME, 'SSSSS') +
      86400 * (TO_CHAR(HSS2.END_INTERVAL_TIME, 'J') - 
               TO_CHAR(HSS2.BEGIN_INTERVAL_TIME, 'J'))
      INTERVAL_SECONDS,
    DECODE(HSS2.STARTUP_TIME, HSS1.STARTUP_TIME, 'NO', 'YES') RESTART
  FROM 
    BASIS_INFO BI,
    DBA_HIST_SNAPSHOT HSS1, 
    DBA_HIST_SNAPSHOT HSS2
  WHERE
    BI.DBID = HSS1.DBID AND
    BI.DBID = HSS2.DBID AND
    BI.INSTANCE_NUMBER = HSS1.INSTANCE_NUMBER AND
    HSS1.INSTANCE_NUMBER = HSS2.INSTANCE_NUMBER AND
    HSS2.END_INTERVAL_TIME BETWEEN BI.BEGIN_TIME AND BI.END_TIME AND
    HSS1.SNAP_ID = HSS2.SNAP_ID - 1 AND
    ( BI.BEGIN_SNAP_ID = -1 OR
      HSS2.SNAP_ID >= BI.BEGIN_SNAP_ID ) AND 
    ( BI.END_SNAP_ID = -1 OR
      HSS2.SNAP_ID <= BI.END_SNAP_ID )
)
SELECT
  'BEGIN TIME:' BEGIN_TIME,
  TO_CHAR(MIN(BEGIN_INTERVAL_TIME), 'dd.mm.yyyy') SYSSTAT,
  TO_CHAR(MIN(BEGIN_INTERVAL_TIME), 'hh24:mi:ss') TIMEMOD,
  NULL OS_USER,
  NULL OS_SYS,
  NULL OS_IDLE,
  NULL OS_IO,
  NULL OS_TOTAL
FROM
  SNAPSHOTS
WHERE
  SNAP_ID != MIN_SNAP_ID
UNION ALL
( SELECT
    'END TIME:' BEGIN_TIME,
    TO_CHAR(MAX(END_INTERVAL_TIME), 'dd.mm.yyyy') SYSSTAT,
    TO_CHAR(MAX(END_INTERVAL_TIME), 'hh24:mi:ss') TIMEMOD,
    NULL OS_USER,
    NULL OS_SYS,
    NULL OS_IDLE,
    NULL OS_IO,
    NULL OS_TOTAL
  FROM
    SNAPSHOTS
)
UNION ALL
( SELECT
    'AGGREGATED BY:' BEGIN_TIME,
    AGGREGATE_BY SYSSTAT,
    NULL TIMEMOD,
    NULL OS_USER,
    NULL OS_SYS,
    NULL OS_IDLE,
    NULL OS_IO,
    NULL OS_TOTAL
  FROM
    BASIS_INFO
)
UNION ALL
( SELECT
    'WEEKENDS EXCLUDED:' BEGIN_TIME,
    DECODE(EXCLUDE_WEEKENDS, 'X', 'YES', 'NO') SYSSTAT,
    NULL TIMEMOD,
    NULL OS_USER,
    NULL OS_SYS,
    NULL OS_IDLE,
    NULL OS_IO,
    NULL OS_TOTAL
  FROM
    BASIS_INFO
)
UNION ALL
( SELECT
    NULL BEGIN_TIME,
    NULL SYSSTAT,
    NULL TIMEMOD,
    NULL OS_USER,
    NULL OS_SYS,
    NULL OS_IDLE,
    NULL OS_IO,
    NULL OS_TOTAL
  FROM
    DUAL
)
UNION ALL
( SELECT
    *
  FROM
  ( SELECT
      BEGIN_TIME,
      TO_CHAR(SUM(SYSSTAT_S) / SUM(INTERVAL_SECONDS), 999990.99) SYSSTAT,
      TO_CHAR(SUM(TIMEMOD_S) / SUM(INTERVAL_SECONDS), 9990.99) TIMEMOD,
      TO_CHAR(SUM(OSSTAT_USER_S) / SUM(INTERVAL_SECONDS), 990.99) OS_USER,
      TO_CHAR(SUM(OSSTAT_SYS_S) / SUM(INTERVAL_SECONDS), 990.99) OS_SYS,
      TO_CHAR(SUM(OSSTAT_IDLE_S) / SUM(INTERVAL_SECONDS), 990.99) OS_IDLE,
      TO_CHAR(SUM(OSSTAT_IO_S) / SUM(INTERVAL_SECONDS), 990.99) OS_IO,
      TO_CHAR(SUM(OSSTAT_TOTAL_S) / SUM(INTERVAL_SECONDS), 9990.99) OS_TOTAL
    FROM
    ( SELECT
        DECODE(BI.AGGREGATE_BY,
          'SNAPSHOT', TO_CHAR(BEGIN_INTERVAL_TIME, 'YYYY-MM-DD HH24:MI:SS'),
          'DAY', TO_CHAR(BEGIN_INTERVAL_TIME, 'YYYY-MM-DD (DY)'),
          'HOUR_OF_DAY', TO_CHAR(BEGIN_INTERVAL_TIME, 'HH24') || ':00') BEGIN_TIME,
        INTERVAL_SECONDS,
        SYSSTAT_S,
        TIMEMOD_S,
        OSSTAT_USER_S,
        OSSTAT_SYS_S,
        OSSTAT_IDLE_S,
        OSSTAT_IO_S,
        OSSTAT_TOTAL_S
      FROM 
        BASIS_INFO BI,
      ( SELECT
          SNAP_ID,
          BEGIN_INTERVAL_TIME,
          INTERVAL_SECONDS,
          DECODE(RESTART, 'YES', SYSSTAT_ABS_S, SYSSTAT_ABS_S - 
            LAG(SYSSTAT_ABS_S, 1) OVER (ORDER BY SNAP_ID)) SYSSTAT_S,
          DECODE(RESTART, 'YES', TIMEMOD_ABS_S, TIMEMOD_ABS_S - 
            LAG(TIMEMOD_ABS_S, 1) OVER (ORDER BY SNAP_ID)) TIMEMOD_S,
          DECODE(RESTART, 'YES', OSSTAT_ABS_TOTAL_S, OSSTAT_ABS_TOTAL_S - 
            LAG(OSSTAT_ABS_TOTAL_S, 1) OVER (ORDER BY SNAP_ID)) OSSTAT_TOTAL_S,
          DECODE(RESTART, 'YES', OSSTAT_ABS_IDLE_S, OSSTAT_ABS_IDLE_S - 
            LAG(OSSTAT_ABS_IDLE_S, 1) OVER (ORDER BY SNAP_ID)) OSSTAT_IDLE_S,
          DECODE(RESTART, 'YES', OSSTAT_ABS_USER_S, OSSTAT_ABS_USER_S - 
            LAG(OSSTAT_ABS_USER_S, 1) OVER (ORDER BY SNAP_ID)) OSSTAT_USER_S,
          DECODE(RESTART, 'YES', OSSTAT_ABS_SYS_S, OSSTAT_ABS_SYS_S - 
            LAG(OSSTAT_ABS_SYS_S, 1) OVER (ORDER BY SNAP_ID)) OSSTAT_SYS_S,
          DECODE(RESTART, 'YES', OSSTAT_ABS_IO_S, OSSTAT_ABS_IO_S - 
            LAG(OSSTAT_ABS_IO_S, 1) OVER (ORDER BY SNAP_ID)) OSSTAT_IO_S
        FROM
        ( SELECT
            HSS.SNAP_ID SNAP_ID,
            HSS.BEGIN_INTERVAL_TIME BEGIN_INTERVAL_TIME,
            HSS.INTERVAL_SECONDS INTERVAL_SECONDS,
            HSS.RESTART RESTART,
            ROUND(HSY.VALUE / 100) SYSSTAT_ABS_S,
            ROUND(HST.VALUE / 1000000) TIMEMOD_ABS_S,
            ROUND(SUM(DECODE(HOS.STAT_NAME, 'IDLE_TIME', HOS.VALUE, 'USER_TIME', HOS.VALUE,
              'SYS_TIME', HOS.VALUE, 0)) / 100) OSSTAT_ABS_TOTAL_S,
            ROUND(SUM(DECODE(HOS.STAT_NAME, 'IDLE_TIME', HOS.VALUE, 0)) / 100 -
                  SUM(DECODE(HOS.STAT_NAME, 'IOWAIT_TIME', HOS.VALUE, 0)) / 100) OSSTAT_ABS_IDLE_S,
            ROUND(SUM(DECODE(HOS.STAT_NAME, 'USER_TIME', HOS.VALUE, 0)) / 100) OSSTAT_ABS_USER_S,
            ROUND(SUM(DECODE(HOS.STAT_NAME, 'SYS_TIME', HOS.VALUE, 0)) / 100) OSSTAT_ABS_SYS_S,
            ROUND(SUM(DECODE(HOS.STAT_NAME, 'IOWAIT_TIME', HOS.VALUE, 0)) / 100) OSSTAT_ABS_IO_S
          FROM
            BASIS_INFO BI,
            DBA_HIST_OSSTAT HOS,
            DBA_HIST_SYSSTAT HSY,
            DBA_HIST_SYS_TIME_MODEL HST,
            SNAPSHOTS HSS
          WHERE
            BI.DBID = HOS.DBID AND
            BI.DBID = HSY.DBID AND
            BI.DBID = HST.DBID AND
            BI.DBID = HSS.DBID AND
            HOS.INSTANCE_NUMBER = BI.INSTANCE_NUMBER AND
            HSY.INSTANCE_NUMBER = HOS.INSTANCE_NUMBER AND
            HST.INSTANCE_NUMBER = HOS.INSTANCE_NUMBER AND
            HSS.INSTANCE_NUMBER = HOS.INSTANCE_NUMBER AND
            HOS.SNAP_ID = HSS.SNAP_ID AND
            HSY.SNAP_ID = HSS.SNAP_ID AND
            HST.SNAP_ID = HSS.SNAP_ID AND
            HSY.STAT_NAME = 'CPU used by this session' AND
            HST.STAT_NAME = 'DB CPU'
          GROUP BY
            HSS.SNAP_ID,
            HSS.BEGIN_INTERVAL_TIME,
            HSS.INTERVAL_SECONDS,
            HSS.RESTART,
            HSY.VALUE,
            HST.VALUE
        )
      ) 
      WHERE
        ( BI.EXCLUDE_WEEKENDS = ' ' OR 
          TO_CHAR(BEGIN_INTERVAL_TIME, 'D') NOT IN (7, 1) ) AND
        SYSSTAT_S IS NOT NULL 
    )
    GROUP BY
      BEGIN_TIME
    ORDER BY
      BEGIN_TIME DESC 
  )
)
));

