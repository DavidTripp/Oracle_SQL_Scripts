SELECT NULL OWNER, NULL TRIGGER_NAME, NULL TRIGGER_TYPE, NULL TRIGGERING_EVENT,
  NULL TABLE_OWNER, NULL TABLE_NAME FROM DUAL WHERE 1 = 0
UNION ALL (
SELECT NULL OWNER, NULL TRIGGER_NAME, NULL TRIGGER_TYPE, NULL TRIGGERING_EVENT,
  NULL TABLE_OWNER, NULL TABLE_NAME FROM DUAL WHERE 1 = 0
) UNION ALL ( SELECT * FROM (
WITH BASIS_INFO AS
( SELECT
    '%' OWNER,
    '%' TABLE_OWNER,
    'X' EXCLUDE_DEFAULT_TRIGGERS,
    'X' EXCLUDE_HANA_TRIGGERS
  FROM
    DUAL
)
SELECT
  DT.OWNER,
  DT.TRIGGER_NAME,
  DT.TRIGGER_TYPE,
  DT.TRIGGERING_EVENT,
  DT.TABLE_OWNER,
  DT.TABLE_NAME
FROM
  BASIS_INFO BI,
  DBA_TRIGGERS DT
WHERE
  DT.OWNER LIKE BI.OWNER AND
  ( DT.TABLE_OWNER IS NULL AND BI.TABLE_OWNER = '%' OR
    DT.TABLE_OWNER LIKE BI.TABLE_OWNER ) AND
  ( BI.EXCLUDE_DEFAULT_TRIGGERS = ' ' OR
    DT.TRIGGER_NAME NOT IN 
    ( 'AW_DROP_TRG',
      'AW_REN_TRG',
      'AW_TRUNC_TRG', 
      'DEF$_PROPAGATOR_TRIG', 
      'LOGMNRGGC_TRIGGER',
      'NO_VM_DDL',
      'NO_VM_DROP_A',
      'REPCATLOGTRIG'
    )
  ) AND
  ( BI.EXCLUDE_HANA_TRIGGERS = ' ' OR
    ( SUBSTR(DT.TRIGGER_NAME, 1, 8) != '/1CADMC/' AND
      SUBSTR(DT.TRIGGER_NAME, 1, 5) != '/1LT/'
    )
  )
));
