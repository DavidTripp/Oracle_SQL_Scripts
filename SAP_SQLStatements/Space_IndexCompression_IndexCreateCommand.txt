SELECT NULL COMMAND, NULL TABLE_NAME, NULL NEW_INDEX_NAME, NULL INDEX_COLUMN, NULL OPT_PREFIX, NULL NOCOMP_MB, NULL OPT_COMP_MB,
  NULL SAVING_MB, NULL SAVING_PCT FROM DUAL WHERE 1 = 0 
UNION ALL (
SELECT NULL COMMAND, NULL TABLE_NAME, NULL NEW_INDEX_NAME, NULL INDEX_COLUMN, NULL OPT_PREFIX, NULL NOCOMP_MB, NULL OPT_COMP_MB,
  NULL SAVING_MB, NULL SAVING_PCT FROM DUAL WHERE 1 = 0 
) UNION ALL ( SELECT * FROM (
WITH COLUMN_SELECT AS
(	
	SELECT	1  COLUMN_POSITION, 'MANDT' COLUMN_NAME FROM DUAL UNION ALL
	SELECT	2  COLUMN_POSITION, 'WERKS' COLUMN_NAME FROM DUAL UNION ALL
	SELECT	3  COLUMN_POSITION, 'ERROR' COLUMN_NAME FROM DUAL UNION ALL
	SELECT	4  COLUMN_POSITION, 'AUFNR' COLUMN_NAME FROM DUAL UNION ALL
	SELECT	5  COLUMN_POSITION, 'CHARG' COLUMN_NAME FROM DUAL UNION ALL
	SELECT	6  COLUMN_POSITION, '' COLUMN_NAME FROM DUAL UNION ALL
	SELECT	7  COLUMN_POSITION, '' COLUMN_NAME FROM DUAL UNION ALL
	SELECT	8  COLUMN_POSITION, '' COLUMN_NAME FROM DUAL UNION ALL
	SELECT	9  COLUMN_POSITION, '' COLUMN_NAME FROM DUAL UNION ALL
	SELECT	10 COLUMN_POSITION, '' COLUMN_NAME FROM DUAL UNION ALL
	SELECT	11 COLUMN_POSITION, '' COLUMN_NAME FROM DUAL UNION ALL
	SELECT	12 COLUMN_POSITION, '' COLUMN_NAME FROM DUAL UNION ALL
	SELECT	13 COLUMN_POSITION, '' COLUMN_NAME FROM DUAL UNION ALL
	SELECT	14 COLUMN_POSITION, '' COLUMN_NAME FROM DUAL UNION ALL
	SELECT	15 COLUMN_POSITION, '' COLUMN_NAME FROM DUAL UNION ALL
	SELECT	16 COLUMN_POSITION, '' COLUMN_NAME FROM DUAL 
),
BASIS_INFO AS
( SELECT 
    USER OWNER,
    'ZTPSE_YUS_MESLOG' TABLE_NAME,
	'ZTPSE_YUS_MESLOG~ZM1' NEW_INDEX_NAME,
	'8' PARALLEL_SETTING
  FROM
    DUAL
),
INDEX_INFO AS
(	SELECT 
		UNIQUE DI.TABLESPACE_NAME
	FROM
		DBA_INDEXES DI,
		BASIS_INFO BI
	WHERE
		DI.TABLE_NAME = BI.TABLE_NAME AND
		DI.UNIQUENESS = 'UNIQUE'
),
COLUMN_SELECT_ROW AS
(
	SELECT 	
		'"' || LISTAGG(CS.COLUMN_NAME,'","') WITHIN GROUP (ORDER BY COLUMN_POSITION) || '"' INDEX_COLUMN
	FROM
		COLUMN_SELECT CS
),
COLUMN_HELPER AS
(
	SELECT 
		NUM_ROWS,
		L1+L2+L3+L4+L5+L6+L7+L8+L9+L10+L11+L12+L13+L14+L15+L16 IND_ROW_LEN,
		(L1+L2+L3+L4+L5+L6+L7+L8+L9+L10+L11+L12+L13+L14+L15+L16) * NUM_ROWS DATA_BYTE,
		L1 L1,
		(L1+L2) L2,
		(L1+L2+L3) L3,
		(L1+L2+L3+L4) L4,
		(L1+L2+L3+L4+L5) L5,
		(L1+L2+L3+L4+L5+L6) L6,
		(L1+L2+L3+L4+L5+L6+L7) L7,
		(L1+L2+L3+L4+L5+L6+L7+L8) L8,
		(L1+L2+L3+L4+L5+L6+L7+L8+L9) L9,
		(L1+L2+L3+L4+L5+L6+L7+L8+L9+L10) L10,
		(L1+L2+L3+L4+L5+L6+L7+L8+L9+L10+L11) L11,
		(L1+L2+L3+L4+L5+L6+L7+L8+L9+L10+L11+L12) L12,
		(L1+L2+L3+L4+L5+L6+L7+L8+L9+L10+L11+L12+L13) L13,
		(L1+L2+L3+L4+L5+L6+L7+L8+L9+L10+L11+L12+L13+L14) L14,
		(L1+L2+L3+L4+L5+L6+L7+L8+L9+L10+L11+L12+L13+L14+L15) L15,
		(L1+L2+L3+L4+L5+L6+L7+L8+L9+L10+L11+L12+L13+L14+L15+L16) L16,
        D1 DMAX1,
		D1*D2 DMAX2,
		D1*D2*D3 DMAX3,
		D1*D2*D3*D4 DMAX4,
		D1*D2*D3*D4*D5 DMAX5,
        D1*D2*D3*D4*D5*D6 DMAX6,
		D1*D2*D3*D4*D5*D6*D7 DMAX7,
		D1*D2*D3*D4*D5*D6*D7*D8 DMAX8,
		D1*D2*D3*D4*D5*D6*D7*D8*D9 DMAX9,
		D1*D2*D3*D4*D5*D6*D7*D8*D9*D10 DMAX10,
		D1*D2*D3*D4*D5*D6*D7*D8*D9*D10*D11 DMAX11,
		D1*D2*D3*D4*D5*D6*D7*D8*D9*D10*D11*D12 DMAX12,
		D1*D2*D3*D4*D5*D6*D7*D8*D9*D10*D11*D12*D13 DMAX13,
		D1*D2*D3*D4*D5*D6*D7*D8*D9*D10*D11*D12*D13*D14 DMAX14,
		D1*D2*D3*D4*D5*D6*D7*D8*D9*D10*D11*D12*D13*D14*D15 DMAX15,
		D1*D2*D3*D4*D5*D6*D7*D8*D9*D10*D11*D12*D13*D14*D15*D16 DMAX16
	FROM
	(
	SELECT
		DT.NUM_ROWS,
		CS.COLUMN_POSITION,
		TC.AVG_COL_LEN L1,
		NVL(LEAD(TC.AVG_COL_LEN, 1)  OVER (ORDER BY CS.COLUMN_POSITION), 0) L2,
		NVL(LEAD(TC.AVG_COL_LEN, 2)  OVER (ORDER BY CS.COLUMN_POSITION), 0) L3,
		NVL(LEAD(TC.AVG_COL_LEN, 3)  OVER (ORDER BY CS.COLUMN_POSITION), 0) L4,
		NVL(LEAD(TC.AVG_COL_LEN, 4)  OVER (ORDER BY CS.COLUMN_POSITION), 0) L5,
		NVL(LEAD(TC.AVG_COL_LEN, 5)  OVER (ORDER BY CS.COLUMN_POSITION), 0) L6,
		NVL(LEAD(TC.AVG_COL_LEN, 6)  OVER (ORDER BY CS.COLUMN_POSITION), 0) L7,
		NVL(LEAD(TC.AVG_COL_LEN, 7)  OVER (ORDER BY CS.COLUMN_POSITION), 0) L8,
		NVL(LEAD(TC.AVG_COL_LEN, 8)  OVER (ORDER BY CS.COLUMN_POSITION), 0) L9,
		NVL(LEAD(TC.AVG_COL_LEN, 9)  OVER (ORDER BY CS.COLUMN_POSITION), 0) L10,
		NVL(LEAD(TC.AVG_COL_LEN, 10) OVER (ORDER BY CS.COLUMN_POSITION), 0) L11,
		NVL(LEAD(TC.AVG_COL_LEN, 11) OVER (ORDER BY CS.COLUMN_POSITION), 0) L12,
		NVL(LEAD(TC.AVG_COL_LEN, 12) OVER (ORDER BY CS.COLUMN_POSITION), 0) L13,
		NVL(LEAD(TC.AVG_COL_LEN, 13) OVER (ORDER BY CS.COLUMN_POSITION), 0) L14,
		NVL(LEAD(TC.AVG_COL_LEN, 14) OVER (ORDER BY CS.COLUMN_POSITION), 0) L15,
		NVL(LEAD(TC.AVG_COL_LEN, 15) OVER (ORDER BY CS.COLUMN_POSITION), 0) L16,
		TC.NUM_DISTINCT D1,
		NVL(LEAD(TC.NUM_DISTINCT, 1)  OVER (ORDER BY CS.COLUMN_POSITION), 1) D2,
		NVL(LEAD(TC.NUM_DISTINCT, 2)  OVER (ORDER BY CS.COLUMN_POSITION), 1) D3,
		NVL(LEAD(TC.NUM_DISTINCT, 3)  OVER (ORDER BY CS.COLUMN_POSITION), 1) D4,
		NVL(LEAD(TC.NUM_DISTINCT, 4)  OVER (ORDER BY CS.COLUMN_POSITION), 1) D5,
		NVL(LEAD(TC.NUM_DISTINCT, 5)  OVER (ORDER BY CS.COLUMN_POSITION), 1) D6,
		NVL(LEAD(TC.NUM_DISTINCT, 6)  OVER (ORDER BY CS.COLUMN_POSITION), 1) D7,
		NVL(LEAD(TC.NUM_DISTINCT, 7)  OVER (ORDER BY CS.COLUMN_POSITION), 1) D8,
		NVL(LEAD(TC.NUM_DISTINCT, 8)  OVER (ORDER BY CS.COLUMN_POSITION), 1) D9,
		NVL(LEAD(TC.NUM_DISTINCT, 9)  OVER (ORDER BY CS.COLUMN_POSITION), 1) D10,
		NVL(LEAD(TC.NUM_DISTINCT, 10) OVER (ORDER BY CS.COLUMN_POSITION), 1) D11,
		NVL(LEAD(TC.NUM_DISTINCT, 11) OVER (ORDER BY CS.COLUMN_POSITION), 1) D12,
		NVL(LEAD(TC.NUM_DISTINCT, 12) OVER (ORDER BY CS.COLUMN_POSITION), 1) D13,
		NVL(LEAD(TC.NUM_DISTINCT, 13) OVER (ORDER BY CS.COLUMN_POSITION), 1) D14,
		NVL(LEAD(TC.NUM_DISTINCT, 14) OVER (ORDER BY CS.COLUMN_POSITION), 1) D15,
		NVL(LEAD(TC.NUM_DISTINCT, 15) OVER (ORDER BY CS.COLUMN_POSITION), 1) D16
	FROM	
		DBA_TAB_COLS TC,
		COLUMN_SELECT CS,
		BASIS_INFO BI,
		DBA_TABLES DT
	WHERE
		TC.COLUMN_NAME = CS.COLUMN_NAME AND
		TC.TABLE_NAME = BI.TABLE_NAME AND
		TC.OWNER LIKE BI.OWNER AND
		DT.TABLE_NAME = BI.TABLE_NAME AND
		DT.OWNER LIKE BI.OWNER
	)
	WHERE COLUMN_POSITION = 1
)
SELECT
	'CREATE INDEX "' || OWNER || '"."' || NEW_INDEX_NAME || 
	'" ON "'|| OWNER || '"."' || TABLE_NAME ||
	'" (' || CSR.INDEX_COLUMN || ')' ||
	' ONLINE' ||
	' COMPRESS ' || OPT_PREFIX ||
	' PCTFREE 1' ||
	' PARALLEL ' || BI.PARALLEL_SETTING ||
	' TABLESPACE ' || II.TABLESPACE_NAME ||
	' NOLOGGING' ||
	';' COMMAND,
	BI.TABLE_NAME,
	BI.NEW_INDEX_NAME,
	CSR.INDEX_COLUMN,
	TO_CHAR(OPT_PREFIX,'90') OPT_PREFIX,
	TO_CHAR(NOCOMP_MB,'99999990.99') NOCOMP_MB,
	TO_CHAR(OPT_COMP_MB, '99999990.99') OPT_COMP_MB,
    TO_CHAR((NOCOMP_MB - OPT_COMP_MB),'99999990.99') SAVING_MB,
    TO_CHAR(DECODE(NOCOMP_MB, 0, 0, 100 - OPT_COMP_MB / NOCOMP_MB * 100),'990.99') "SAVING_PCT"	
FROM
	(	SELECT
			NOCOMP_MB,
			LEAST(MAX_MB_1, NVL(MAX_MB_2, 999999999), NVL(MAX_MB_3, 999999999), 
				  NVL(MAX_MB_4, 999999999), NVL(MAX_MB_5, 999999999), 
				  NVL(MAX_MB_6, 999999999), NVL(MAX_MB_7, 999999999), 
				  NVL(MAX_MB_8, 999999999), 
				  NVL(MAX_MB_9, 999999999), NVL(MAX_MB_10, 999999999), 
				  NVL(MAX_MB_11, 999999999), NVL(MAX_MB_12, 999999999), 
				  NVL(MAX_MB_13, 999999999), NVL(MAX_MB_14, 999999999), 
				  NVL(MAX_MB_15, 999999999), 
				  NVL(MAX_MB_16, 999999999)) OPT_COMP_MB,
			DECODE(LEAST(MAX_MB_1, NVL(MAX_MB_2, 999999999), 
				  NVL(MAX_MB_3, 999999999), 
				  NVL(MAX_MB_4, 999999999), NVL(MAX_MB_5, 999999999), 
				  NVL(MAX_MB_6, 999999999), NVL(MAX_MB_7, 999999999), 
				  NVL(MAX_MB_8, 999999999), 
				  NVL(MAX_MB_9, 999999999), NVL(MAX_MB_10, 999999999), 
				  NVL(MAX_MB_11, 999999999), NVL(MAX_MB_12, 999999999), 
				  NVL(MAX_MB_13, 999999999), NVL(MAX_MB_14, 999999999), 
				  NVL(MAX_MB_15, 999999999), NVL(MAX_MB_16, 999999999)),
				  MAX_MB_1, 1, MAX_MB_2, 2, MAX_MB_3, 3, MAX_MB_4, 4, 
				  MAX_MB_5, 5, MAX_MB_6, 6, MAX_MB_7, 7,
				  MAX_MB_8, 8, MAX_MB_9, 9, MAX_MB_10, 10, 
				  MAX_MB_11, 11, MAX_MB_12, 12, MAX_MB_13, 13,
				  MAX_MB_14, 14, MAX_MB_15, 15, MAX_MB_16, 16) OPT_PREFIX
		FROM
		(
			SELECT 
				DATA_BYTE / 1024 / 1024 NOCOMP_MB,
				((L1 + 2) * DMAX1 + (IND_ROW_LEN - L1) * NUM_ROWS) / 1024 / 1024 MAX_MB_1,
				((L2 + 2) * DMAX2 + (IND_ROW_LEN - L2) * NUM_ROWS) / 1024 / 1024 MAX_MB_2,
				((L3 + 2) * DMAX3 + (IND_ROW_LEN - L3) * NUM_ROWS) / 1024 / 1024 MAX_MB_3,
				((L4 + 2) * DMAX4 + (IND_ROW_LEN - L4) * NUM_ROWS) / 1024 / 1024 MAX_MB_4,
				((L5 + 2) * DMAX5 + (IND_ROW_LEN - L5) * NUM_ROWS) / 1024 / 1024 MAX_MB_5,
				((L6 + 2) * DMAX6 + (IND_ROW_LEN - L6) * NUM_ROWS) / 1024 / 1024 MAX_MB_6,
				((L7 + 2) * DMAX7 + (IND_ROW_LEN - L7) * NUM_ROWS) / 1024 / 1024 MAX_MB_7,
				((L8 + 2) * DMAX8 + (IND_ROW_LEN - L8) * NUM_ROWS) / 1024 / 1024 MAX_MB_8,
				((L9 + 2) * DMAX9 + (IND_ROW_LEN - L9) * NUM_ROWS) / 1024 / 1024 MAX_MB_9,
				((L10 + 2) * DMAX10 + (IND_ROW_LEN - L10) * NUM_ROWS) / 1024 / 1024 MAX_MB_10,
				((L11 + 2) * DMAX11 + (IND_ROW_LEN - L11) * NUM_ROWS) / 1024 / 1024 MAX_MB_11,
				((L12 + 2) * DMAX12 + (IND_ROW_LEN - L12) * NUM_ROWS) / 1024 / 1024 MAX_MB_12,
				((L13 + 2) * DMAX13 + (IND_ROW_LEN - L13) * NUM_ROWS) / 1024 / 1024 MAX_MB_13,
				((L14 + 2) * DMAX14 + (IND_ROW_LEN - L14) * NUM_ROWS) / 1024 / 1024 MAX_MB_14,
				((L15 + 2) * DMAX15 + (IND_ROW_LEN - L15) * NUM_ROWS) / 1024 / 1024 MAX_MB_15,
				((L16 + 2) * DMAX16 + (IND_ROW_LEN - L16) * NUM_ROWS) / 1024 / 1024 MAX_MB_16
			FROM
				COLUMN_HELPER
		)
	) TT,
	BASIS_INFO BI,
	COLUMN_SELECT_ROW CSR,
	INDEX_INFO II
UNION ALL
SELECT 
    'ALTER INDEX "' || OWNER || '"."' || NEW_INDEX_NAME || '" NOPARALLEL LOGGING;' COMMAND,
	NULL TABLE_NAME,
	NULL NEW_INDEX_NAME,
	NULL INDEX_COLUMN,
	NULL OPT_PREFIX,
	NULL NOCOMP_MB,
	NULL OPT_COMP_MB,
	NULL SAVING_MB,
	NULL SAVING_PCT
FROM
	BASIS_INFO BI
));