SELECT 	NULL BEGIN_TIME, NULL SERVICE_NAME, NULL WAIT_CLASS,
		NULL TOTAL_WAITS, NULL TIME_WAITED_S, NULL AVG_WAIT_MS FROM DUAL WHERE 1=0
UNION ALL
(
SELECT 	NULL BEGIN_TIME, NULL SERVICE_NAME, NULL WAIT_CLASS,
		NULL TOTAL_WAITS, NULL TIME_WAITED_S, NULL AVG_WAIT_MS FROM DUAL WHERE 1=0
) 
UNION ALL
SELECT * FROM (
WITH BASIS_INFO AS
( SELECT /*+ MATERIALIZE */
    BEGIN_DATE,
    END_DATE,
    TO_TIMESTAMP(TO_CHAR(BEGIN_DATE, 'dd.mm.yyyy hh24:mi:ss'), 
      'dd.mm.yyyy hh24:mi:ss') BEGIN_TIME,
    TO_TIMESTAMP(TO_CHAR(END_DATE, 'dd.mm.yyyy hh24:mi:ss'), 
      'dd.mm.yyyy hh24:mi:ss') END_TIME,
    DECODE(AGGREGATE_BY,
      'SNAPSHOT',    'YYYY-MM-DD HH24:MI:SS',
      'DAY',         'YYYY-MM-DD (DY)',
      'HOUR_OF_DAY', 'HH24',
      AGGREGATE_BY ) AGGREGATE_BY
  FROM
  ( SELECT
      TO_DATE('20.03.2013 09:07:00', 'dd.mm.yyyy hh24:mi:ss') BEGIN_DATE,
      TO_DATE('31.12.9999 18:05:00', 'dd.mm.yyyy hh24:mi:ss') END_DATE,
      'DAY' AGGREGATE_BY    /* SNAPSHOT, DAY, HOUR_OF_DAY or Oracle time pattern */
    FROM
      DUAL
  )
),
SNAPSHOTS AS
( SELECT /*+ MATERIALIZE */ 
    DBID,
    INSTANCE_NUMBER,
    SNAP_ID,
    PREV_SNAP_ID,
    MIN_SNAP_ID,
    BEGIN_INTERVAL_TIME,
    END_INTERVAL_TIME,
    INTERVAL_SECONDS,
    SUM(INTERVAL_SECONDS) OVER () TOTAL_SECONDS,
    RESTART
  FROM
  ( SELECT
      HSS2.DBID,
      HSS2.INSTANCE_NUMBER,
      HSS2.SNAP_ID,
      HSS1.SNAP_ID PREV_SNAP_ID,
      FIRST_VALUE(HSS2.SNAP_ID) OVER (ORDER BY HSS2.SNAP_ID) MIN_SNAP_ID,
      HSS2.BEGIN_INTERVAL_TIME,
      HSS2.END_INTERVAL_TIME,
      TO_CHAR(HSS2.END_INTERVAL_TIME, 'SSSSS') -
        TO_CHAR(HSS2.BEGIN_INTERVAL_TIME, 'SSSSS') +
        86400 * (TO_CHAR(HSS2.END_INTERVAL_TIME, 'J') - 
                 TO_CHAR(HSS2.BEGIN_INTERVAL_TIME, 'J'))
        INTERVAL_SECONDS,
      DECODE(HSS2.STARTUP_TIME, HSS1.STARTUP_TIME, 'NO', 'YES') RESTART
    FROM 
      BASIS_INFO BI,
      DBA_HIST_SNAPSHOT HSS1, 
      DBA_HIST_SNAPSHOT HSS2
    WHERE
      HSS1.INSTANCE_NUMBER (+) = HSS2.INSTANCE_NUMBER AND
      HSS2.END_INTERVAL_TIME BETWEEN BI.BEGIN_TIME AND BI.END_TIME AND
      HSS1.SNAP_ID (+) = HSS2.SNAP_ID - 1
    ORDER BY
      HSS2.SNAP_ID
  )
),
WAIT_CLASS_PER_SNAPSHOT AS
(	SELECT /*+ MATERIALIZE */ 
		SNAP_ID,
		SERVICE_NAME,
		WAIT_CLASS,
		SUM(TOTAL_WAITS) TOTAL_WAITS,
		SUM(TIME_WAITED_S) TIME_WAITED_S
	FROM
	( SELECT  
		SS.SNAP_ID,
		DHSWC2.INSTANCE_NUMBER,
		DHSWC2.SERVICE_NAME,
		DHSWC2.WAIT_CLASS,
		DECODE(SS.RESTART, 'NO', DHSWC2.TOTAL_WAITS - NVL(DHSWC1.TOTAL_WAITS, 0), DHSWC2.TOTAL_WAITS) TOTAL_WAITS,
		DECODE(SS.RESTART, 'NO', DHSWC2.TIME_WAITED/100 - NVL(DHSWC1.TIME_WAITED, 0)/100, DHSWC2.TIME_WAITED/100) TIME_WAITED_S
	FROM
		DBA_HIST_SERVICE_WAIT_CLASS DHSWC1,
		DBA_HIST_SERVICE_WAIT_CLASS DHSWC2,
		SNAPSHOTS SS
	WHERE
		SS.INSTANCE_NUMBER = DHSWC2.INSTANCE_NUMBER AND
		DHSWC1.INSTANCE_NUMBER (+) = DHSWC2.INSTANCE_NUMBER AND
		SS.SNAP_ID = DHSWC2.SNAP_ID AND
		SS.PREV_SNAP_ID IS NOT NULL AND
		SS.SNAP_ID != SS.MIN_SNAP_ID AND
		DHSWC1.WAIT_CLASS (+) = DHSWC2.WAIT_CLASS AND
		DHSWC1.SERVICE_NAME (+) = DHSWC2.SERVICE_NAME AND
		DHSWC1.SNAP_ID (+) = DHSWC2.SNAP_ID - 1 AND
		DHSWC2.WAIT_CLASS != 'Idle' AND
		DHSWC2.WAIT_CLASS != 'Administrative' AND
		DHSWC2.WAIT_CLASS != 'System I/O'
    )
	GROUP BY
		SNAP_ID, SERVICE_NAME, WAIT_CLASS
	ORDER BY
		SNAP_ID, SERVICE_NAME, TIME_WAITED_S DESC
)
SELECT * FROM 
(
SELECT 
  'Since DB Start' BEGIN_TIME,	
  DECODE(SERVICE_NAME,'SYS$BACKGROUND','Oracle BG Workload','SYS$USERS','Non-SAP Workload',SERVICE_NAME) SERVICE_NAME,
  WAIT_CLASS,
  SUM(TOTAL_WAITS) TOTAL_WAITS,
  TO_CHAR(SUM(TIME_WAITED)/100,'9999999990.99') TIME_WAITED_S,
  TO_CHAR(DECODE(SUM(TOTAL_WAITS),0,0, SUM(TIME_WAITED)/100/SUM(TOTAL_WAITS)*1000),'99990.99') AVG_WAIT_MS
FROM 
  GV$SERVICE_WAIT_CLASS
WHERE
  WAIT_CLASS <> 'Idle' AND
  WAIT_CLASS <> 'Administrative' AND
  WAIT_CLASS <> 'System I/O'
GROUP BY
  SERVICE_NAME, WAIT_CLASS
ORDER BY
  SERVICE_NAME, TIME_WAITED_S DESC
)
UNION ALL
SELECT * FROM
(
SELECT
	BEGIN_TIME,
	DECODE(SERVICE_NAME,'SYS$BACKGROUND','Oracle BG Workload','SYS$USERS','Non-SAP Workload',SERVICE_NAME) SERVICE_NAME,
	WAIT_CLASS,
	SUM(TOTAL_WAITS) TOTAL_WAITS,
	TO_CHAR(SUM(TIME_WAITED_S),'999999990.99') TIME_WAITED_S,
	TO_CHAR(DECODE(SUM(TOTAL_WAITS),0,0,SUM(TIME_WAITED_S)/SUM(TOTAL_WAITS)*1000),'99990.99') AVG_WAIT_MS
FROM
	(	SELECT 
			TO_CHAR(SS.BEGIN_INTERVAL_TIME, BI.AGGREGATE_BY) BEGIN_TIME,
			WCPS.SERVICE_NAME,
			WCPS.WAIT_CLASS,
			WCPS.TOTAL_WAITS,
			WCPS.TIME_WAITED_S
		FROM
			SNAPSHOTS SS,
			WAIT_CLASS_PER_SNAPSHOT WCPS,
			BASIS_INFO BI
		WHERE
			SS.SNAP_ID = WCPS.SNAP_ID AND
			SS.PREV_SNAP_ID IS NOT NULL AND
			SS.SNAP_ID != SS.MIN_SNAP_ID
		ORDER BY
			SS.BEGIN_INTERVAL_TIME, WCPS.SERVICE_NAME, WCPS.TIME_WAITED_S DESC
	)	
GROUP BY
	BEGIN_TIME, SERVICE_NAME, WAIT_CLASS
ORDER BY
	BEGIN_TIME, SERVICE_NAME, TIME_WAITED_S DESC
)
)