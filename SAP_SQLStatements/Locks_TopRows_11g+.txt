SELECT NULL OBJECT_ID, NULL "FILE", NULL "BLOCK", NULL "ROW",
  NULL OCCURRENCES, NULL PERCENT FROM DUAL WHERE 1 = 0
UNION ALL (
SELECT NULL OBJECT_ID, NULL "FILE", NULL "BLOCK", NULL "ROW",
  NULL OCCURRENCES, NULL PERCENT FROM DUAL WHERE 1 = 0
) UNION ALL ( SELECT * FROM (
WITH BASIS_INFO AS
( SELECT /*+ INLINE */  /* hint sometimes required to push SNAP_IDs into DBA_HIST_ACTIVE_SESS_HISTORY */
    DECODE(DBID, -1, OWN_DBID, DBID) DBID,
    DECODE(INSTANCE_NUMBER, -1, USERENV('INSTANCE'), INSTANCE_NUMBER) INSTANCE_NUMBER,
    BEGIN_DATE,
    END_DATE,
    TO_TIMESTAMP(TO_CHAR(BEGIN_DATE, 'dd.mm.yyyy hh24:mi:ss'), 
      'dd.mm.yyyy hh24:mi:ss') BEGIN_TIME,
    TO_TIMESTAMP(TO_CHAR(END_DATE, 'dd.mm.yyyy hh24:mi:ss'), 
      'dd.mm.yyyy hh24:mi:ss') END_TIME,
    BEGIN_SNAP_ID,    
    END_SNAP_ID,
    SQL_ID,
    EVENT,
    NUM_RECORDS,
    DATA_SOURCE
  FROM
  ( SELECT
      -1 DBID,
      -1 INSTANCE_NUMBER,                 /* -1 for current instance, -2 for all instances */
      TO_DATE('01.01.2011 14:55:30', 'dd.mm.yyyy hh24:mi:ss') BEGIN_DATE,
      TO_DATE('31.12.9999 00:01:40', 'dd.mm.yyyy hh24:mi:ss') END_DATE,
      -1 BEGIN_SNAP_ID,   /* explicit SNAP_IDs sometimes required for ASH partition pruning */
      -1 END_SNAP_ID,
      'cs60z1439fufr' SQL_ID,
      'enq: TX - row lock contention' EVENT,
      10 NUM_RECORDS,
      'AWR' DATA_SOURCE              /* CURRENT, AWR */
    FROM
      DUAL
  ),
  ( SELECT DBID OWN_DBID FROM V$DATABASE ) 
),
SNAPSHOTS AS
( SELECT 
    HSS.DBID,
    HSS.INSTANCE_NUMBER,
    MIN(HSS.SNAP_ID) BEGIN_SNAP_ID,
    MIN(HSS.BEGIN_INTERVAL_TIME) BEGIN_TIME,
    MAX(HSS.SNAP_ID) END_SNAP_ID,
    MAX(HSS.END_INTERVAL_TIME) END_TIME
  FROM 
    DBA_HIST_SNAPSHOT HSS,
    BASIS_INFO BI
  WHERE
    HSS.DBID = BI.DBID AND
    HSS.END_INTERVAL_TIME >= BI.BEGIN_TIME AND
    HSS.BEGIN_INTERVAL_TIME <= BI.END_TIME AND
    ( BI.BEGIN_SNAP_ID = -1 OR
      HSS.SNAP_ID >= BI.BEGIN_SNAP_ID ) AND 
    ( BI.END_SNAP_ID = -1 OR
      HSS.SNAP_ID <= BI.END_SNAP_ID ) AND
    ( BI.INSTANCE_NUMBER = -2 OR
      HSS.INSTANCE_NUMBER = BI.INSTANCE_NUMBER )
  GROUP BY
    HSS.DBID,
    HSS.INSTANCE_NUMBER
)
SELECT DISTINCT
  'BEGIN TIME:' OBJECT_ID,
  TO_CHAR(GREATEST(BI.BEGIN_TIME, SS.BEGIN_TIME), 'dd.mm.yyyy') "FILE",
  TO_CHAR(GREATEST(BI.BEGIN_TIME, SS.BEGIN_TIME), 'hh24:mi:ss') "BLOCK",
  NULL "ROW",
  NULL OCCURRENCES,
  NULL PERCENT
FROM
  BASIS_INFO BI,
  SNAPSHOTS SS
UNION ALL
( SELECT DISTINCT
    'END TIME:' OBJECT_ID,
    TO_CHAR(LEAST(BI.END_TIME, SS.END_TIME), 'dd.mm.yyyy') "FILE",
    TO_CHAR(LEAST(BI.END_TIME, SS.END_TIME), 'hh24:mi:ss') "BLOCK",
    NULL "ROW",
    NULL OCCURRENCES,
    NULL PERCENT
  FROM
    BASIS_INFO BI,
    SNAPSHOTS SS
)
UNION ALL
( SELECT
    'SQL_ID: ' || DECODE(SQL_ID, '%', 'any', SQL_ID) OBJECT_ID,
    NULL "FILE",
    NULL "BLOCK",
    NULL "ROW",
    NULL OCCURRENCES,
    NULL PERCENT
  FROM
    BASIS_INFO
)
UNION ALL
( SELECT
    'EVENT: ' || DECODE(EVENT, '%', 'any', EVENT) OBJECT_ID,
    NULL "FILE",
    NULL "BLOCK",
    NULL "ROW",
    NULL OCCURRENCES,
    NULL PERCENT
  FROM
    BASIS_INFO
)
UNION ALL
( SELECT
    NULL OBJECT_ID,
    NULL "FILE",
    NULL "BLOCK",
    NULL "ROW",
    NULL OCCURRENCES,
    NULL PERCENT
  FROM
    BASIS_INFO
)
UNION ALL
( SELECT
    LPAD(CURRENT_OBJ#, GREATEST(19, LENGTH(EVENT) + 8)) OBJECT_ID,
    TO_CHAR(CURRENT_FILE#, 999999990) "FILE",
    TO_CHAR(CURRENT_BLOCK#, 9999990) "BLOCK",
    TO_CHAR(CURRENT_ROW#, 9990) "ROW",
    TO_CHAR(OCCURRENCES, 9999999990) OCCURRENCES,
    TO_CHAR(PERCENT, 990.99) PERCENT
  FROM
  ( SELECT
      ASH.CURRENT_OBJ#,
      ASH.CURRENT_FILE#,
      ASH.CURRENT_BLOCK#,
      ASH.CURRENT_ROW#,
      COUNT(*) OCCURRENCES,
      TO_CHAR(RATIO_TO_REPORT (COUNT(*)) OVER () * 100, 990.99) PERCENT,
      BI.NUM_RECORDS,
      ASH.EVENT
    FROM
      BASIS_INFO BI,
      SNAPSHOTS SS,
      DBA_HIST_ACTIVE_SESS_HISTORY ASH
    WHERE
      SS.DBID = ASH.DBID AND
      SS.INSTANCE_NUMBER = ASH.INSTANCE_NUMBER AND
      ASH.SNAP_ID BETWEEN SS.BEGIN_SNAP_ID AND SS.END_SNAP_ID AND
      ASH.SAMPLE_TIME BETWEEN BI.BEGIN_TIME AND BI.END_TIME AND
      ASH.EVENT LIKE BI.EVENT AND
      ASH.SQL_ID LIKE BI.SQL_ID AND
      ASH.SESSION_STATE = 'WAITING' AND
      BI.DATA_SOURCE = 'AWR'
    GROUP BY
      ASH.CURRENT_OBJ#,
      ASH.CURRENT_FILE#,
      ASH.CURRENT_BLOCK#,
      ASH.CURRENT_ROW#,
      BI.NUM_RECORDS,
      ASH.EVENT
    UNION ALL
    ( SELECT
        ASH.CURRENT_OBJ#,
        ASH.CURRENT_FILE#,
        ASH.CURRENT_BLOCK#,
        ASH.CURRENT_ROW#,
        COUNT(*) OCCURRENCES,
        TO_CHAR(RATIO_TO_REPORT (COUNT(*)) OVER () * 100, 990.99) PERCENT,
        BI.NUM_RECORDS,
        ASH.EVENT
      FROM
        BASIS_INFO BI,
        SNAPSHOTS SS,
        GV$ACTIVE_SESSION_HISTORY ASH
      WHERE
        SS.INSTANCE_NUMBER = ASH.INST_ID AND
        ASH.SAMPLE_TIME BETWEEN BI.BEGIN_TIME AND BI.END_TIME AND
        ASH.EVENT LIKE BI.EVENT AND
        ASH.SQL_ID LIKE BI.SQL_ID AND
        ASH.SESSION_STATE = 'WAITING' AND
        BI.DATA_SOURCE = 'CURRENT'
      GROUP BY
        ASH.CURRENT_OBJ#,
        ASH.CURRENT_FILE#,
        ASH.CURRENT_BLOCK#,
        ASH.CURRENT_ROW#,
        BI.NUM_RECORDS,
        ASH.EVENT
    )
    ORDER BY
      PERCENT DESC
  )
  WHERE
    ( NUM_RECORDS = -1 OR ROWNUM <= NUM_RECORDS )
)
));
